{"meta":{"title":"oosTech","subtitle":"","description":"","author":"Sam Lee","url":"http://www.oostech.com","root":"/"},"pages":[{"title":"文档分类","date":"2021-02-14T14:35:56.000Z","updated":"2021-02-14T14:35:56.000Z","comments":true,"path":"categories/index.html","permalink":"http://www.oostech.com/categories/index.html","excerpt":"","text":""},{"title":"共享文件","date":"2021-02-27T10:15:19.609Z","updated":"2021-02-27T10:15:19.609Z","comments":true,"path":"about/index.html","permalink":"http://www.oostech.com/about/index.html","excerpt":"","text":"Welcome to oosTech share pod欢迎来到 oosTech 的共享文件区，此区仅为临时文件中转，比如需要上大尺寸的logs， vmcore，测试iso 等 登陆FTP临时文件的传输中转站，可用总空间为 15 GB 注意！ 临时文件传输中转站绝对不允许出现以下任何一种情况，否则报公安部门处理（一）反对宪法所确定的基本原则的；（二）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；（三）损害国家荣誉和利益的；（四）煽动民族仇恨、民族歧视，破坏民族团结的；（五）破坏国家宗教政策，宣扬邪教和封建迷信的；（六）散布谣言，扰乱社会秩序，破坏社会稳定的；（七）散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪的；（八）侮辱或者诽谤他人，侵害他人合法权益的；（九）含有法律、行政法规禁止的其他内容的。"},{"title":"常用链接","date":"2021-02-17T06:52:07.393Z","updated":"2021-02-17T06:52:07.393Z","comments":true,"path":"links/index.html","permalink":"http://www.oostech.com/links/index.html","excerpt":"","text":""},{"title":"共享白板","date":"2021-02-27T13:29:03.676Z","updated":"2021-02-27T13:29:03.676Z","comments":true,"path":"repository/index.html","permalink":"http://www.oostech.com/repository/index.html","excerpt":"","text":"Welcome to oosTech share pad!!欢迎来到 oosTech 的共享白板This pad text is synchronized as you type, so that everyone viewing this page sees the same text. This allows you to collaborate seamlessly on documents! This is based on Etherpad在您输入时，文本是同步的，查看此页面的每个人都可以看到相同的文本。您和您的团队可以在文档上进行无缝协作！ 此pad基于Etherpad 项目，尽情的享用吧 Enjoy :D 启动白板注意！ 共享白板中绝对不允许出现以下任何一种情况，否则报公安部门处理（一）反对宪法所确定的基本原则的；（二）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；（三）损害国家荣誉和利益的；（四）煽动民族仇恨、民族歧视，破坏民族团结的；（五）破坏国家宗教政策，宣扬邪教和封建迷信的；（六）散布谣言，扰乱社会秩序，破坏社会稳定的；（七）散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪的；（八）侮辱或者诽谤他人，侵害他人合法权益的；（九）含有法律、行政法规禁止的其他内容的。"},{"title":"共享白板","date":"2021-02-27T11:18:30.528Z","updated":"2021-02-27T11:18:30.528Z","comments":true,"path":"sharepad/index.html","permalink":"http://www.oostech.com/sharepad/index.html","excerpt":"","text":"Welcome to oosTech share pad!!欢迎来到 oosTech 的共享白板This pad text is synchronized as you type, so that everyone viewing this page sees the same text. This allows you to collaborate seamlessly on documents! This is based on Etherpad在您输入时，文本是同步的，查看此页面的每个人都可以看到相同的文本。您和您的团队可以在文档上进行无缝协作！ 此pad基于Etherpad 项目，尽情的享用吧 Enjoy :D 启动白板注意！ 共享白板中绝对不允许出现以下任何一种情况，否则报公安部门处理（一）反对宪法所确定的基本原则的；（二）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；（三）损害国家荣誉和利益的；（四）煽动民族仇恨、民族歧视，破坏民族团结的；（五）破坏国家宗教政策，宣扬邪教和封建迷信的；（六）散布谣言，扰乱社会秩序，破坏社会稳定的；（七）散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪的；（八）侮辱或者诽谤他人，侵害他人合法权益的；（九）含有法律、行政法规禁止的其他内容的。"}],"posts":[{"title":"RHEL8 内核参数 Kernel-4.18.0-240.15.1.el8_3_kernel-parameters","slug":"Kernel-4.18.0-240.15.1.el8_3_kernel-parameters","date":"2021-03-06T16:00:00.000Z","updated":"2021-03-06T16:00:00.000Z","comments":false,"path":"2021/03/07/Kernel-4.18.0-240.15.1.el8_3_kernel-parameters/","link":"","permalink":"http://www.oostech.com/2021/03/07/Kernel-4.18.0-240.15.1.el8_3_kernel-parameters/","excerpt":"","text":"acpi= [HW,ACPI,X86,ARM64] Advanced Configuration and Power Interface Format: &#123; force | on | off | strict | noirq | rsdt | copy_dsdt &#125; force -- enable ACPI if default was off on -- enable ACPI but allow fallback to DT [arm64] off -- disable ACPI if default was on noirq -- do not use ACPI for IRQ routing strict -- Be less tolerant of platforms that are not strictly ACPI specification compliant. rsdt -- prefer RSDT over (default) XSDT copy_dsdt -- copy DSDT to memory For ARM64, ONLY &quot;acpi=off&quot;, &quot;acpi=on&quot; or &quot;acpi=force&quot; are available See also Documentation/power/runtime_pm.rst, pci=noacpi acpi_apic_instance= [ACPI, IOAPIC] Format: &lt;int&gt; 2: use 2nd APIC table, if available 1,0: use 1st APIC table default: 0 acpi_backlight= [HW,ACPI] acpi_backlight=vendor acpi_backlight=video If set to vendor, prefer vendor specific driver (e.g. thinkpad_acpi, sony_acpi, etc.) instead of the ACPI video.ko driver. acpi_force_32bit_fadt_addr force FADT to use 32 bit addresses rather than the 64 bit X_* addresses. Some firmware have broken 64 bit addresses for force ACPI ignore these and use the older legacy 32 bit addresses. acpica_no_return_repair [HW, ACPI] Disable AML predefined validation mechanism This mechanism can repair the evaluation result to make the return objects more ACPI specification compliant. This option is useful for developers to identify the root cause of an AML interpreter issue when the issue has something to do with the repair mechanism. acpi.debug_layer= [HW,ACPI,ACPI_DEBUG] acpi.debug_level= [HW,ACPI,ACPI_DEBUG] Format: &lt;int&gt; CONFIG_ACPI_DEBUG must be enabled to produce any ACPI debug output. Bits in debug_layer correspond to a _COMPONENT in an ACPI source file, e.g., #define _COMPONENT ACPI_PCI_COMPONENT Bits in debug_level correspond to a level in ACPI_DEBUG_PRINT statements, e.g., ACPI_DEBUG_PRINT((ACPI_DB_INFO, ... The debug_level mask defaults to &quot;info&quot;. See Documentation/acpi/debug.txt for more information about debug layers and levels. Enable processor driver info messages: acpi.debug_layer=0x20000000 Enable PCI/PCI interrupt routing info messages: acpi.debug_layer=0x400000 Enable AML &quot;Debug&quot; output, i.e., stores to the Debug object while interpreting AML: acpi.debug_layer=0xffffffff acpi.debug_level=0x2 Enable all messages related to ACPI hardware: acpi.debug_layer=0x2 acpi.debug_level=0xffffffff Some values produce so much output that the system is unusable. The &quot;log_buf_len&quot; parameter may be useful if you need to capture more output. acpi_enforce_resources= [ACPI] &#123; strict | lax | no &#125; Check for resource conflicts between native drivers and ACPI OperationRegions (SystemIO and SystemMemory only). IO ports and memory declared in ACPI might be used by the ACPI subsystem in arbitrary AML code and can interfere with legacy drivers. strict (default): access to resources claimed by ACPI is denied; legacy drivers trying to access reserved resources will fail to bind to device using them. lax: access to resources claimed by ACPI is allowed; legacy drivers trying to access reserved resources will bind successfully but a warning message is logged. no: ACPI OperationRegions are not marked as reserved, no further checks are performed. acpi_force_table_verification [HW,ACPI] Enable table checksum verification during early stage. By default, this is disabled due to x86 early mapping size limitation. acpi_irq_balance [HW,ACPI] ACPI will balance active IRQs default in APIC mode acpi_irq_nobalance [HW,ACPI] ACPI will not move active IRQs (default) default in PIC mode acpi_irq_isa= [HW,ACPI] If irq_balance, mark listed IRQs used by ISA Format: &lt;irq&gt;,&lt;irq&gt;... acpi_irq_pci= [HW,ACPI] If irq_balance, clear listed IRQs for use by PCI Format: &lt;irq&gt;,&lt;irq&gt;... acpi_mask_gpe= [HW,ACPI] Due to the existence of _Lxx/_Exx, some GPEs triggered by unsupported hardware/firmware features can result in GPE floodings that cannot be automatically disabled by the GPE dispatcher. This facility can be used to prevent such uncontrolled GPE floodings. Format: &lt;byte&gt; acpi_no_auto_serialize [HW,ACPI] Disable auto-serialization of AML methods AML control methods that contain the opcodes to create named objects will be marked as &quot;Serialized&quot; by the auto-serialization feature. This feature is enabled by default. This option allows to turn off the feature. acpi_no_memhotplug [ACPI] Disable memory hotplug. Useful for kdump kernels. acpi_no_static_ssdt [HW,ACPI] Disable installation of static SSDTs at early boot time By default, SSDTs contained in the RSDT/XSDT will be installed automatically and they will appear under /sys/firmware/acpi/tables. This option turns off this feature. Note that specifying this option does not affect dynamic table installation which will install SSDT tables to /sys/firmware/acpi/tables/dynamic. acpi_no_watchdog [HW,ACPI,WDT] Ignore the ACPI-based watchdog interface (WDAT) and let a native driver control the watchdog device instead. acpi_rsdp= [ACPI,EFI,KEXEC] Pass the RSDP address to the kernel, mostly used on machines running EFI runtime service to boot the second kernel for kdump. acpi_os_name= [HW,ACPI] Tell ACPI BIOS the name of the OS Format: To spoof as Windows 98: =&quot;Microsoft Windows&quot; acpi_rev_override [ACPI] Override the _REV object to return 5 (instead of 2 which is mandated by ACPI 6) as the supported ACPI specification revision (when using this switch, it may be necessary to carry out a cold reboot _twice_ in a row to make it take effect on the platform firmware). acpi_osi= [HW,ACPI] Modify list of supported OS interface strings acpi_osi=&quot;string1&quot; # add string1 acpi_osi=&quot;!string2&quot; # remove string2 acpi_osi=!* # remove all strings acpi_osi=! # disable all built-in OS vendor strings acpi_osi=!! # enable all built-in OS vendor strings acpi_osi= # disable all strings &#39;acpi_osi=!&#39; can be used in combination with single or multiple &#39;acpi_osi=&quot;string1&quot;&#39; to support specific OS vendor string(s). Note that such command can only affect the default state of the OS vendor strings, thus it cannot affect the default state of the feature group strings and the current state of the OS vendor strings, specifying it multiple times through kernel command line is meaningless. This command is useful when one do not care about the state of the feature group strings which should be controlled by the OSPM. Examples: 1. &#39;acpi_osi=! acpi_osi=&quot;Windows 2000&quot;&#39; is equivalent to &#39;acpi_osi=&quot;Windows 2000&quot; acpi_osi=!&#39;, they all can make &#39;_OSI(&quot;Windows 2000&quot;)&#39; TRUE. &#39;acpi_osi=&#39; cannot be used in combination with other &#39;acpi_osi=&#39; command lines, the _OSI method will not exist in the ACPI namespace. NOTE that such command can only affect the _OSI support state, thus specifying it multiple times through kernel command line is also meaningless. Examples: 1. &#39;acpi_osi=&#39; can make &#39;CondRefOf(_OSI, Local1)&#39; FALSE. &#39;acpi_osi=!*&#39; can be used in combination with single or multiple &#39;acpi_osi=&quot;string1&quot;&#39; to support specific string(s). Note that such command can affect the current state of both the OS vendor strings and the feature group strings, thus specifying it multiple times through kernel command line is meaningful. But it may still not able to affect the final state of a string if there are quirks related to this string. This command is useful when one want to control the state of the feature group strings to debug BIOS issues related to the OSPM features. Examples: 1. &#39;acpi_osi=&quot;Module Device&quot; acpi_osi=!*&#39; can make &#39;_OSI(&quot;Module Device&quot;)&#39; FALSE. 2. &#39;acpi_osi=!* acpi_osi=&quot;Module Device&quot;&#39; can make &#39;_OSI(&quot;Module Device&quot;)&#39; TRUE. 3. &#39;acpi_osi=! acpi_osi=!* acpi_osi=&quot;Windows 2000&quot;&#39; is equivalent to &#39;acpi_osi=!* acpi_osi=! acpi_osi=&quot;Windows 2000&quot;&#39; and &#39;acpi_osi=!* acpi_osi=&quot;Windows 2000&quot; acpi_osi=!&#39;, they all will make &#39;_OSI(&quot;Windows 2000&quot;)&#39; TRUE. acpi_pm_good [X86] Override the pmtimer bug detection: force the kernel to assume that this machine&#39;s pmtimer latches its value and always returns good values. acpi_sci= [HW,ACPI] ACPI System Control Interrupt trigger mode Format: &#123; level | edge | high | low &#125; acpi_skip_timer_override [HW,ACPI] Recognize and ignore IRQ0/pin2 Interrupt Override. For broken nForce2 BIOS resulting in XT-PIC timer. acpi_sleep= [HW,ACPI] Sleep options Format: &#123; s3_bios, s3_mode, s3_beep, s4_nohwsig, old_ordering, nonvs, sci_force_enable, nobl &#125; See Documentation/power/video.rst for information on s3_bios and s3_mode. s3_beep is for debugging; it makes the PC&#39;s speaker beep as soon as the kernel&#39;s real-mode entry point is called. s4_nohwsig prevents ACPI hardware signature from being used during resume from hibernation. old_ordering causes the ACPI 1.0 ordering of the _PTS control method, with respect to putting devices into low power states, to be enforced (the ACPI 2.0 ordering of _PTS is used by default). nonvs prevents the kernel from saving/restoring the ACPI NVS memory during suspend/hibernation and resume. sci_force_enable causes the kernel to set SCI_EN directly on resume from S1/S3 (which is against the ACPI spec, but some broken systems don&#39;t work without it). nobl causes the internal blacklist of systems known to behave incorrectly in some ways with respect to system suspend and resume to be ignored (use wisely). acpi_use_timer_override [HW,ACPI] Use timer override. For some broken Nvidia NF5 boards that require a timer override, but don&#39;t have HPET add_efi_memmap [EFI; X86] Include EFI memory map in kernel&#39;s map of available physical RAM. agp= [AGP] &#123; off | try_unsupported &#125; off: disable AGP support try_unsupported: try to drive unsupported chipsets (may crash computer or cause data corruption) ALSA [HW,ALSA] See Documentation/sound/alsa-configuration.rst alignment= [KNL,ARM] Allow the default userspace alignment fault handler behaviour to be specified. Bit 0 enables warnings, bit 1 enables fixups, and bit 2 sends a segfault. align_va_addr= [X86-64] Align virtual addresses by clearing slice [14:12] when allocating a VMA at process creation time. This option gives you up to 3% performance improvement on AMD F15h machines (where it is enabled by default) for a CPU-intensive style benchmark, and it can vary highly in a microbenchmark depending on workload and compiler. 32: only for 32-bit processes 64: only for 64-bit processes on: enable for both 32- and 64-bit processes off: disable for both 32- and 64-bit processes alloc_snapshot [FTRACE] Allocate the ftrace snapshot buffer on boot up when the main buffer is allocated. This is handy if debugging and you need to use tracing_snapshot() on boot up, and do not want to use tracing_snapshot_alloc() as it needs to be done where GFP_KERNEL allocations are allowed. amd_iommu= [HW,X86-64] Pass parameters to the AMD IOMMU driver in the system. Possible values are: fullflush - enable flushing of IO/TLB entries when they are unmapped. Otherwise they are flushed before they will be reused, which is a lot of faster off - do not initialize any AMD IOMMU found in the system force_isolation - Force device isolation for all devices. The IOMMU driver is not allowed anymore to lift isolation requirements as needed. This option does not override iommu=pt amd_iommu_dump= [HW,X86-64] Enable AMD IOMMU driver option to dump the ACPI table for AMD IOMMU. With this option enabled, AMD IOMMU driver will print ACPI tables for AMD IOMMU during IOMMU initialization. amd_iommu_intr= [HW,X86-64] Specifies one of the following AMD IOMMU interrupt remapping modes: legacy - Use legacy interrupt remapping mode. vapic - Use virtual APIC mode, which allows IOMMU to inject interrupts directly into guest. This mode requires kvm-amd.avic=1. (Default when IOMMU HW support is present.) amijoy.map= [HW,JOY] Amiga joystick support Map of devices attached to JOY0DAT and JOY1DAT Format: &lt;a&gt;,&lt;b&gt; See also Documentation/input/joydev/joystick.rst analog.map= [HW,JOY] Analog joystick and gamepad support Specifies type or capabilities of an analog joystick connected to one of 16 gameports Format: &lt;type1&gt;,&lt;type2&gt;,..&lt;type16&gt; apc= [HW,SPARC] Power management functions (SPARCstation-4/5 + deriv.) Format: noidle Disable APC CPU standby support. SPARCstation-Fox does not play well with APC CPU idle - disable it if you have APC and your system crashes randomly. apic= [APIC,X86] Advanced Programmable Interrupt Controller Change the output verbosity whilst booting Format: &#123; quiet (default) | verbose | debug &#125; Change the amount of debugging information output when initialising the APIC and IO-APIC components. For X86-32, this can also be used to specify an APIC driver name. Format: apic=driver_name Examples: apic=bigsmp apic_extnmi= [APIC,X86] External NMI delivery setting Format: &#123; bsp (default) | all | none &#125; bsp: External NMI is delivered only to CPU 0 all: External NMIs are broadcast to all CPUs as a backup of CPU 0 none: External NMI is masked for all CPUs. This is useful so that a dump capture kernel won&#39;t be shot down by NMI autoconf= [IPV6] See Documentation/networking/ipv6.txt. show_lapic= [APIC,X86] Advanced Programmable Interrupt Controller Limit apic dumping. The parameter defines the maximal number of local apics being dumped. Also it is possible to set it to &quot;all&quot; by meaning -- no limit here. Format: &#123; 1 (default) | 2 | ... | all &#125;. The parameter valid if only apic=debug or apic=verbose is specified. Example: apic=debug show_lapic=all apm= [APM] Advanced Power Management See header of arch/x86/kernel/apm_32.c. arcrimi= [HW,NET] ARCnet - &quot;RIM I&quot; (entirely mem-mapped) cards Format: &lt;io&gt;,&lt;irq&gt;,&lt;nodeID&gt; ataflop= [HW,M68k] atarimouse= [HW,MOUSE] Atari Mouse atkbd.extra= [HW] Enable extra LEDs and keys on IBM RapidAccess, EzKey and similar keyboards atkbd.reset= [HW] Reset keyboard during initialization atkbd.set= [HW] Select keyboard code set Format: &lt;int&gt; (2 = AT (default), 3 = PS/2) atkbd.scroll= [HW] Enable scroll wheel on MS Office and similar keyboards atkbd.softraw= [HW] Choose between synthetic and real raw mode Format: &lt;bool&gt; (0 = real, 1 = synthetic (default)) atkbd.softrepeat= [HW] Use software keyboard repeat audit= [KNL] Enable the audit sub-system Format: &#123; &quot;0&quot; | &quot;1&quot; | &quot;off&quot; | &quot;on&quot; &#125; 0 | off - kernel audit is disabled and can not be enabled until the next reboot unset - kernel audit is initialized but disabled and will be fully enabled by the userspace auditd. 1 | on - kernel audit is initialized and partially enabled, storing at most audit_backlog_limit messages in RAM until it is fully enabled by the userspace auditd. Default: unset audit_backlog_limit= [KNL] Set the audit queue size limit. Format: &lt;int&gt; (must be &gt;=0) Default: 64 bau= [X86_UV] Enable the BAU on SGI UV. The default behavior is to disable the BAU (i.e. bau=0). Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 - Disable the BAU. 1 - Enable the BAU. unset - Disable the BAU. baycom_epp= [HW,AX25] Format: &lt;io&gt;,&lt;mode&gt; baycom_par= [HW,AX25] BayCom Parallel Port AX.25 Modem Format: &lt;io&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_par.c. baycom_ser_fdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Full Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt;[,&lt;baud&gt;] See header of drivers/net/hamradio/baycom_ser_fdx.c. baycom_ser_hdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Half Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_ser_hdx.c. blkdevparts= Manual partition parsing of block device(s) for embedded devices based on command line input. See Documentation/block/cmdline-partition.txt boot_delay= Milliseconds to delay each printk during boot. Values larger than 10 seconds (10000) are changed to no delay (0). Format: integer bootmem_debug [KNL] Enable bootmem allocator debug messages. bert_disable [ACPI] Disable BERT OS support on buggy BIOSes. bttv.card= [HW,V4L] bttv (bt848 + bt878 based grabber cards) bttv.radio= Most important insmod options are available as kernel args too. bttv.pll= See Documentation/media/v4l-drivers/bttv.rst bttv.tuner= bulk_remove=off [PPC] This parameter disables the use of the pSeries firmware feature for flushing multiple hpte entries at a time. c101= [NET] Moxa C101 synchronous serial card cachesize= [BUGS=X86-32] Override level 2 CPU cache size detection. Sometimes CPU hardware bugs make them report the cache size incorrectly. The kernel will attempt work arounds to fix known problems, but for some CPUs it is not possible to determine what the correct size should be. This option provides an override for these situations. ca_keys= [KEYS] This parameter identifies a specific key(s) on the system trusted keyring to be used for certificate trust validation. format: &#123; id:&lt;keyid&gt; | builtin &#125; cca= [MIPS] Override the kernel pages&#39; cache coherency algorithm. Accepted values range from 0 to 7 inclusive. See arch/mips/include/asm/pgtable-bits.h for platform specific values (SB1, Loongson3 and others). ccw_timeout_log [S390] See Documentation/s390/common_io.rst for details. cgroup_disable= [KNL] Disable a particular controller Format: &#123;name of the controller(s) to disable&#125; The effects of cgroup_disable=foo are: - foo isn&#39;t auto-mounted if you mount all cgroups in a single hierarchy - foo isn&#39;t visible as an individually mountable subsystem &#123;Currently only &quot;memory&quot; controller deal with this and cut the overhead, others just disable the usage. So only cgroup_disable=memory is actually worthy&#125; cgroup_no_v1= [KNL] Disable cgroup controllers and named hierarchies in v1 Format: &#123; &#123; controller | &quot;all&quot; | &quot;named&quot; &#125; [,&#123; controller | &quot;all&quot; | &quot;named&quot; &#125;...] &#125; Like cgroup_disable, but only applies to cgroup v1; the blacklisted controllers remain available in cgroup2. &quot;all&quot; blacklists all controllers and &quot;named&quot; disables named mounts. Specifying both &quot;all&quot; and &quot;named&quot; disables all v1 hierarchies. cgroup.memory= [KNL] Pass options to the cgroup memory controller. Format: &lt;string&gt; nosocket -- Disable socket memory accounting. nokmem -- Disable kernel memory accounting. checkreqprot [SELINUX] Set initial checkreqprot flag value. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- check protection applied by kernel (includes any implied execute protection). 1 -- check protection requested by application. Default value is set via a kernel config option. Value can be changed at runtime via /sys/fs/selinux/checkreqprot. cio_ignore= [S390] See Documentation/s390/common_io.rst for details. clk_ignore_unused [CLK] Prevents the clock framework from automatically gating clocks that have not been explicitly enabled by a Linux device driver but are enabled in hardware at reset or by the bootloader/firmware. Note that this does not force such clocks to be always-on nor does it reserve those clocks in any way. This parameter is useful for debug and development, but should not be needed on a platform with proper driver support. For more information, see Documentation/driver-api/clk.rst. clock= [BUGS=X86-32, HW] gettimeofday clocksource override. [Deprecated] Forces specified clocksource (if available) to be used when calculating gettimeofday(). If specified clocksource is not available, it defaults to PIT. Format: &#123; pit | tsc | cyclone | pmtmr &#125; clocksource= Override the default clocksource Format: &lt;string&gt; Override the default clocksource and use the clocksource with the name specified. Some clocksource names to choose from, depending on the platform: [all] jiffies (this is the base, fallback clocksource) [ACPI] acpi_pm [ARM] imx_timer1,OSTS,netx_timer,mpu_timer2, pxa_timer,timer3,32k_counter,timer0_1 [X86-32] pit,hpet,tsc; scx200_hrt on Geode; cyclone on IBM x440 [MIPS] MIPS [PARISC] cr16 [S390] tod [SH] SuperH [SPARC64] tick [X86-64] hpet,tsc clocksource.arm_arch_timer.evtstrm= [ARM,ARM64] Format: &lt;bool&gt; Enable/disable the eventstream feature of the ARM architected timer so that code using WFE-based polling loops can be debugged more effectively on production systems. clearcpuid=BITNUM [X86] Disable CPUID feature X for the kernel. See arch/x86/include/asm/cpufeatures.h for the valid bit numbers. Note the Linux specific bits are not necessarily stable over kernel options, but the vendor specific ones should be. Also note that user programs calling CPUID directly or using the feature without checking anything will still see it. This just prevents it from being used by the kernel or shown in /proc/cpuinfo. Also note the kernel might malfunction if you disable some critical bits. cma=nn[MG]@[start[MG][-end[MG]]] [ARM,X86,KNL] Sets the size of kernel global memory area for contiguous memory allocations and optionally the placement constraint by the physical address range of memory allocations. A value of 0 disables CMA altogether. For more information, see include/linux/dma-contiguous.h cmo_free_hint= [PPC] Format: &#123; yes | no &#125; Specify whether pages are marked as being inactive when they are freed. This is used in CMO environments to determine OS memory pressure for page stealing by a hypervisor. Default: yes coherent_pool=nn[KMG] [ARM,KNL] Sets the size of memory pool for coherent, atomic dma allocations, by default set to 256K. com20020= [HW,NET] ARCnet - COM20020 chipset Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;nodeID&gt;[,&lt;backplane&gt;[,&lt;ckp&gt;[,&lt;timeout&gt;]]]]] com90io= [HW,NET] ARCnet - COM90xx chipset (IO-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;] com90xx= [HW,NET] ARCnet - COM90xx chipset (memory-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;memstart&gt;]] condev= [HW,S390] console device conmode= console= [KNL] Output console device and options. tty&lt;n&gt; Use the virtual console device &lt;n&gt;. ttyS&lt;n&gt;[,options] ttyUSB0[,options] Use the specified serial port. The options are of the form &quot;bbbbpnf&quot;, where &quot;bbbb&quot; is the baud rate, &quot;p&quot; is parity (&quot;n&quot;, &quot;o&quot;, or &quot;e&quot;), &quot;n&quot; is number of bits, and &quot;f&quot; is flow control (&quot;r&quot; for RTS or omit it). Default is &quot;9600n8&quot;. See Documentation/admin-guide/serial-console.rst for more information. See Documentation/networking/netconsole.txt for an alternative. uart[8250],io,&lt;addr&gt;[,options] uart[8250],mmio,&lt;addr&gt;[,options] uart[8250],mmio16,&lt;addr&gt;[,options] uart[8250],mmio32,&lt;addr&gt;[,options] uart[8250],0x&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address, switching to the matching ttyS device later. MMIO inter-register address stride is either 8-bit (mmio), 16-bit (mmio16), or 32-bit (mmio32). If none of [io|mmio|mmio16|mmio32], &lt;addr&gt; is assumed to be equivalent to &#39;mmio&#39;. &#39;options&#39; are specified in the same format described for ttyS above; if unspecified, the h/w is not re-initialized. hvc&lt;n&gt; Use the hypervisor console device &lt;n&gt;. This is for both Xen and PowerPC hypervisors. If the device connected to the port is not a TTY but a braille device, prepend &quot;brl,&quot; before the device type, for instance console=brl,ttyS0 For now, only VisioBraille is supported. console_msg_format= [KNL] Change console messages format default By default we print messages on consoles in &quot;[time stamp] text\\n&quot; format (time stamp may not be printed, depending on CONFIG_PRINTK_TIME or `printk_time&#39; param). syslog Switch to syslog format: &quot;&lt;%u&gt;[time stamp] text\\n&quot; IOW, each message will have a facility and loglevel prefix. The format is similar to one used by syslog() syscall, or to executing &quot;dmesg -S --raw&quot; or to reading from /proc/kmsg. consoleblank= [KNL] The console blank (screen saver) timeout in seconds. A value of 0 disables the blank timer. Defaults to 0. coredump_filter= [KNL] Change the default value for /proc/&lt;pid&gt;/coredump_filter. See also Documentation/filesystems/proc.txt. coresight_cpu_debug.enable [ARM,ARM64] Format: &lt;bool&gt; Enable/disable the CPU sampling based debugging. 0: default value, disable debugging 1: enable debugging at boot time cpuidle.off=1 [CPU_IDLE] disable the cpuidle sub-system cpuidle.governor= [CPU_IDLE] Name of the cpuidle governor to use. cpufreq.off=1 [CPU_FREQ] disable the cpufreq sub-system cpu_init_udelay=N [X86] Delay for N microsec between assert and de-assert of APIC INIT to start processors. This delay occurs on every CPU online, such as boot, and resume from suspend. Default: 10000 cpcihp_generic= [HW,PCI] Generic port I/O CompactPCI driver Format: &lt;first_slot&gt;,&lt;last_slot&gt;,&lt;port&gt;,&lt;enum_bit&gt;[,&lt;debug&gt;] crashkernel=size[KMG][@offset[KMG]] [KNL] Using kexec, Linux can switch to a &#39;crash kernel&#39; upon panic. This parameter reserves the physical memory region [offset, offset + size] for that kernel image. If &#39;@offset&#39; is omitted, then a suitable offset is selected automatically. [KNL, x86_64] select a region under 4G first, and fall back to reserve region above 4G when &#39;@offset&#39; hasn&#39;t been specified. See Documentation/kdump/kdump.txt for further details. crashkernel=range1:size1[,range2:size2,...][@offset] [KNL] Same as above, but depends on the memory in the running system. The syntax of range is start-[end] where start and end are both a memory unit (amount[KMG]). See also Documentation/kdump/kdump.txt for an example. crashkernel=size[KMG],high [KNL, x86_64] range could be above 4G. Allow kernel to allocate physical memory region from top, so could be above 4G if system have more than 4G ram installed. Otherwise memory region will be allocated below 4G, if available. It will be ignored if crashkernel=X is specified. crashkernel=size[KMG],low [KNL, x86_64] range under 4G. When crashkernel=X,high is passed, kernel could allocate physical memory region above 4G, that cause second kernel crash on system that require some amount of low memory, e.g. swiotlb requires at least 64M+32K low memory, also enough extra low memory is needed to make sure DMA buffers for 32-bit devices won&#39;t run out. Kernel would try to allocate at at least 256M below 4G automatically. This one let user to specify own low range under 4G for second kernel instead. 0: to disable low allocation. It will be ignored when crashkernel=X,high is not used or memory reserved is below 4G. cryptomgr.notests [KNL] Disable crypto self-tests cs89x0_dma= [HW,NET] Format: &lt;dma&gt; cs89x0_media= [HW,NET] Format: &#123; rj45 | aui | bnc &#125; dasd= [HW,NET] See header of drivers/s390/block/dasd_devmap.c. db9.dev[2|3]= [HW,JOY] Multisystem joystick support via parallel port (one device per port) Format: &lt;port#&gt;,&lt;type&gt; See also Documentation/input/devices/joystick-parport.rst ddebug_query= [KNL,DYNAMIC_DEBUG] Enable debug messages at early boot time. See Documentation/admin-guide/dynamic-debug-howto.rst for details. Deprecated, see dyndbg. debug [KNL] Enable kernel debugging (events log level). debug_boot_weak_hash [KNL] Enable printing [hashed] pointers early in the boot sequence. If enabled, we use a weak hash instead of siphash to hash pointers. Use this option if you are seeing instances of &#39;(___ptrval___)&#39;) and need to see a value (hashed pointer) instead. Cryptographically insecure, please do not use on production kernels. debug_locks_verbose= [KNL] verbose self-tests Format=&lt;0|1&gt; Print debugging info while doing the locking API self-tests. We default to 0 (no extra messages), setting it to 1 will print _a lot_ more information - normally only useful to kernel developers. debug_objects [KNL] Enable object debugging no_debug_objects [KNL] Disable object debugging debug_guardpage_minorder= [KNL] When CONFIG_DEBUG_PAGEALLOC is set, this parameter allows control of the order of pages that will be intentionally kept free (and hence protected) by the buddy allocator. Bigger value increase the probability of catching random memory corruption, but reduce the amount of memory for normal system use. The maximum possible value is MAX_ORDER/2. Setting this parameter to 1 or 2 should be enough to identify most random memory corruption problems caused by bugs in kernel or driver code when a CPU writes to (or reads from) a random memory location. Note that there exists a class of memory corruptions problems caused by buggy H/W or F/W or by drivers badly programing DMA (basically when memory is written at bus level and the CPU MMU is bypassed) which are not detectable by CONFIG_DEBUG_PAGEALLOC, hence this option will not help tracking down these problems. debug_pagealloc= [KNL] When CONFIG_DEBUG_PAGEALLOC is set, this parameter enables the feature at boot time. In default, it is disabled. We can avoid allocating huge chunk of memory for debug pagealloc if we don&#39;t enable it at boot time and the system will work mostly same with the kernel built without CONFIG_DEBUG_PAGEALLOC. on: enable the feature debugpat [X86] Enable PAT debugging decnet.addr= [HW,NET] Format: &lt;area&gt;[,&lt;node&gt;] See also Documentation/networking/decnet.txt. default_hugepagesz= [HW] The size of the default HugeTLB page. This is the size represented by the legacy /proc/ hugepages APIs. In addition, this is the default hugetlb size used for shmget(), mmap() and mounting hugetlbfs filesystems. If not specified, defaults to the architecture&#39;s default huge page size. Huge page sizes are architecture dependent. See also Documentation/admin-guide/mm/hugetlbpage.rst. Format: size[KMG] deferred_probe_timeout= [KNL] Debugging option to set a timeout in seconds for deferred probe to give up waiting on dependencies to probe. Only specific dependencies (subsystems or drivers) that have opted in will be ignored. A timeout of 0 will timeout at the end of initcalls. This option will also dump out devices still on the deferred probe list after retrying. dfltcc= [HW,S390] Format: &#123; on | off | def_only | inf_only | always &#125; on: s390 zlib hardware support for compression on level 1 and decompression (default) off: No s390 zlib hardware support def_only: s390 zlib hardware support for deflate only (compression on level 1) inf_only: s390 zlib hardware support for inflate only (decompression) always: Same as &#39;on&#39; but ignores the selected compression level always using hardware support (used for debugging) dhash_entries= [KNL] Set number of hash buckets for dentry cache. disable_1tb_segments [PPC] Disables the use of 1TB hash page table segments. This causes the kernel to fall back to 256MB segments which can be useful when debugging issues that require an SLB miss to occur. disable= [IPV6] See Documentation/networking/ipv6.txt. hardened_usercopy= [KNL] Under CONFIG_HARDENED_USERCOPY, whether hardening is enabled for this boot. Hardened usercopy checking is used to protect the kernel from reading or writing beyond known memory allocation boundaries as a proactive defense against bounds-checking flaws in the kernel&#39;s copy_to_user()/copy_from_user() interface. on Perform hardened usercopy checks (default). off Disable hardened usercopy checks. disable_radix [PPC] Disable RADIX MMU mode on POWER9 disable_cpu_apicid= [X86,APIC,SMP] Format: &lt;int&gt; The number of initial APIC ID for the corresponding CPU to be disabled at boot, mostly used for the kdump 2nd kernel to disable BSP to wake up multiple CPUs without causing system reset or hang due to sending INIT from AP to BSP. perf_v4_pmi= [X86,INTEL] Format: &lt;bool&gt; Disable Intel PMU counter freezing feature. The feature only exists starting from Arch Perfmon v4 (Skylake and newer). disable_ddw [PPC/PSERIES] Disable Dynamic DMA Window support. Use this if to workaround buggy firmware. disable_ipv6= [IPV6] See Documentation/networking/ipv6.txt. disable_mtrr_cleanup [X86] The kernel tries to adjust MTRR layout from continuous to discrete, to make X server driver able to add WB entry later. This parameter disables that. disable_mtrr_trim [X86, Intel and AMD only] By default the kernel will trim any uncacheable memory out of your available memory pool based on MTRR settings. This parameter disables that behavior, possibly causing your machine to run very slowly. disable_timer_pin_1 [X86] Disable PIN 1 of APIC timer Can be useful to work around chipset bugs. dis_ucode_ldr [X86] Disable the microcode loader. dma_debug=off If the kernel is compiled with DMA_API_DEBUG support, this option disables the debugging code at boot. dma_debug_entries=&lt;number&gt; This option allows to tune the number of preallocated entries for DMA-API debugging code. One entry is required per DMA-API allocation. Use this if the DMA-API debugging code disables itself because the architectural default is too low. dma_debug_driver=&lt;driver_name&gt; With this option the DMA-API debugging driver filter feature can be enabled at boot time. Just pass the driver to filter for as the parameter. The filter can be disabled or changed to another driver later using sysfs. drm.edid_firmware=[&lt;connector&gt;:]&lt;file&gt;[,[&lt;connector&gt;:]&lt;file&gt;] Broken monitors, graphic adapters, KVMs and EDIDless panels may send no or incorrect EDID data sets. This parameter allows to specify an EDID data sets in the /lib/firmware directory that are used instead. Generic built-in EDID data sets are used, if one of edid/1024x768.bin, edid/1280x1024.bin, edid/1680x1050.bin, or edid/1920x1080.bin is given and no file with the same name exists. Details and instructions how to build your own EDID data are available in Documentation/EDID/HOWTO.txt. An EDID data set will only be used for a particular connector, if its name and a colon are prepended to the EDID name. Each connector may use a unique EDID data set by separating the files with a comma. An EDID data set with no connector name will be used for any connectors not explicitly specified. dscc4.setup= [NET] dt_cpu_ftrs= [PPC] Format: &#123;&quot;off&quot; | &quot;known&quot;&#125; Control how the dt_cpu_ftrs device-tree binding is used for CPU feature discovery and setup (if it exists). off: Do not use it, fall back to legacy cpu table. known: Do not pass through unknown features to guests or userspace, only those that the kernel is aware of. dump_apple_properties [X86] Dump name and content of EFI device properties on x86 Macs. Useful for driver authors to determine what data is available or for reverse-engineering. dyndbg[=&quot;val&quot;] [KNL,DYNAMIC_DEBUG] module.dyndbg[=&quot;val&quot;] Enable debug messages at boot time. See Documentation/admin-guide/dynamic-debug-howto.rst for details. nompx [X86] Disables Intel Memory Protection Extensions. See Documentation/x86/intel_mpx.txt for more information about the feature. nopku [X86] Disable Memory Protection Keys CPU feature found in some Intel CPUs. module.async_probe [KNL] Enable asynchronous probe on this module. early_ioremap_debug [KNL] Enable debug messages in early_ioremap support. This is useful for tracking down temporary early mappings which are not unmapped. earlycon= [KNL] Output early console device and options. [ARM64] The early console is determined by the stdout-path property in device tree&#39;s chosen node, or determined by the ACPI SPCR table. [X86] When used with no options the early console is determined by the ACPI SPCR table. cdns,&lt;addr&gt;[,options] Start an early, polled-mode console on a Cadence (xuartps) serial port at the specified address. Only supported option is baud rate. If baud rate is not specified, the serial port must already be setup and configured. uart[8250],io,&lt;addr&gt;[,options] uart[8250],mmio,&lt;addr&gt;[,options] uart[8250],mmio32,&lt;addr&gt;[,options] uart[8250],mmio32be,&lt;addr&gt;[,options] uart[8250],0x&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address. MMIO inter-register address stride is either 8-bit (mmio) or 32-bit (mmio32 or mmio32be). If none of [io|mmio|mmio32|mmio32be], &lt;addr&gt; is assumed to be equivalent to &#39;mmio&#39;. &#39;options&#39; are specified in the same format described for &quot;console=ttyS&lt;n&gt;&quot;; if unspecified, the h/w is not initialized. pl011,&lt;addr&gt; pl011,mmio32,&lt;addr&gt; Start an early, polled-mode console on a pl011 serial port at the specified address. The pl011 serial port must already be setup and configured. Options are not yet supported. If &#39;mmio32&#39; is specified, then only the driver will use only 32-bit accessors to read/write the device registers. meson,&lt;addr&gt; Start an early, polled-mode console on a meson serial port at the specified address. The serial port must already be setup and configured. Options are not yet supported. msm_serial,&lt;addr&gt; Start an early, polled-mode console on an msm serial port at the specified address. The serial port must already be setup and configured. Options are not yet supported. msm_serial_dm,&lt;addr&gt; Start an early, polled-mode console on an msm serial dm port at the specified address. The serial port must already be setup and configured. Options are not yet supported. owl,&lt;addr&gt; Start an early, polled-mode console on a serial port of an Actions Semi SoC, such as S500 or S900, at the specified address. The serial port must already be setup and configured. Options are not yet supported. smh Use ARM semihosting calls for early console. s3c2410,&lt;addr&gt; s3c2412,&lt;addr&gt; s3c2440,&lt;addr&gt; s3c6400,&lt;addr&gt; s5pv210,&lt;addr&gt; exynos4210,&lt;addr&gt; Use early console provided by serial driver available on Samsung SoCs, requires selecting proper type and a correct base address of the selected UART port. The serial port must already be setup and configured. Options are not yet supported. lantiq,&lt;addr&gt; Start an early, polled-mode console on a lantiq serial (lqasc) port at the specified address. The serial port must already be setup and configured. Options are not yet supported. lpuart,&lt;addr&gt; lpuart32,&lt;addr&gt; Use early console provided by Freescale LP UART driver found on Freescale Vybrid and QorIQ LS1021A processors. A valid base address must be provided, and the serial port must already be setup and configured. ar3700_uart,&lt;addr&gt; Start an early, polled-mode console on the Armada 3700 serial port at the specified address. The serial port must already be setup and configured. Options are not yet supported. qcom_geni,&lt;addr&gt; Start an early, polled-mode console on a Qualcomm Generic Interface (GENI) based serial port at the specified address. The serial port must already be setup and configured. Options are not yet supported. earlyprintk= [X86,SH,ARM,M68k,S390] earlyprintk=vga earlyprintk=efi earlyprintk=sclp earlyprintk=xen earlyprintk=serial[,ttySn[,baudrate]] earlyprintk=serial[,0x...[,baudrate]] earlyprintk=ttySn[,baudrate] earlyprintk=dbgp[debugController#] earlyprintk=pciserial,bus:device.function[,baudrate] earlyprintk=xdbc[xhciController#] earlyprintk is useful when the kernel crashes before the normal console is initialized. It is not enabled by default because it has some cosmetic problems. Append &quot;,keep&quot; to not disable it when the real console takes over. Only one of vga, efi, serial, or usb debug port can be used at a time. Currently only ttyS0 and ttyS1 may be specified by name. Other I/O ports may be explicitly specified on some architectures (x86 and arm at least) by replacing ttySn with an I/O port address, like this: earlyprintk=serial,0x1008,115200 You can find the port for a given device in /proc/tty/driver/serial: 2: uart:ST16650V2 port:00001008 irq:18 ... Interaction with the standard serial driver is not very good. The VGA and EFI output is eventually overwritten by the real console. The xen output can only be used by Xen PV guests. The sclp output can only be used on s390. edac_report= [HW,EDAC] Control how to report EDAC event Format: &#123;&quot;on&quot; | &quot;off&quot; | &quot;force&quot;&#125; on: enable EDAC to report H/W event. May be overridden by other higher priority error reporting module. off: disable H/W event reporting through EDAC. force: enforce the use of EDAC to report H/W event. default: on. ekgdboc= [X86,KGDB] Allow early kernel console debugging ekgdboc=kbd This is designed to be used in conjunction with the boot argument: earlyprintk=vga edd= [EDD] Format: &#123;&quot;off&quot; | &quot;on&quot; | &quot;skip[mbr]&quot;&#125; efi= [EFI] Format: &#123; &quot;old_map&quot;, &quot;nochunk&quot;, &quot;noruntime&quot;, &quot;debug&quot;, &quot;nosoftreserve&quot; &#125; old_map [X86-64]: switch to the old ioremap-based EFI runtime services mapping. 32-bit still uses this one by default. nochunk: disable reading files in &quot;chunks&quot; in the EFI boot stub, as chunking can cause problems with some firmware implementations. noruntime : disable EFI runtime services support debug: enable misc debug output nosoftreserve: The EFI_MEMORY_SP (Specific Purpose) attribute may cause the kernel to reserve the memory range for a memory mapping driver to claim. Specify efi=nosoftreserve to disable this reservation and treat the memory by its base type (i.e. EFI_CONVENTIONAL_MEMORY / &quot;System RAM&quot;). efi_no_storage_paranoia [EFI; X86] Using this parameter you can use more than 50% of your efi variable storage. Use this parameter only if you are really sure that your UEFI does sane gc and fulfills the spec otherwise your board may brick. efi_fake_mem= nn[KMG]@ss[KMG]:aa[,nn[KMG]@ss[KMG]:aa,..] [EFI; X86] Add arbitrary attribute to specific memory range by updating original EFI memory map. Region of memory which aa attribute is added to is from ss to ss+nn. If efi_fake_mem=2G@4G:0x10000,2G@0x10a0000000:0x10000 is specified, EFI_MEMORY_MORE_RELIABLE(0x10000) attribute is added to range 0x100000000-0x180000000 and 0x10a0000000-0x1120000000. Using this parameter you can do debugging of EFI memmap related feature. For example, you can do debugging of Address Range Mirroring feature even if your box doesn&#39;t support it. efivar_ssdt= [EFI; X86] Name of an EFI variable that contains an SSDT that is to be dynamically loaded by Linux. If there are multiple variables with the same name but with different vendor GUIDs, all of them will be loaded. See Documentation/acpi/ssdt-overlays.txt for details. eisa_irq_edge= [PARISC,HW] See header of drivers/parisc/eisa.c. elanfreq= [X86-32] See comment before function elanfreq_setup() in arch/x86/kernel/cpu/cpufreq/elanfreq.c. elevator= [IOSCHED] Format: &#123;&quot;cfq&quot; | &quot;deadline&quot; | &quot;noop&quot;&#125; See Documentation/block/cfq-iosched.txt and Documentation/block/deadline-iosched.txt for details. elfcorehdr=[size[KMG]@]offset[KMG] [IA64,PPC,SH,X86,S390] Specifies physical address of start of kernel core image elf header and optionally the size. Generally kexec loader will pass this option to capture kernel. See Documentation/kdump/kdump.txt for details. enable_mtrr_cleanup [X86] The kernel tries to adjust MTRR layout from continuous to discrete, to make X server driver able to add WB entry later. This parameter enables that. enable_timer_pin_1 [X86] Enable PIN 1 of APIC timer Can be useful to work around chipset bugs (in particular on some ATI chipsets). The kernel tries to set a reasonable default. enforcing [SELINUX] Set initial enforcing status. Format: &#123;&quot;0&quot; | &quot;1&quot;&#125; See security/selinux/Kconfig help text. 0 -- permissive (log only, no denials). 1 -- enforcing (deny and log). Default value is 0. Value can be changed at runtime via /sys/fs/selinux/enforce. erst_disable [ACPI] Disable Error Record Serialization Table (ERST) support. ether= [HW,NET] Ethernet cards parameters This option is obsoleted by the &quot;netdev=&quot; option, which has equivalent usage. See its documentation for details. evm= [EVM] Format: &#123; &quot;fix&quot; &#125; Permit &#39;security.evm&#39; to be updated regardless of current integrity status. failslab= fail_page_alloc= fail_make_request=[KNL] General fault injection mechanism. Format: &lt;interval&gt;,&lt;probability&gt;,&lt;space&gt;,&lt;times&gt; See also Documentation/fault-injection/. floppy= [HW] See Documentation/blockdev/floppy.txt. force_pal_cache_flush [IA-64] Avoid check_sal_cache_flush which may hang on buggy SAL_CACHE_FLUSH implementations. Using this parameter will force ia64_sal_cache_flush to call ia64_pal_cache_flush instead of SAL_CACHE_FLUSH. forcepae [X86-32] Forcefully enable Physical Address Extension (PAE). Many Pentium M systems disable PAE but may have a functionally usable PAE implementation. Warning: use of this parameter will taint the kernel and may cause unknown problems. ftrace=[tracer] [FTRACE] will set and start the specified tracer as early as possible in order to facilitate early boot debugging. ftrace_dump_on_oops[=orig_cpu] [FTRACE] will dump the trace buffers on oops. If no parameter is passed, ftrace will dump buffers of all CPUs, but if you pass orig_cpu, it will dump only the buffer of the CPU that triggered the oops. ftrace_filter=[function-list] [FTRACE] Limit the functions traced by the function tracer at boot up. function-list is a comma separated list of functions. This list can be changed at run time by the set_ftrace_filter file in the debugfs tracing directory. ftrace_notrace=[function-list] [FTRACE] Do not trace the functions specified in function-list. This list can be changed at run time by the set_ftrace_notrace file in the debugfs tracing directory. ftrace_graph_filter=[function-list] [FTRACE] Limit the top level callers functions traced by the function graph tracer at boot up. function-list is a comma separated list of functions that can be changed at run time by the set_graph_function file in the debugfs tracing directory. ftrace_graph_notrace=[function-list] [FTRACE] Do not trace from the functions specified in function-list. This list is a comma separated list of functions that can be changed at run time by the set_graph_notrace file in the debugfs tracing directory. ftrace_graph_max_depth=&lt;uint&gt; [FTRACE] Used with the function graph tracer. This is the max depth it will trace into a function. This value can be changed at run time by the max_graph_depth file in the tracefs tracing directory. default: 0 (no limit) gamecon.map[2|3]= [HW,JOY] Multisystem joystick and NES/SNES/PSX pad support via parallel port (up to 5 devices per port) Format: &lt;port#&gt;,&lt;pad1&gt;,&lt;pad2&gt;,&lt;pad3&gt;,&lt;pad4&gt;,&lt;pad5&gt; See also Documentation/input/devices/joystick-parport.rst gamma= [HW,DRM] gart_fix_e820= [X86_64] disable the fix e820 for K8 GART Format: off | on default: on gcov_persist= [GCOV] When non-zero (default), profiling data for kernel modules is saved and remains accessible via debugfs, even when the module is unloaded/reloaded. When zero, profiling data is discarded and associated debugfs files are removed at module unload time. goldfish [X86] Enable the goldfish android emulator platform. Don&#39;t use this when you are not running on the android emulator gpt [EFI] Forces disk with valid GPT signature but invalid Protective MBR to be treated as GPT. If the primary GPT is corrupted, it enables the backup/alternate GPT to be used instead. grcan.enable0= [HW] Configuration of physical interface 0. Determines the &quot;Enable 0&quot; bit of the configuration register. Format: 0 | 1 Default: 0 grcan.enable1= [HW] Configuration of physical interface 1. Determines the &quot;Enable 0&quot; bit of the configuration register. Format: 0 | 1 Default: 0 grcan.select= [HW] Select which physical interface to use. Format: 0 | 1 Default: 0 grcan.txsize= [HW] Sets the size of the tx buffer. Format: &lt;unsigned int&gt; such that (txsize &amp; ~0x1fffc0) == 0. Default: 1024 grcan.rxsize= [HW] Sets the size of the rx buffer. Format: &lt;unsigned int&gt; such that (rxsize &amp; ~0x1fffc0) == 0. Default: 1024 gpio-mockup.gpio_mockup_ranges [HW] Sets the ranges of gpiochip of for this device. Format: &lt;start1&gt;,&lt;end1&gt;,&lt;start2&gt;,&lt;end2&gt;... hardlockup_all_cpu_backtrace= [KNL] Should the hard-lockup detector generate backtraces on all cpus. Format: &lt;integer&gt; hashdist= [KNL,NUMA] Large hashes allocated during boot are distributed across NUMA nodes. Defaults on for 64-bit NUMA, off otherwise. Format: 0 | 1 (for off | on) hcl= [IA-64] SGI&#39;s Hardware Graph compatibility layer hd= [EIDE] (E)IDE hard drive subsystem geometry Format: &lt;cyl&gt;,&lt;head&gt;,&lt;sect&gt; hest_disable [ACPI] Disable Hardware Error Source Table (HEST) support; corresponding firmware-first mode error processing logic will be disabled. highmem=nn[KMG] [KNL,BOOT] forces the highmem zone to have an exact size of &lt;nn&gt;. This works even on boxes that have no highmem otherwise. This also works to reduce highmem size on bigger boxes. highres= [KNL] Enable/disable high resolution timer mode. Valid parameters: &quot;on&quot;, &quot;off&quot; Default: &quot;on&quot; hisax= [HW,ISDN] See Documentation/isdn/README.HiSax. hlt [BUGS=ARM,SH] hpet= [X86-32,HPET] option to control HPET usage Format: &#123; enable (default) | disable | force | verbose &#125; disable: disable HPET and use PIT instead force: allow force enabled of undocumented chips (ICH4, VIA, nVidia) verbose: show contents of HPET registers during setup hpet_mmap= [X86, HPET_MMAP] Allow userspace to mmap HPET registers. Default set by CONFIG_HPET_MMAP_DEFAULT. hugepages= [HW] Number of HugeTLB pages to allocate at boot. If this follows hugepagesz (below), it specifies the number of pages of hugepagesz to be allocated. If this is the first HugeTLB parameter on the command line, it specifies the number of pages to allocate for the default huge page size. See also Documentation/admin-guide/mm/hugetlbpage.rst. Format: &lt;integer&gt; hugepagesz= [HW] The size of the HugeTLB pages. This is used in conjunction with hugepages (above) to allocate huge pages of a specific size at boot. The pair hugepagesz=X hugepages=Y can be specified once for each supported huge page size. Huge page sizes are architecture dependent. See also Documentation/admin-guide/mm/hugetlbpage.rst. Format: size[KMG] hung_task_panic= [KNL] Should the hung task detector generate panics. Format: &lt;integer&gt; A nonzero value instructs the kernel to panic when a hung task is detected. The default value is controlled by the CONFIG_BOOTPARAM_HUNG_TASK_PANIC build-time option. The value selected by this boot parameter can be changed later by the kernel.hung_task_panic sysctl. hvc_iucv= [S390] Number of z/VM IUCV hypervisor console (HVC) terminal devices. Valid values: 0..8 hvc_iucv_allow= [S390] Comma-separated list of z/VM user IDs. If specified, z/VM IUCV HVC accepts connections from listed z/VM user IDs only. hv_nopvspin [X86,HYPER_V] Disables the paravirt spinlock optimizations which allow the hypervisor to &#39;idle&#39; the guest on lock contention. keep_bootcon [KNL] Do not unregister boot console at start. This is only useful for debugging when something happens in the window between unregistering the boot console and initializing the real console. i2c_bus= [HW] Override the default board specific I2C bus speed or register an additional I2C bus that is not registered from board initialization code. Format: &lt;bus_id&gt;,&lt;clkrate&gt; i8042.debug [HW] Toggle i8042 debug mode i8042.unmask_kbd_data [HW] Enable printing of interrupt data from the KBD port (disabled by default, and as a pre-condition requires that i8042.debug=1 be enabled) i8042.direct [HW] Put keyboard port into non-translated mode i8042.dumbkbd [HW] Pretend that controller can only read data from keyboard and cannot control its state (Don&#39;t attempt to blink the leds) i8042.noaux [HW] Don&#39;t check for auxiliary (== mouse) port i8042.nokbd [HW] Don&#39;t check/create keyboard port i8042.noloop [HW] Disable the AUX Loopback command while probing for the AUX port i8042.nomux [HW] Don&#39;t check presence of an active multiplexing controller i8042.nopnp [HW] Don&#39;t use ACPIPnP / PnPBIOS to discover KBD/AUX controllers i8042.notimeout [HW] Ignore timeout condition signalled by controller i8042.reset [HW] Reset the controller during init, cleanup and suspend-to-ram transitions, only during s2r transitions, or never reset Format: &#123; 1 | Y | y | 0 | N | n &#125; 1, Y, y: always reset controller 0, N, n: don&#39;t ever reset controller Default: only on s2r transitions on x86; most other architectures force reset to be always executed i8042.unlock [HW] Unlock (ignore) the keylock i8042.kbdreset [HW] Reset device connected to KBD port i810= [HW,DRM] i8k.ignore_dmi [HW] Continue probing hardware even if DMI data indicates that the driver is running on unsupported hardware. i8k.force [HW] Activate i8k driver even if SMM BIOS signature does not match list of supported models. i8k.power_status [HW] Report power status in /proc/i8k (disabled by default) i8k.restricted [HW] Allow controlling fans only if SYS_ADMIN capability is set. i915.invert_brightness= [DRM] Invert the sense of the variable that is used to set the brightness of the panel backlight. Normally a brightness value of 0 indicates backlight switched off, and the maximum of the brightness value sets the backlight to maximum brightness. If this parameter is set to 0 (default) and the machine requires it, or this parameter is set to 1, a brightness value of 0 sets the backlight to maximum brightness, and the maximum of the brightness value switches the backlight off. -1 -- never invert brightness 0 -- machine default 1 -- force brightness inversion icn= [HW,ISDN] Format: &lt;io&gt;[,&lt;membase&gt;[,&lt;icn_id&gt;[,&lt;icn_id2&gt;]]] ide-core.nodma= [HW] (E)IDE subsystem Format: =0.0 to prevent dma on hda, =0.1 hdb =1.0 hdc .vlb_clock .pci_clock .noflush .nohpa .noprobe .nowerr .cdrom .chs .ignore_cable are additional options See Documentation/ide/ide.txt. ide-generic.probe-mask= [HW] (E)IDE subsystem Format: &lt;int&gt; Probe mask for legacy ISA IDE ports. Depending on platform up to 6 ports are supported, enabled by setting corresponding bits in the mask to 1. The default value is 0x0, which has a special meaning. On systems that have PCI, it triggers scanning the PCI bus for the first and the second port, which are then probed. On systems without PCI the value of 0x0 enables probing the two first ports as if it was 0x3. ide-pci-generic.all-generic-ide [HW] (E)IDE subsystem Claim all unknown PCI IDE storage controllers. idle= [X86] Format: idle=poll, idle=halt, idle=nomwait Poll forces a polling idle loop that can slightly improve the performance of waking up a idle CPU, but will use a lot of power and make the system run hot. Not recommended. idle=halt: Halt is forced to be used for CPU idle. In such case C2/C3 won&#39;t be used again. idle=nomwait: Disable mwait for CPU C-states ieee754= [MIPS] Select IEEE Std 754 conformance mode Format: &#123; strict | legacy | 2008 | relaxed &#125; Default: strict Choose which programs will be accepted for execution based on the IEEE 754 NaN encoding(s) supported by the FPU and the NaN encoding requested with the value of an ELF file header flag individually set by each binary. Hardware implementations are permitted to support either or both of the legacy and the 2008 NaN encoding mode. Available settings are as follows: strict accept binaries that request a NaN encoding supported by the FPU legacy only accept legacy-NaN binaries, if supported by the FPU 2008 only accept 2008-NaN binaries, if supported by the FPU relaxed accept any binaries regardless of whether supported by the FPU The FPU emulator is always able to support both NaN encodings, so if no FPU hardware is present or it has been disabled with &#39;nofpu&#39;, then the settings of &#39;legacy&#39; and &#39;2008&#39; strap the emulator accordingly, &#39;relaxed&#39; straps the emulator for both legacy-NaN and 2008-NaN, whereas &#39;strict&#39; enables legacy-NaN only on legacy processors and both NaN encodings on MIPS32 or MIPS64 CPUs. The setting for ABS.fmt/NEG.fmt instruction execution mode generally follows that for the NaN encoding, except where unsupported by hardware. ignore_loglevel [KNL] Ignore loglevel setting - this will print /all/ kernel messages to the console. Useful for debugging. We also add it as printk module parameter, so users could change it dynamically, usually by /sys/module/printk/parameters/ignore_loglevel. ignore_rlimit_data Ignore RLIMIT_DATA setting for data mappings, print warning at first misuse. Can be changed via /sys/module/kernel/parameters/ignore_rlimit_data. ihash_entries= [KNL] Set number of hash buckets for inode cache. ima_appraise= [IMA] appraise integrity measurements Format: &#123; &quot;off&quot; | &quot;enforce&quot; | &quot;fix&quot; | &quot;log&quot; &#125; default: &quot;enforce&quot; ima_appraise_tcb [IMA] The builtin appraise policy appraises all files owned by uid=0. ima_canonical_fmt [IMA] Use the canonical format for the binary runtime measurements, instead of host native format. ima_hash= [IMA] Format: &#123; md5 | sha1 | rmd160 | sha256 | sha384 | sha512 | ... &#125; default: &quot;sha1&quot; The list of supported hash algorithms is defined in crypto/hash_info.h. ima_policy= [IMA] The builtin policies to load during IMA setup. Format: &quot;tcb | appraise_tcb | secure_boot | fail_securely&quot; The &quot;tcb&quot; policy measures all programs exec&#39;d, files mmap&#39;d for exec, and all files opened with the read mode bit set by either the effective uid (euid=0) or uid=0. The &quot;appraise_tcb&quot; policy appraises the integrity of all files owned by root. (This is the equivalent of ima_appraise_tcb.) The &quot;secure_boot&quot; policy appraises the integrity of files (eg. kexec kernel image, kernel modules, firmware, policy, etc) based on file signatures. The &quot;fail_securely&quot; policy forces file signature verification failure also on privileged mounted filesystems with the SB_I_UNVERIFIABLE_SIGNATURE flag. ima_tcb [IMA] Deprecated. Use ima_policy= instead. Load a policy which meets the needs of the Trusted Computing Base. This means IMA will measure all programs exec&#39;d, files mmap&#39;d for exec, and all files opened for read by uid=0. ima_template= [IMA] Select one of defined IMA measurements template formats. Formats: &#123; &quot;ima&quot; | &quot;ima-ng&quot; | &quot;ima-sig&quot; &#125; Default: &quot;ima-ng&quot; ima_template_fmt= [IMA] Define a custom template format. Format: &#123; &quot;field1|...|fieldN&quot; &#125; ima.ahash_minsize= [IMA] Minimum file size for asynchronous hash usage Format: &lt;min_file_size&gt; Set the minimal file size for using asynchronous hash. If left unspecified, ahash usage is disabled. ahash performance varies for different data sizes on different crypto accelerators. This option can be used to achieve the best performance for a particular HW. ima.ahash_bufsize= [IMA] Asynchronous hash buffer size Format: &lt;bufsize&gt; Set hashing buffer size. Default: 4k. ahash performance varies for different chunk sizes on different crypto accelerators. This option can be used to achieve best performance for particular HW. init= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /sbin/init as init process. initcall_debug [KNL] Trace initcalls as they are executed. Useful for working out where the kernel is dying during startup. initcall_blacklist= [KNL] Do not execute a comma-separated list of initcall functions. Useful for debugging built-in modules and initcalls. initrd= [BOOT] Specify the location of the initial ramdisk init_pkru= [x86] Specify the default memory protection keys rights register contents for all processes. 0x55555554 by default (disallow access to all but pkey 0). Can override in debugfs after boot. inport.irq= [HW] Inport (ATI XL and Microsoft) busmouse driver Format: &lt;irq&gt; int_pln_enable [x86] Enable power limit notification interrupt integrity_audit=[IMA] Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 -- basic integrity auditing messages. (Default) 1 -- additional integrity auditing messages. intel_iommu= [DMAR] Intel IOMMU driver (DMAR) option on Enable intel iommu driver. off Disable intel iommu driver. igfx_off [Default Off] By default, gfx is mapped as normal device. If a gfx device has a dedicated DMAR unit, the DMAR unit is bypassed by not enabling DMAR with this option. In this case, gfx device will use physical address for DMA. forcedac [x86_64] With this option iommu will not optimize to look for io virtual address below 32-bit forcing dual address cycle on pci bus for cards supporting greater than 32-bit addressing. The default is to look for translation below 32-bit and if not available then look in the higher range. strict [Default Off] With this option on every unmap_single operation will result in a hardware IOTLB flush operation as opposed to batching them for performance. sp_off [Default Off] By default, super page will be supported if Intel IOMMU has the capability. With this option, super page will not be supported. sm_on [Default Off] By default, scalable mode will be disabled even if the hardware advertises that it has support for the scalable mode translation. With this option set, scalable mode will be used on hardware which claims to support it. tboot_noforce [Default Off] Do not force the Intel IOMMU enabled under tboot. By default, tboot will force Intel IOMMU on, which could harm performance of some high-throughput devices like 40GBit network cards, even if identity mapping is enabled. Note that using this option lowers the security provided by tboot because it makes the system vulnerable to DMA attacks. nobounce [Default off] Disable bounce buffer for unstrusted devices such as the Thunderbolt devices. This will treat the untrusted devices as the trusted ones, hence might expose security risks of DMA attacks. intel_idle.max_cstate= [KNL,HW,ACPI,X86] 0 disables intel_idle and fall back on acpi_idle. 1 to 9 specify maximum depth of C-state. intel_pstate= [X86] disable Do not enable intel_pstate as the default scaling driver for the supported processors passive Use intel_pstate as a scaling driver, but configure it to work with generic cpufreq governors (instead of enabling its internal governor). This mode cannot be used along with the hardware-managed P-states (HWP) feature. force Enable intel_pstate on systems that prohibit it by default in favor of acpi-cpufreq. Forcing the intel_pstate driver instead of acpi-cpufreq may disable platform features, such as thermal controls and power capping, that rely on ACPI P-States information being indicated to OSPM and therefore should be used with caution. This option does not work with processors that aren&#39;t supported by the intel_pstate driver or on platforms that use pcc-cpufreq instead of acpi-cpufreq. no_hwp Do not enable hardware P state control (HWP) if available. hwp_only Only load intel_pstate on systems which support hardware P state control (HWP) if available. support_acpi_ppc Enforce ACPI _PPC performance limits. If the Fixed ACPI Description Table, specifies preferred power management profile as &quot;Enterprise Server&quot; or &quot;Performance Server&quot;, then this feature is turned on by default. per_cpu_perf_limits Allow per-logical-CPU P-State performance control limits using cpufreq sysfs interface intremap= [X86-64, Intel-IOMMU] on enable Interrupt Remapping (default) off disable Interrupt Remapping nosid disable Source ID checking no_x2apic_optout BIOS x2APIC opt-out request will be ignored nopost disable Interrupt Posting iomem= Disable strict checking of access to MMIO memory strict regions from userspace. relaxed iommu= [x86] off force noforce biomerge panic nopanic merge nomerge soft pt [x86] nopt [x86] nobypass [PPC/POWERNV] Disable IOMMU bypass, using IOMMU for PCI devices. iommu.strict= [ARM64] Configure TLB invalidation behaviour Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 - Lazy mode. Request that DMA unmap operations use deferred invalidation of hardware TLBs, for increased throughput at the cost of reduced device isolation. Will fall back to strict mode if not supported by the relevant IOMMU driver. 1 - Strict mode (default). DMA unmap operations invalidate IOMMU hardware TLBs synchronously. iommu.passthrough= [ARM64, X86] Configure DMA to bypass the IOMMU by default. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 - Use IOMMU translation for DMA. 1 - Bypass the IOMMU for DMA. unset - Use value of CONFIG_IOMMU_DEFAULT_PASSTHROUGH. io7= [HW] IO7 for Marvel based alpha systems See comment before marvel_specify_io7 in arch/alpha/kernel/core_marvel.c. io_delay= [X86] I/O delay method 0x80 Standard port 0x80 based delay 0xed Alternate port 0xed based delay (needed on some systems) udelay Simple two microseconds delay none No delay ip= [IP_PNP] See Documentation/filesystems/nfs/nfsroot.txt. ipcmni_extend [KNL] Extend the maximum number of unique System V IPC identifiers from 32,768 to 16,777,216. irqaffinity= [SMP] Set the default irq affinity mask The argument is a cpu list, as described above. irqchip.gicv2_force_probe= [ARM, ARM64] Format: &lt;bool&gt; Force the kernel to look for the second 4kB page of a GICv2 controller even if the memory range exposed by the device tree is too small. irqchip.gicv3_nolpi= [ARM, ARM64] Force the kernel to ignore the availability of LPIs (and by consequence ITSs). Intended for system that use the kernel as a bootloader, and thus want to let secondary kernels in charge of setting up LPIs. irqchip.gicv3_pseudo_nmi= [ARM64] Enables support for pseudo-NMIs in the kernel. This requires the kernel to be built with CONFIG_ARM64_PSEUDO_NMI. irqfixup [HW] When an interrupt is not handled search all handlers for it. Intended to get systems with badly broken firmware running. irqpoll [HW] When an interrupt is not handled search all handlers for it. Also check all handlers each timer interrupt. Intended to get systems with badly broken firmware running. isapnp= [ISAPNP] Format: &lt;RDP&gt;,&lt;reset&gt;,&lt;pci_scan&gt;,&lt;verbosity&gt; isolcpus= [KNL,SMP,ISOL] Isolate a given set of CPUs from disturbance. [Deprecated - use cpusets instead] Format: [flag-list,]&lt;cpu-list&gt; Specify one or more CPUs to isolate from disturbances specified in the flag list (default: domain): nohz Disable the tick when a single task runs. A residual 1Hz tick is offloaded to workqueues, which you need to affine to housekeeping through the global workqueue&#39;s affinity configured via the /sys/devices/virtual/workqueue/cpumask sysfs file, or by using the &#39;domain&#39; flag described below. NOTE: by default the global workqueue runs on all CPUs, so to protect individual CPUs the &#39;cpumask&#39; file has to be configured manually after bootup. domain Isolate from the general SMP balancing and scheduling algorithms. Note that performing domain isolation this way is irreversible: it&#39;s not possible to bring back a CPU to the domains once isolated through isolcpus. It&#39;s strongly advised to use cpusets instead to disable scheduler load balancing through the &quot;cpuset.sched_load_balance&quot; file. It offers a much more flexible interface where CPUs can move in and out of an isolated set anytime. You can move a process onto or off an &quot;isolated&quot; CPU via the CPU affinity syscalls or cpuset. &lt;cpu number&gt; begins at 0 and the maximum value is &quot;number of CPUs in system - 1&quot;. managed_irq Isolate from being targeted by managed interrupts which have an interrupt mask containing isolated CPUs. The affinity of managed interrupts is handled by the kernel and cannot be changed via the /proc/irq/* interfaces. This isolation is best effort and only effective if the automatically assigned interrupt mask of a device queue contains isolated and housekeeping CPUs. If housekeeping CPUs are online then such interrupts are directed to the housekeeping CPU so that IO submitted on the housekeeping CPU cannot disturb the isolated CPU. If a queue&#39;s affinity mask contains only isolated CPUs then this parameter has no effect on the interrupt routing decision, though interrupts are only delivered when tasks running on those isolated CPUs submit IO. IO submitted on housekeeping CPUs has no influence on those queues. The format of &lt;cpu-list&gt; is described above. iucv= [HW,NET] ivrs_ioapic [HW,X86_64] Provide an override to the IOAPIC-ID&lt;-&gt;DEVICE-ID mapping provided in the IVRS ACPI table. For example, to map IOAPIC-ID decimal 10 to PCI device 00:14.0 write the parameter as: ivrs_ioapic[10]=00:14.0 ivrs_hpet [HW,X86_64] Provide an override to the HPET-ID&lt;-&gt;DEVICE-ID mapping provided in the IVRS ACPI table. For example, to map HPET-ID decimal 0 to PCI device 00:14.0 write the parameter as: ivrs_hpet[0]=00:14.0 ivrs_acpihid [HW,X86_64] Provide an override to the ACPI-HID:UID&lt;-&gt;DEVICE-ID mapping provided in the IVRS ACPI table. For example, to map UART-HID:UID AMD0020:0 to PCI device 00:14.5 write the parameter as: ivrs_acpihid[00:14.5]=AMD0020:0 js= [HW,JOY] Analog joystick See Documentation/input/joydev/joystick.rst. nokaslr [KNL] When CONFIG_RANDOMIZE_BASE is set, this disables kernel and module base offset ASLR (Address Space Layout Randomization). kasan_multi_shot [KNL] Enforce KASAN (Kernel Address Sanitizer) to print report on every invalid memory access. Without this parameter KASAN will print report only for the first invalid access. keepinitrd [HW,ARM] kernelcore= [KNL,X86,IA-64,PPC] Format: nn[KMGTPE] | nn% | &quot;mirror&quot; This parameter specifies the amount of memory usable by the kernel for non-movable allocations. The requested amount is spread evenly throughout all nodes in the system as ZONE_NORMAL. The remaining memory is used for movable memory in its own zone, ZONE_MOVABLE. In the event, a node is too small to have both ZONE_NORMAL and ZONE_MOVABLE, kernelcore memory will take priority and other nodes will have a larger ZONE_MOVABLE. ZONE_MOVABLE is used for the allocation of pages that may be reclaimed or moved by the page migration subsystem. Note that allocations like PTEs-from-HighMem still use the HighMem zone if it exists, and the Normal zone if it does not. It is possible to specify the exact amount of memory in the form of &quot;nn[KMGTPE]&quot;, a percentage of total system memory in the form of &quot;nn%&quot;, or &quot;mirror&quot;. If &quot;mirror&quot; option is specified, mirrored (reliable) memory is used for non-movable allocations and remaining memory is used for Movable pages. &quot;nn[KMGTPE]&quot;, &quot;nn%&quot;, and &quot;mirror&quot; are exclusive, so you cannot specify multiple forms. kgdbdbgp= [KGDB,HW] kgdb over EHCI usb debug port. Format: &lt;Controller#&gt;[,poll interval] The controller # is the number of the ehci usb debug port as it is probed via PCI. The poll interval is optional and is the number seconds in between each poll cycle to the debug port in case you need the functionality for interrupting the kernel with gdb or control-c on the dbgp connection. When not using this parameter you use sysrq-g to break into the kernel debugger. kgdboc= [KGDB,HW] kgdb over consoles. Requires a tty driver that supports console polling, or a supported polling keyboard driver (non-usb). Serial only format: &lt;serial_device&gt;[,baud] keyboard only format: kbd keyboard and serial format: kbd,&lt;serial_device&gt;[,baud] Optional Kernel mode setting: kms, kbd format: kms,kbd kms, kbd and serial format: kms,kbd,&lt;ser_dev&gt;[,baud] kgdbwait [KGDB] Stop kernel execution and enter the kernel debugger at the earliest opportunity. kmac= [MIPS] korina ethernet MAC address. Configure the RouterBoard 532 series on-chip Ethernet adapter MAC address. kmemleak= [KNL] Boot-time kmemleak enable/disable Valid arguments: on, off Default: on Built with CONFIG_DEBUG_KMEMLEAK_DEFAULT_OFF=y, the default is off. kpti= [ARM64] Control page table isolation of user and kernel address spaces. Default: enabled on cores which need mitigation. 0: force disabled 1: force enabled kvm.ignore_msrs=[KVM] Ignore guest accesses to unhandled MSRs. Default is 0 (don&#39;t ignore, but inject #GP) kvm.enable_vmware_backdoor=[KVM] Support VMware backdoor PV interface. Default is false (don&#39;t support). kvm.mmu_audit= [KVM] This is a R/W parameter which allows audit KVM MMU at runtime. Default is 0 (off) kvm.nx_huge_pages= [KVM] Controls the software workaround for the X86_BUG_ITLB_MULTIHIT bug. force : Always deploy workaround. off : Never deploy workaround. auto : Deploy workaround based on the presence of X86_BUG_ITLB_MULTIHIT. Default is &#39;auto&#39;. If the software workaround is enabled for the host, guests do need not to enable it for nested guests. kvm.nx_huge_pages_recovery_ratio= [KVM] Controls how many 4KiB pages are periodically zapped back to huge pages. 0 disables the recovery, otherwise if the value is N KVM will zap 1/Nth of the 4KiB pages every minute. The default is 60. kvm-amd.nested= [KVM,AMD] Allow nested virtualization in KVM/SVM. Default is 1 (enabled) kvm-amd.npt= [KVM,AMD] Disable nested paging (virtualized MMU) for all guests. Default is 1 (enabled) if in 64-bit or 32-bit PAE mode. kvm-arm.vgic_v3_group0_trap= [KVM,ARM] Trap guest accesses to GICv3 group-0 system registers kvm-arm.vgic_v3_group1_trap= [KVM,ARM] Trap guest accesses to GICv3 group-1 system registers kvm-arm.vgic_v3_common_trap= [KVM,ARM] Trap guest accesses to GICv3 common system registers kvm-arm.vgic_v4_enable= [KVM,ARM] Allow use of GICv4 for direct injection of LPIs. kvm-intel.ept= [KVM,Intel] Disable extended page tables (virtualized MMU) support on capable Intel chips. Default is 1 (enabled) kvm-intel.emulate_invalid_guest_state= [KVM,Intel] Enable emulation of invalid guest states Default is 0 (disabled) kvm-intel.flexpriority= [KVM,Intel] Disable FlexPriority feature (TPR shadow). Default is 1 (enabled) kvm-intel.nested= [KVM,Intel] Enable VMX nesting (nVMX). Default is 0 (disabled) kvm-intel.unrestricted_guest= [KVM,Intel] Disable unrestricted guest feature (virtualized real and unpaged mode) on capable Intel chips. Default is 1 (enabled) kvm-intel.vmentry_l1d_flush=[KVM,Intel] Mitigation for L1 Terminal Fault CVE-2018-3620. Valid arguments: never, cond, always always: L1D cache flush on every VMENTER. cond: Flush L1D on VMENTER only when the code between VMEXIT and VMENTER can leak host memory. never: Disables the mitigation Default is cond (do L1 cache flush in specific instances) kvm-intel.vpid= [KVM,Intel] Disable Virtual Processor Identification feature (tagged TLBs) on capable Intel chips. Default is 1 (enabled) l1tf= [X86] Control mitigation of the L1TF vulnerability on affected CPUs The kernel PTE inversion protection is unconditionally enabled and cannot be disabled. full Provides all available mitigations for the L1TF vulnerability. Disables SMT and enables all mitigations in the hypervisors, i.e. unconditional L1D flush. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. full,force Same as &#39;full&#39;, but disables SMT and L1D flush runtime control. Implies the &#39;nosmt=force&#39; command line option. (i.e. sysfs control of SMT is disabled.) flush Leaves SMT enabled and enables the default hypervisor mitigation, i.e. conditional L1D flush. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. flush,nosmt Disables SMT and enables the default hypervisor mitigation. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. flush,nowarn Same as &#39;flush&#39;, but hypervisors will not warn when a VM is started in a potentially insecure configuration. off Disables hypervisor mitigations and doesn&#39;t emit any warnings. It also drops the swap size and available RAM limit restriction on both hypervisor and bare metal. Default is &#39;flush&#39;. For details see: Documentation/admin-guide/hw-vuln/l1tf.rst l2cr= [PPC] l3cr= [PPC] lapic [X86-32,APIC] Enable the local APIC even if BIOS disabled it. lapic= [x86,APIC] &quot;notscdeadline&quot; Do not use TSC deadline value for LAPIC timer one-shot implementation. Default back to the programmable timer unit in the LAPIC. lapic_timer_c2_ok [X86,APIC] trust the local apic timer in C2 power state. libata.dma= [LIBATA] DMA control libata.dma=0 Disable all PATA and SATA DMA libata.dma=1 PATA and SATA Disk DMA only libata.dma=2 ATAPI (CDROM) DMA only libata.dma=4 Compact Flash DMA only Combinations also work, so libata.dma=3 enables DMA for disks and CDROMs, but not CFs. libata.ignore_hpa= [LIBATA] Ignore HPA limit libata.ignore_hpa=0 keep BIOS limits (default) libata.ignore_hpa=1 ignore limits, using full disk libata.noacpi [LIBATA] Disables use of ACPI in libata suspend/resume when set. Format: &lt;int&gt; libata.force= [LIBATA] Force configurations. The format is comma separated list of &quot;[ID:]VAL&quot; where ID is PORT[.DEVICE]. PORT and DEVICE are decimal numbers matching port, link or device. Basically, it matches the ATA ID string printed on console by libata. If the whole ID part is omitted, the last PORT and DEVICE values are used. If ID hasn&#39;t been specified yet, the configuration applies to all ports, links and devices. If only DEVICE is omitted, the parameter applies to the port and all links and devices behind it. DEVICE number of 0 either selects the first device or the first fan-out link behind PMP device. It does not select the host link. DEVICE number of 15 selects the host link and device attached to it. The VAL specifies the configuration to force. As long as there&#39;s no ambiguity shortcut notation is allowed. For example, both 1.5 and 1.5G would work for 1.5Gbps. The following configurations can be forced. * Cable type: 40c, 80c, short40c, unk, ign or sata. Any ID with matching PORT is used. * SATA link speed limit: 1.5Gbps or 3.0Gbps. * Transfer mode: pio[0-7], mwdma[0-4] and udma[0-7]. udma[/][16,25,33,44,66,100,133] notation is also allowed. * [no]ncq: Turn on or off NCQ. * [no]ncqtrim: Turn off queued DSM TRIM. * nohrst, nosrst, norst: suppress hard, soft and both resets. * rstonce: only attempt one reset during hot-unplug link recovery * dump_id: dump IDENTIFY data. * atapi_dmadir: Enable ATAPI DMADIR bridge support * disable: Disable this device. If there are multiple matching configurations changing the same attribute, the last one is used. memblock=debug [KNL] Enable memblock debug messages. load_ramdisk= [RAM] List of ramdisks to load from floppy See Documentation/blockdev/ramdisk.txt. lockd.nlm_grace_period=P [NFS] Assign grace period. Format: &lt;integer&gt; lockd.nlm_tcpport=N [NFS] Assign TCP port. Format: &lt;integer&gt; lockd.nlm_timeout=T [NFS] Assign timeout value. Format: &lt;integer&gt; lockd.nlm_udpport=M [NFS] Assign UDP port. Format: &lt;integer&gt; locktorture.nreaders_stress= [KNL] Set the number of locking read-acquisition kthreads. Defaults to being automatically set based on the number of online CPUs. locktorture.nwriters_stress= [KNL] Set the number of locking write-acquisition kthreads. locktorture.onoff_holdoff= [KNL] Set time (s) after boot for CPU-hotplug testing. locktorture.onoff_interval= [KNL] Set time (s) between CPU-hotplug operations, or zero to disable CPU-hotplug testing. locktorture.shuffle_interval= [KNL] Set task-shuffle interval (jiffies). Shuffling tasks allows some CPUs to go into dyntick-idle mode during the locktorture test. locktorture.shutdown_secs= [KNL] Set time (s) after boot system shutdown. This is useful for hands-off automated testing. locktorture.stat_interval= [KNL] Time (s) between statistics printk()s. locktorture.stutter= [KNL] Time (s) to stutter testing, for example, specifying five seconds causes the test to run for five seconds, wait for five seconds, and so on. This tests the locking primitive&#39;s ability to transition abruptly to and from idle. locktorture.torture_type= [KNL] Specify the locking implementation to test. locktorture.verbose= [KNL] Enable additional printk() statements. logibm.irq= [HW,MOUSE] Logitech Bus Mouse Driver Format: &lt;irq&gt; loglevel= All Kernel Messages with a loglevel smaller than the console loglevel will be printed to the console. It can also be changed with klogd or other programs. The loglevels are defined as follows: 0 (KERN_EMERG) system is unusable 1 (KERN_ALERT) action must be taken immediately 2 (KERN_CRIT) critical conditions 3 (KERN_ERR) error conditions 4 (KERN_WARNING) warning conditions 5 (KERN_NOTICE) normal but significant condition 6 (KERN_INFO) informational 7 (KERN_DEBUG) debug-level messages log_buf_len=n[KMG] Sets the size of the printk ring buffer, in bytes. n must be a power of two and greater than the minimal size. The minimal size is defined by LOG_BUF_SHIFT kernel config parameter. There is also CONFIG_LOG_CPU_MAX_BUF_SHIFT config parameter that allows to increase the default size depending on the number of CPUs. See init/Kconfig for more details. logo.nologo [FB] Disables display of the built-in Linux logo. This may be used to provide more screen space for kernel log messages and is useful when debugging kernel boot problems. lp=0 [LP] Specify parallel ports to use, e.g, lp=port[,port...] lp=none,parport0 (lp0 not configured, lp1 uses lp=reset first parallel port). &#39;lp=0&#39; disables the lp=auto printer driver. &#39;lp=reset&#39; (which can be specified in addition to the ports) causes attached printers to be reset. Using lp=port1,port2,... specifies the parallel ports to associate lp devices with, starting with lp0. A port specification may be &#39;none&#39; to skip that lp device, or a parport name such as &#39;parport0&#39;. Specifying &#39;lp=auto&#39; instead of a port specification list means that device IDs from each port should be examined, to see if an IEEE 1284-compliant printer is attached; if so, the driver will manage that printer. See also header of drivers/char/lp.c. lpj=n [KNL] Sets loops_per_jiffy to given constant, thus avoiding time-consuming boot-time autodetection (up to 250 ms per CPU). 0 enables autodetection (default). To determine the correct value for your kernel, boot with normal autodetection and see what value is printed. Note that on SMP systems the preset will be applied to all CPUs, which is likely to cause problems if your CPUs need significantly divergent settings. An incorrect value will cause delays in the kernel to be wrong, leading to unpredictable I/O errors and other breakage. Although unlikely, in the extreme case this might damage your hardware. ltpc= [NET] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt; machvec= [IA-64] Force the use of a particular machine-vector (machvec) in a generic kernel. Example: machvec=hpzx1_swiotlb machtype= [Loongson] Share the same kernel image file between different yeeloong laptop. Example: machtype=lemote-yeeloong-2f-7inch max_addr=nn[KMG] [KNL,BOOT,ia64] All physical memory greater than or equal to this physical address is ignored. maxcpus= [SMP] Maximum number of processors that an SMP kernel will bring up during bootup. maxcpus=n : n &gt;= 0 limits the kernel to bring up &#39;n&#39; processors. Surely after bootup you can bring up the other plugged cpu by executing &quot;echo 1 &gt; /sys/devices/system/cpu/cpuX/online&quot;. So maxcpus only takes effect during system bootup. While n=0 is a special case, it is equivalent to &quot;nosmp&quot;, which also disables the IO APIC. max_loop= [LOOP] The number of loop block devices that get (loop.max_loop) unconditionally pre-created at init time. The default number is configured by BLK_DEV_LOOP_MIN_COUNT. Instead of statically allocating a predefined number, loop devices can be requested on-demand with the /dev/loop-control interface. mce [X86-32] Machine Check Exception mce=option [X86-64] See Documentation/x86/x86_64/boot-options.txt md= [HW] RAID subsystems devices and level See Documentation/admin-guide/md.rst. mdacon= [MDA] Format: &lt;first&gt;,&lt;last&gt; Specifies range of consoles to be captured by the MDA. mds= [X86,INTEL] Control mitigation for the Micro-architectural Data Sampling (MDS) vulnerability. Certain CPUs are vulnerable to an exploit against CPU internal buffers which can forward information to a disclosure gadget under certain conditions. In vulnerable processors, the speculatively forwarded data can be used in a cache side channel attack, to access data to which the attacker does not have direct access. This parameter controls the MDS mitigation. The options are: full - Enable MDS mitigation on vulnerable CPUs full,nosmt - Enable MDS mitigation and disable SMT on vulnerable CPUs off - Unconditionally disable MDS mitigation On TAA-affected machines, mds=off can be prevented by an active TAA mitigation as both vulnerabilities are mitigated with the same mechanism so in order to disable this mitigation, you need to specify tsx_async_abort=off too. Not specifying this option is equivalent to mds=full. For details see: Documentation/admin-guide/hw-vuln/mds.rst mem=nn[KMG] [KNL,BOOT] Force usage of a specific amount of memory Amount of memory to be used in cases as follows: 1 for test; 2 when the kernel is not able to see the whole system memory; 3 memory that lies after &#39;mem=&#39; boundary is excluded from the hypervisor, then assigned to KVM guests. [X86] Work as limiting max address. Use together with memmap= to avoid physical address space collisions. Without memmap= PCI devices could be placed at addresses belonging to unused RAM. Note that this only takes effects during boot time since in above case 3, memory may need be hot added after boot if system memory of hypervisor is not sufficient. mem=nopentium [BUGS=X86-32] Disable usage of 4MB pages for kernel memory. memchunk=nn[KMG] [KNL,SH] Allow user to override the default size for per-device physically contiguous DMA buffers. memhp_default_state=online/offline [KNL] Set the initial state for the memory hotplug onlining policy. If not specified, the default value is set according to the CONFIG_MEMORY_HOTPLUG_DEFAULT_ONLINE kernel config option. See Documentation/memory-hotplug.txt. memmap=exactmap [KNL,X86] Enable setting of an exact E820 memory map, as specified by the user. Such memmap=exactmap lines can be constructed based on BIOS output or other requirements. See the memmap=nn@ss option description. memmap=nn[KMG]@ss[KMG] [KNL] Force usage of a specific region of memory. Region of memory to be used is from ss to ss+nn. If @ss[KMG] is omitted, it is equivalent to mem=nn[KMG], which limits max address to nn[KMG]. Multiple different regions can be specified, comma delimited. Example: memmap=100M@2G,100M#3G,1G!1024G memmap=nn[KMG]#ss[KMG] [KNL,ACPI] Mark specific memory as ACPI data. Region of memory to be marked is from ss to ss+nn. memmap=nn[KMG]$ss[KMG] [KNL,ACPI] Mark specific memory as reserved. Region of memory to be reserved is from ss to ss+nn. Example: Exclude memory from 0x18690000-0x1869ffff memmap=64K$0x18690000 or memmap=0x10000$0x18690000 Some bootloaders may need an escape character before &#39;$&#39;, like Grub2, otherwise &#39;$&#39; and the following number will be eaten. memmap=nn[KMG]!ss[KMG] [KNL,X86] Mark specific memory as protected. Region of memory to be used, from ss to ss+nn. The memory region may be marked as e820 type 12 (0xc) and is NVDIMM or ADR memory. memmap=&lt;size&gt;%&lt;offset&gt;-&lt;oldtype&gt;+&lt;newtype&gt; [KNL,ACPI] Convert memory within the specified region from &lt;oldtype&gt; to &lt;newtype&gt;. If &quot;-&lt;oldtype&gt;&quot; is left out, the whole region will be marked as &lt;newtype&gt;, even if previously unavailable. If &quot;+&lt;newtype&gt;&quot; is left out, matching memory will be removed. Types are specified as e820 types, e.g., 1 = RAM, 2 = reserved, 3 = ACPI, 12 = PRAM. memory_corruption_check=0/1 [X86] Some BIOSes seem to corrupt the first 64k of memory when doing things like suspend/resume. Setting this option will scan the memory looking for corruption. Enabling this will both detect corruption and prevent the kernel from using the memory being corrupted. However, its intended as a diagnostic tool; if repeatable BIOS-originated corruption always affects the same memory, you can use memmap= to prevent the kernel from using that memory. memory_corruption_check_size=size [X86] By default it checks for corruption in the low 64k, making this memory unavailable for normal use. Use this parameter to scan for corruption in more or less memory. memory_corruption_check_period=seconds [X86] By default it checks for corruption every 60 seconds. Use this parameter to check at some other rate. 0 disables periodic checking. memtest= [KNL,X86,ARM] Enable memtest Format: &lt;integer&gt; default : 0 &lt;disable&gt; Specifies the number of memtest passes to be performed. Each pass selects another test pattern from a given set of patterns. Memtest fills the memory with this pattern, validates memory contents and reserves bad memory regions that are detected. mem_encrypt= [X86-64] AMD Secure Memory Encryption (SME) control Valid arguments: on, off Default (depends on kernel configuration option): on (CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT=y) off (CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT=n) mem_encrypt=on: Activate SME mem_encrypt=off: Do not activate SME Refer to Documentation/virt/kvm/amd-memory-encryption.txt for details on when memory encryption can be activated. mem_sleep_default= [SUSPEND] Default system suspend mode: s2idle - Suspend-To-Idle shallow - Power-On Suspend or equivalent (if supported) deep - Suspend-To-RAM or equivalent (if supported) See Documentation/admin-guide/pm/sleep-states.rst. meye.*= [HW] Set MotionEye Camera parameters See Documentation/media/v4l-drivers/meye.rst. mfgpt_irq= [IA-32] Specify the IRQ to use for the Multi-Function General Purpose Timers on AMD Geode platforms. mfgptfix [X86-32] Fix MFGPT timers on AMD Geode platforms when the BIOS has incorrectly applied a workaround. TinyBIOS version 0.98 is known to be affected, 0.99 fixes the problem by letting the user disable the workaround. mga= [HW,DRM] min_addr=nn[KMG] [KNL,BOOT,ia64] All physical memory below this physical address is ignored. mini2440= [ARM,HW,KNL] Format:[0..2][b][c][t] Default: &quot;0tb&quot; MINI2440 configuration specification: 0 - The attached screen is the 3.5&quot; TFT 1 - The attached screen is the 7&quot; TFT 2 - The VGA Shield is attached (1024x768) Leaving out the screen size parameter will not load the TFT driver, and the framebuffer will be left unconfigured. b - Enable backlight. The TFT backlight pin will be linked to the kernel VESA blanking code and a GPIO LED. This parameter is not necessary when using the VGA shield. c - Enable the s3c camera interface. t - Reserved for enabling touchscreen support. The touchscreen support is not enabled in the mainstream kernel as of 2.6.30, a preliminary port can be found in the &quot;bleeding edge&quot; mini2440 support kernel at http://repo.or.cz/w/linux-2.6/mini2440.git mitigations= [X86,PPC,S390,ARM64] Control optional mitigations for CPU vulnerabilities. This is a set of curated, arch-independent options, each of which is an aggregation of existing arch-specific options. off Disable all optional CPU mitigations. This improves system performance, but it may also expose users to several CPU vulnerabilities. Equivalent to: nopti [X86,PPC] kpti=0 [ARM64] nospectre_v1 [X86,PPC] nobp=0 [S390] nospectre_v2 [X86,PPC,S390,ARM64] spectre_v2_user=off [X86] spec_store_bypass_disable=off [X86,PPC] ssbd=force-off [ARM64] l1tf=off [X86] mds=off [X86] tsx_async_abort=off [X86] kvm.nx_huge_pages=off [X86] Exceptions: This does not have any effect on kvm.nx_huge_pages when kvm.nx_huge_pages=force. auto (default) Mitigate all CPU vulnerabilities, but leave SMT enabled, even if it&#39;s vulnerable. This is for users who don&#39;t want to be surprised by SMT getting disabled across kernel upgrades, or who have other ways of avoiding SMT-based attacks. Equivalent to: (default behavior) auto,nosmt Mitigate all CPU vulnerabilities, disabling SMT if needed. This is for users who always want to be fully mitigated, even if it means losing SMT. Equivalent to: l1tf=flush,nosmt [X86] mds=full,nosmt [X86] tsx_async_abort=full,nosmt [X86] mminit_loglevel= [KNL] When CONFIG_DEBUG_MEMORY_INIT is set, this parameter allows control of the logging verbosity for the additional memory initialisation checks. A value of 0 disables mminit logging and a level of 4 will log everything. Information is printed at KERN_DEBUG so loglevel=8 may also need to be specified. module.sig_enforce [KNL] When CONFIG_MODULE_SIG is set, this means that modules without (valid) signatures will fail to load. Note that if CONFIG_MODULE_SIG_FORCE is set, that is always true, so this option does nothing. module_blacklist= [KNL] Do not load a comma-separated list of modules. Useful for debugging problem modules. mousedev.tap_time= [MOUSE] Maximum time between finger touching and leaving touchpad surface for touch to be considered a tap and be reported as a left button click (for touchpads working in absolute mode only). Format: &lt;msecs&gt; mousedev.xres= [MOUSE] Horizontal screen resolution, used for devices reporting absolute coordinates, such as tablets mousedev.yres= [MOUSE] Vertical screen resolution, used for devices reporting absolute coordinates, such as tablets movablecore= [KNL,X86,IA-64,PPC] Format: nn[KMGTPE] | nn% This parameter is the complement to kernelcore=, it specifies the amount of memory used for migratable allocations. If both kernelcore and movablecore is specified, then kernelcore will be at *least* the specified value but may be more. If movablecore on its own is specified, the administrator must be careful that the amount of memory usable for all allocations is not too small. movable_node [KNL] Boot-time switch to make hotplugable memory NUMA nodes to be movable. This means that the memory of such nodes will be usable only for movable allocations which rules out almost all kernel allocations. Use with caution! MTD_Partition= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;,&lt;size&gt;,&lt;offset&gt; MTD_Region= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;[,&lt;base&gt;,&lt;size&gt;,&lt;buswidth&gt;,&lt;altbuswidth&gt;] mtdparts= [MTD] See drivers/mtd/cmdlinepart.c. multitce=off [PPC] This parameter disables the use of the pSeries firmware feature for updating multiple TCE entries at a time. onenand.bdry= [HW,MTD] Flex-OneNAND Boundary Configuration Format: [die0_boundary][,die0_lock][,die1_boundary][,die1_lock] boundary - index of last SLC block on Flex-OneNAND. The remaining blocks are configured as MLC blocks. lock - Configure if Flex-OneNAND boundary should be locked. Once locked, the boundary cannot be changed. 1 indicates lock status, 0 indicates unlock status. mtdset= [ARM] ARM/S3C2412 JIVE boot control See arch/arm/mach-s3c2412/mach-jive.c mtouchusb.raw_coordinates= [HW] Make the MicroTouch USB driver use raw coordinates (&#39;y&#39;, default) or cooked coordinates (&#39;n&#39;) mtrr_chunk_size=nn[KMG] [X86] used for mtrr cleanup. It is largest continuous chunk that could hold holes aka. UC entries. mtrr_gran_size=nn[KMG] [X86] Used for mtrr cleanup. It is granularity of mtrr block. Default is 1. Large value could prevent small alignment from using up MTRRs. mtrr_spare_reg_nr=n [X86] Format: &lt;integer&gt; Range: 0,7 : spare reg number Default : 1 Used for mtrr cleanup. It is spare mtrr entries number. Set to 2 or more if your graphical card needs more. n2= [NET] SDL Inc. RISCom/N2 synchronous serial card netdev= [NET] Network devices parameters Format: &lt;irq&gt;,&lt;io&gt;,&lt;mem_start&gt;,&lt;mem_end&gt;,&lt;name&gt; Note that mem_start is often overloaded to mean something different and driver-specific. This usage is only documented in each driver source file if at all. nf_conntrack.acct= [NETFILTER] Enable connection tracking flow accounting 0 to disable accounting 1 to enable accounting Default value is 0. nfsaddrs= [NFS] Deprecated. Use ip= instead. See Documentation/filesystems/nfs/nfsroot.txt. nfsroot= [NFS] nfs root filesystem for disk-less boxes. See Documentation/filesystems/nfs/nfsroot.txt. nfsrootdebug [NFS] enable nfsroot debugging messages. See Documentation/filesystems/nfs/nfsroot.txt. nfs.callback_nr_threads= [NFSv4] set the total number of threads that the NFS client will assign to service NFSv4 callback requests. nfs.callback_tcpport= [NFS] set the TCP port on which the NFSv4 callback channel should listen. nfs.cache_getent= [NFS] sets the pathname to the program which is used to update the NFS client cache entries. nfs.cache_getent_timeout= [NFS] sets the timeout after which an attempt to update a cache entry is deemed to have failed. nfs.idmap_cache_timeout= [NFS] set the maximum lifetime for idmapper cache entries. nfs.enable_ino64= [NFS] enable 64-bit inode numbers. If zero, the NFS client will fake up a 32-bit inode number for the readdir() and stat() syscalls instead of returning the full 64-bit number. The default is to return 64-bit inode numbers. nfs.max_session_cb_slots= [NFSv4.1] Sets the maximum number of session slots the client will assign to the callback channel. This determines the maximum number of callbacks the client will process in parallel for a particular server. nfs.max_session_slots= [NFSv4.1] Sets the maximum number of session slots the client will attempt to negotiate with the server. This limits the number of simultaneous RPC requests that the client can send to the NFSv4.1 server. Note that there is little point in setting this value higher than the max_tcp_slot_table_limit. nfs.nfs4_disable_idmapping= [NFSv4] When set to the default of &#39;1&#39;, this option ensures that both the RPC level authentication scheme and the NFS level operations agree to use numeric uids/gids if the mount is using the &#39;sec=sys&#39; security flavour. In effect it is disabling idmapping, which can make migration from legacy NFSv2/v3 systems to NFSv4 easier. Servers that do not support this mode of operation will be autodetected by the client, and it will fall back to using the idmapper. To turn off this behaviour, set the value to &#39;0&#39;. nfs.nfs4_unique_id= [NFS4] Specify an additional fixed unique ident- ification string that NFSv4 clients can insert into their nfs_client_id4 string. This is typically a UUID that is generated at system install time. nfs.send_implementation_id = [NFSv4.1] Send client implementation identification information in exchange_id requests. If zero, no implementation identification information will be sent. The default is to send the implementation identification information. nfs.recover_lost_locks = [NFSv4] Attempt to recover locks that were lost due to a lease timeout on the server. Please note that doing this risks data corruption, since there are no guarantees that the file will remain unchanged after the locks are lost. If you want to enable the kernel legacy behaviour of attempting to recover these locks, then set this parameter to &#39;1&#39;. The default parameter value of &#39;0&#39; causes the kernel not to attempt recovery of lost locks. nfs4.layoutstats_timer = [NFSv4.2] Change the rate at which the kernel sends layoutstats to the pNFS metadata server. Setting this to value to 0 causes the kernel to use whatever value is the default set by the layout driver. A non-zero value sets the minimum interval in seconds between layoutstats transmissions. nfsd.nfs4_disable_idmapping= [NFSv4] When set to the default of &#39;1&#39;, the NFSv4 server will return only numeric uids and gids to clients using auth_sys, and will accept numeric uids and gids from such clients. This is intended to ease migration from NFSv2/v3. nmi_debug= [KNL,SH] Specify one or more actions to take when a NMI is triggered. Format: [state][,regs][,debounce][,die] nmi_watchdog= [KNL,BUGS=X86] Debugging features for SMP kernels Format: [panic,][nopanic,][num] Valid num: 0 or 1 0 - turn hardlockup detector in nmi_watchdog off 1 - turn hardlockup detector in nmi_watchdog on When panic is specified, panic when an NMI watchdog timeout occurs (or &#39;nopanic&#39; to override the opposite default). To disable both hard and soft lockup detectors, please see &#39;nowatchdog&#39;. This is useful when you use a panic=... timeout and need the box quickly up again. These settings can be accessed at runtime via the nmi_watchdog and hardlockup_panic sysctls. netpoll.carrier_timeout= [NET] Specifies amount of time (in seconds) that netpoll should wait for a carrier. By default netpoll waits 4 seconds. no387 [BUGS=X86-32] Tells the kernel to use the 387 maths emulation library even if a 387 maths coprocessor is present. no5lvl [X86-64] Disable 5-level paging mode. Forces kernel to use 4-level paging instead. no_console_suspend [HW] Never suspend the console Disable suspending of consoles during suspend and hibernate operations. Once disabled, debugging messages can reach various consoles while the rest of the system is being put to sleep (ie, while debugging driver suspend/resume hooks). This may not work reliably with all consoles, but is known to work with serial and VGA consoles. To facilitate more flexible debugging, we also add console_suspend, a printk module parameter to control it. Users could use console_suspend (usually /sys/module/printk/parameters/console_suspend) to turn on/off it dynamically. novmcoredd [KNL,KDUMP] Disable device dump. Device dump allows drivers to append dump data to vmcore so you can collect driver specified debug info. Drivers can append the data without any limit and this data is stored in memory, so this may cause significant memory stress. Disabling device dump can help save memory but the driver debug data will be no longer available. This parameter is only available when CONFIG_PROC_VMCORE_DEVICE_DUMP is set. noaliencache [MM, NUMA, SLAB] Disables the allocation of alien caches in the slab allocator. Saves per-node memory, but will impact performance. noalign [KNL,ARM] noaltinstr [S390] Disables alternative instructions patching (CPU alternatives feature). noapic [SMP,APIC] Tells the kernel to not make use of any IOAPICs that may be present in the system. noautogroup Disable scheduler automatic task group creation. nobats [PPC] Do not use BATs for mapping kernel lowmem on &quot;Classic&quot; PPC cores. nocache [ARM] noclflush [BUGS=X86] Don&#39;t use the CLFLUSH instruction nodelayacct [KNL] Disable per-task delay accounting nodsp [SH] Disable hardware DSP at boot time. noefi Disable EFI runtime services support. noexec [IA-64] noexec [X86] On X86-32 available only on PAE configured kernels. noexec=on: enable non-executable mappings (default) noexec=off: disable non-executable mappings nosmap [X86] Disable SMAP (Supervisor Mode Access Prevention) even if it is supported by processor. nosmep [X86] Disable SMEP (Supervisor Mode Execution Prevention) even if it is supported by processor. noexec32 [X86-64] This affects only 32-bit executables. noexec32=on: enable non-executable mappings (default) read doesn&#39;t imply executable mappings noexec32=off: disable non-executable mappings read implies executable mappings nofpu [MIPS,SH] Disable hardware FPU at boot time. nofxsr [BUGS=X86-32] Disables x86 floating point extended register save and restore. The kernel will only save legacy floating-point registers on task switch. nohugeiomap [KNL,x86] Disable kernel huge I/O mappings. nosmt [KNL,S390] Disable symmetric multithreading (SMT). Equivalent to smt=1. [KNL,x86] Disable symmetric multithreading (SMT). nosmt=force: Force disable SMT, cannot be undone via the sysfs control file. nospectre_v1 [X86] Disable mitigations for Spectre Variant 1 (bounds check bypass). With this option data leaks are possible in the system. nospectre_v2 [X86,PPC_FSL_BOOK3E,ARM64] Disable all mitigations for the Spectre variant 2 (indirect branch prediction) vulnerability. System may allow data leaks with this option. nospec_store_bypass_disable [HW] Disable all mitigations for the Speculative Store Bypass vulnerability noxsave [BUGS=X86] Disables x86 extended register state save and restore using xsave. The kernel will fallback to enabling legacy floating-point and sse state. noxsaveopt [X86] Disables xsaveopt used in saving x86 extended register states. The kernel will fall back to use xsave to save the states. By using this parameter, performance of saving the states is degraded because xsave doesn&#39;t support modified optimization while xsaveopt supports it on xsaveopt enabled systems. noxsaves [X86] Disables xsaves and xrstors used in saving and restoring x86 extended register state in compacted form of xsave area. The kernel will fall back to use xsaveopt and xrstor to save and restore the states in standard form of xsave area. By using this parameter, xsave area per process might occupy more memory on xsaves enabled systems. nohlt [BUGS=ARM,SH] Tells the kernel that the sleep(SH) or wfi(ARM) instruction doesn&#39;t work correctly and not to use it. This is also useful when using JTAG debugger. no_file_caps Tells the kernel not to honor file capabilities. The only way then for a file to be executed with privilege is to be setuid root or executed by root. nohalt [IA-64] Tells the kernel not to use the power saving function PAL_HALT_LIGHT when idle. This increases power-consumption. On the positive side, it reduces interrupt wake-up latency, which may improve performance in certain environments such as networked servers or real-time systems. nohibernate [HIBERNATION] Disable hibernation and resume. nohz= [KNL] Boottime enable/disable dynamic ticks Valid arguments: on, off Default: on nohz_full= [KNL,BOOT,SMP,ISOL] The argument is a cpu list, as described above. In kernels built with CONFIG_NO_HZ_FULL=y, set the specified list of CPUs whose tick will be stopped whenever possible. The boot CPU will be forced outside the range to maintain the timekeeping. Any CPUs in this list will have their RCU callbacks offloaded, just as if they had also been called out in the rcu_nocbs= boot parameter. noiotrap [SH] Disables trapped I/O port accesses. noirqdebug [X86-32] Disables the code which attempts to detect and disable unhandled interrupt sources. no_timer_check [X86,APIC] Disables the code which tests for broken timer IRQ sources. noisapnp [ISAPNP] Disables ISA PnP code. noinitrd [RAM] Tells the kernel not to load any configured initial RAM disk. nointremap [X86-64, Intel-IOMMU] Do not enable interrupt remapping. [Deprecated - use intremap=off] nointroute [IA-64] noinvpcid [X86] Disable the INVPCID cpu feature. nojitter [IA-64] Disables jitter checking for ITC timers. no-kvmclock [X86,KVM] Disable paravirtualized KVM clock driver no-kvmapf [X86,KVM] Disable paravirtualized asynchronous page fault handling. no-vmw-sched-clock [X86,PV_OPS] Disable paravirtualized VMware scheduler clock and use the default one. no-steal-acc [X86,KVM,ARM64] Disable paravirtualized steal time accounting. steal time is computed, but won&#39;t influence scheduler behaviour nolapic [X86-32,APIC] Do not enable or use the local APIC. nolapic_timer [X86-32,APIC] Do not use the local APIC timer. noltlbs [PPC] Do not use large page/tlb entries for kernel lowmem mapping on PPC40x and PPC8xx nomca [IA-64] Disable machine check abort handling nomce [X86-32] Disable Machine Check Exception nomfgpt [X86-32] Disable Multi-Function General Purpose Timer usage (for AMD Geode machines). nonmi_ipi [X86] Disable using NMI IPIs during panic/reboot to shutdown the other cpus. Instead use the REBOOT_VECTOR irq. nomodule Disable module load nopat [X86] Disable PAT (page attribute table extension of pagetables) support. nopcid [X86-64] Disable the PCID cpu feature. norandmaps Don&#39;t use address space randomization. Equivalent to echo 0 &gt; /proc/sys/kernel/randomize_va_space noreplace-smp [X86-32,SMP] Don&#39;t replace SMP instructions with UP alternatives nordrand [X86] Disable kernel use of the RDRAND and RDSEED instructions even if they are supported by the processor. RDRAND and RDSEED are still available to user space applications. noresume [SWSUSP] Disables resume and restores original swap space. no-scroll [VGA] Disables scrollback. This is required for the Braillex ib80-piezo Braille reader made by F.H. Papenmeier (Germany). nosbagart [IA-64] nosep [BUGS=X86-32] Disables x86 SYSENTER/SYSEXIT support. nosmp [SMP] Tells an SMP kernel to act as a UP kernel, and disable the IO APIC. legacy for &quot;maxcpus=0&quot;. nosoftlockup [KNL] Disable the soft-lockup detector. nosync [HW,M68K] Disables sync negotiation for all devices. nowatchdog [KNL] Disable both lockup detectors, i.e. soft-lockup and NMI watchdog (hard-lockup). nowb [ARM] nox2apic [X86-64,APIC] Do not enable x2APIC mode. cpu0_hotplug [X86] Turn on CPU0 hotplug feature when CONFIG_BOOTPARAM_HOTPLUG_CPU0 is off. Some features depend on CPU0. Known dependencies are: 1. Resume from suspend/hibernate depends on CPU0. Suspend/hibernate will fail if CPU0 is offline and you need to online CPU0 before suspend/hibernate. 2. PIC interrupts also depend on CPU0. CPU0 can&#39;t be removed if a PIC interrupt is detected. It&#39;s said poweroff/reboot may depend on CPU0 on some machines although I haven&#39;t seen such issues so far after CPU0 is offline on a few tested machines. If the dependencies are under your control, you can turn on cpu0_hotplug. nps_mtm_hs_ctr= [KNL,ARC] This parameter sets the maximum duration, in cycles, each HW thread of the CTOP can run without interruptions, before HW switches it. The actual maximum duration is 16 times this parameter&#39;s value. Format: integer between 1 and 255 Default: 255 nptcg= [IA-64] Override max number of concurrent global TLB purges which is reported from either PAL_VM_SUMMARY or SAL PALO. nr_cpus= [SMP] Maximum number of processors that an SMP kernel could support. nr_cpus=n : n &gt;= 1 limits the kernel to support &#39;n&#39; processors. It could be larger than the number of already plugged CPU during bootup, later in runtime you can physically add extra cpu until it reaches n. So during boot up some boot time memory for per-cpu variables need be pre-allocated for later physical cpu hot plugging. nr_uarts= [SERIAL] maximum number of UARTs to be registered. numa_balancing= [KNL,X86] Enable or disable automatic NUMA balancing. Allowed values are enable and disable numa_zonelist_order= [KNL, BOOT] Select zonelist order for NUMA. &#39;node&#39;, &#39;default&#39; can be specified This can be set from sysctl after boot. See Documentation/sysctl/vm.txt for details. ohci1394_dma=early [HW] enable debugging via the ohci1394 driver. See Documentation/debugging-via-ohci1394.txt for more info. olpc_ec_timeout= [OLPC] ms delay when issuing EC commands Rather than timing out after 20 ms if an EC command is not properly ACKed, override the length of the timeout. We have interrupts disabled while waiting for the ACK, so if this is set too high interrupts *may* be lost! omap_mux= [OMAP] Override bootloader pin multiplexing. Format: &lt;mux_mode0.mode_name=value&gt;... For example, to override I2C bus2: omap_mux=i2c2_scl.i2c2_scl=0x100,i2c2_sda.i2c2_sda=0x100 oprofile.timer= [HW] Use timer interrupt instead of performance counters oprofile.cpu_type= Force an oprofile cpu type This might be useful if you have an older oprofile userland or if you want common events. Format: &#123; arch_perfmon &#125; arch_perfmon: [X86] Force use of architectural perfmon on Intel CPUs instead of the CPU specific event set. timer: [X86] Force use of architectural NMI timer mode (see also oprofile.timer for generic hr timer mode) oops=panic Always panic on oopses. Default is to just kill the process, but there is a small probability of deadlocking the machine. This will also cause panics on machine check exceptions. Useful together with panic=30 to trigger a reboot. page_alloc.shuffle= [KNL] Boolean flag to control whether the page allocator should randomize its free lists. The randomization may be automatically enabled if the kernel detects it is running on a platform with a direct-mapped memory-side cache, and this parameter can be used to override/disable that behavior. The state of the flag can be read from sysfs at: /sys/module/page_alloc/parameters/shuffle. page_owner= [KNL] Boot-time page_owner enabling option. Storage of the information about who allocated each page is disabled in default. With this switch, we can turn it on. on: enable the feature page_poison= [KNL] Boot-time parameter changing the state of poisoning on the buddy allocator. off: turn off poisoning on: turn on poisoning panic= [KNL] Kernel behaviour on panic: delay &lt;timeout&gt; timeout &gt; 0: seconds before rebooting timeout = 0: wait forever timeout &lt; 0: reboot immediately Format: &lt;timeout&gt; panic_print= Bitmask for printing system info when panic happens. User can chose combination of the following bits: bit 0: print all tasks info bit 1: print system memory info bit 2: print timer info bit 3: print locks info if CONFIG_LOCKDEP is on bit 4: print ftrace buffer bit 5: print all printk messages in buffer panic_on_taint= Bitmask for conditionally calling panic() in add_taint() Format: &lt;hex&gt;[,nousertaint] Hexadecimal bitmask representing the set of TAINT flags that will cause the kernel to panic when add_taint() is called with any of the flags in this set. The optional switch &quot;nousertaint&quot; can be utilized to prevent userspace forced crashes by writing to sysctl /proc/sys/kernel/tainted any flagset matching with the bitmask set on panic_on_taint. See Documentation/admin-guide/tainted-kernels.rst for extra details on the taint flags that users can pick to compose the bitmask to assign to panic_on_taint. panic_on_warn panic() instead of WARN(). Useful to cause kdump on a WARN(). crash_kexec_post_notifiers Run kdump after running panic-notifiers and dumping kmsg. This only for the users who doubt kdump always succeeds in any situation. Note that this also increases risks of kdump failure, because some panic notifiers can make the crashed kernel more unstable. parkbd.port= [HW] Parallel port number the keyboard adapter is connected to, default is 0. Format: &lt;parport#&gt; parkbd.mode= [HW] Parallel port keyboard adapter mode of operation, 0 for XT, 1 for AT (default is AT). Format: &lt;mode&gt; parport= [HW,PPT] Specify parallel ports. 0 disables. Format: &#123; 0 | auto | 0xBBB[,IRQ[,DMA]] &#125; Use &#39;auto&#39; to force the driver to use any IRQ/DMA settings detected (the default is to ignore detected IRQ/DMA settings because of possible conflicts). You can specify the base address, IRQ, and DMA settings; IRQ and DMA should be numbers, or &#39;auto&#39; (for using detected settings on that particular port), or &#39;nofifo&#39; (to avoid using a FIFO even if it is detected). Parallel ports are assigned in the order they are specified on the command line, starting with parport0. parport_init_mode= [HW,PPT] Configure VIA parallel port to operate in a specific mode. This is necessary on Pegasos computer where firmware has no options for setting up parallel port mode and sets it to spp. Currently this function knows 686a and 8231 chips. Format: [spp|ps2|epp|ecp|ecpepp] pause_on_oops= Halt all CPUs after the first oops has been printed for the specified number of seconds. This is to be used if your oopses keep scrolling off the screen. pcbit= [HW,ISDN] pcd. [PARIDE] See header of drivers/block/paride/pcd.c. See also Documentation/blockdev/paride.txt. pci=option[,option...] [PCI] various PCI subsystem options. Some options herein operate on a specific device or a set of devices (&lt;pci_dev&gt;). These are specified in one of the following formats: [&lt;domain&gt;:]&lt;bus&gt;:&lt;dev&gt;.&lt;func&gt;[/&lt;dev&gt;.&lt;func&gt;]* pci:&lt;vendor&gt;:&lt;device&gt;[:&lt;subvendor&gt;:&lt;subdevice&gt;] Note: the first format specifies a PCI bus/device/function address which may change if new hardware is inserted, if motherboard firmware changes, or due to changes caused by other kernel parameters. If the domain is left unspecified, it is taken to be zero. Optionally, a path to a device through multiple device/function addresses can be specified after the base address (this is more robust against renumbering issues). The second format selects devices using IDs from the configuration space which may match multiple devices in the system. earlydump dump PCI config space before the kernel changes anything off [X86] don&#39;t probe for the PCI bus bios [X86-32] force use of PCI BIOS, don&#39;t access the hardware directly. Use this if your machine has a non-standard PCI host bridge. nobios [X86-32] disallow use of PCI BIOS, only direct hardware access methods are allowed. Use this if you experience crashes upon bootup and you suspect they are caused by the BIOS. conf1 [X86] Force use of PCI Configuration Access Mechanism 1 (config address in IO port 0xCF8, data in IO port 0xCFC, both 32-bit). conf2 [X86] Force use of PCI Configuration Access Mechanism 2 (IO port 0xCF8 is an 8-bit port for the function, IO port 0xCFA, also 8-bit, sets bus number. The config space is then accessed through ports 0xC000-0xCFFF). See http://wiki.osdev.org/PCI for more info on the configuration access mechanisms. noaer [PCIE] If the PCIEAER kernel config parameter is enabled, this kernel boot option can be used to disable the use of PCIE advanced error reporting. nodomains [PCI] Disable support for multiple PCI root domains (aka PCI segments, in ACPI-speak). nommconf [X86] Disable use of MMCONFIG for PCI Configuration check_enable_amd_mmconf [X86] check for and enable properly configured MMIO access to PCI config space on AMD family 10h CPU nomsi [MSI] If the PCI_MSI kernel config parameter is enabled, this kernel boot option can be used to disable the use of MSI interrupts system-wide. noioapicquirk [APIC] Disable all boot interrupt quirks. Safety option to keep boot IRQs enabled. This should never be necessary. ioapicreroute [APIC] Enable rerouting of boot IRQs to the primary IO-APIC for bridges that cannot disable boot IRQs. This fixes a source of spurious IRQs when the system masks IRQs. noioapicreroute [APIC] Disable workaround that uses the boot IRQ equivalent of an IRQ that connects to a chipset where boot IRQs cannot be disabled. The opposite of ioapicreroute. biosirq [X86-32] Use PCI BIOS calls to get the interrupt routing table. These calls are known to be buggy on several machines and they hang the machine when used, but on other computers it&#39;s the only way to get the interrupt routing table. Try this option if the kernel is unable to allocate IRQs or discover secondary PCI buses on your motherboard. rom [X86] Assign address space to expansion ROMs. Use with caution as certain devices share address decoders between ROMs and other resources. norom [X86] Do not assign address space to expansion ROMs that do not already have BIOS assigned address ranges. nobar [X86] Do not assign address space to the BARs that weren&#39;t assigned by the BIOS. irqmask=0xMMMM [X86] Set a bit mask of IRQs allowed to be assigned automatically to PCI devices. You can make the kernel exclude IRQs of your ISA cards this way. pirqaddr=0xAAAAA [X86] Specify the physical address of the PIRQ table (normally generated by the BIOS) if it is outside the F0000h-100000h range. lastbus=N [X86] Scan all buses thru bus #N. Can be useful if the kernel is unable to find your secondary buses and you want to tell it explicitly which ones they are. assign-busses [X86] Always assign all PCI bus numbers ourselves, overriding whatever the firmware may have done. usepirqmask [X86] Honor the possible IRQ mask stored in the BIOS $PIR table. This is needed on some systems with broken BIOSes, notably some HP Pavilion N5400 and Omnibook XE3 notebooks. This will have no effect if ACPI IRQ routing is enabled. noacpi [X86] Do not use ACPI for IRQ routing or for PCI scanning. use_crs [X86] Use PCI host bridge window information from ACPI. On BIOSes from 2008 or later, this is enabled by default. If you need to use this, please report a bug. nocrs [X86] Ignore PCI host bridge windows from ACPI. If you need to use this, please report a bug. routeirq Do IRQ routing for all PCI devices. This is normally done in pci_enable_device(), so this option is a temporary workaround for broken drivers that don&#39;t call it. skip_isa_align [X86] do not align io start addr, so can handle more pci cards noearly [X86] Don&#39;t do any early type 1 scanning. This might help on some broken boards which machine check when some devices&#39; config space is read. But various workarounds are disabled and some IOMMU drivers will not work. bfsort Sort PCI devices into breadth-first order. This sorting is done to get a device order compatible with older (&lt;= 2.4) kernels. nobfsort Don&#39;t sort PCI devices into breadth-first order. pcie_bus_tune_off Disable PCIe MPS (Max Payload Size) tuning and use the BIOS-configured MPS defaults. pcie_bus_safe Set every device&#39;s MPS to the largest value supported by all devices below the root complex. pcie_bus_perf Set device MPS to the largest allowable MPS based on its parent bus. Also set MRRS (Max Read Request Size) to the largest supported value (no larger than the MPS that the device or bus can support) for best performance. pcie_bus_peer2peer Set every device&#39;s MPS to 128B, which every device is guaranteed to support. This configuration allows peer-to-peer DMA between any pair of devices, possibly at the cost of reduced performance. This also guarantees that hot-added devices will work. cbiosize=nn[KMG] The fixed amount of bus space which is reserved for the CardBus bridge&#39;s IO window. The default value is 256 bytes. cbmemsize=nn[KMG] The fixed amount of bus space which is reserved for the CardBus bridge&#39;s memory window. The default value is 64 megabytes. resource_alignment= Format: [&lt;order of align&gt;@]&lt;pci_dev&gt;[; ...] Specifies alignment and device to reassign aligned memory resources. How to specify the device is described above. If &lt;order of align&gt; is not specified, PAGE_SIZE is used as alignment. A PCI-PCI bridge can be specified if resource windows need to be expanded. To specify the alignment for several instances of a device, the PCI vendor, device, subvendor, and subdevice may be specified, e.g., 12@pci:8086:9c22:103c:198f for 4096-byte alignment. ecrc= Enable/disable PCIe ECRC (transaction layer end-to-end CRC checking). bios: Use BIOS/firmware settings. This is the the default. off: Turn ECRC off on: Turn ECRC on. hpiosize=nn[KMG] The fixed amount of bus space which is reserved for hotplug bridge&#39;s IO window. Default size is 256 bytes. hpmmiosize=nn[KMG] The fixed amount of bus space which is reserved for hotplug bridge&#39;s MMIO window. Default size is 2 megabytes. hpmmioprefsize=nn[KMG] The fixed amount of bus space which is reserved for hotplug bridge&#39;s MMIO_PREF window. Default size is 2 megabytes. hpmemsize=nn[KMG] The fixed amount of bus space which is reserved for hotplug bridge&#39;s MMIO and MMIO_PREF window. Default size is 2 megabytes. hpbussize=nn The minimum amount of additional bus numbers reserved for buses below a hotplug bridge. Default is 1. realloc= Enable/disable reallocating PCI bridge resources if allocations done by BIOS are too small to accommodate resources required by all child devices. off: Turn realloc off on: Turn realloc on realloc same as realloc=on noari do not use PCIe ARI. noats [PCIE, Intel-IOMMU, AMD-IOMMU] do not use PCIe ATS (and IOMMU device IOTLB). pcie_scan_all Scan all possible PCIe devices. Otherwise we only look for one device below a PCIe downstream port. big_root_window Try to add a big 64bit memory window to the PCIe root complex on AMD CPUs. Some GFX hardware can resize a BAR to allow access to all VRAM. Adding the window is slightly risky (it may conflict with unreported devices), so this taints the kernel. disable_acs_redir=&lt;pci_dev&gt;[; ...] Specify one or more PCI devices (in the format specified above) separated by semicolons. Each device specified will have the PCI ACS redirect capabilities forced off which will allow P2P traffic between devices through bridges without forcing it upstream. Note: this removes isolation between devices and may put more devices in an IOMMU group. force_floating [S390] Force usage of floating interrupts. nomio [S390] Do not use MIO instructions. pcie_aspm= [PCIE] Forcibly enable or disable PCIe Active State Power Management. off Disable ASPM. force Enable ASPM even on devices that claim not to support it. WARNING: Forcing ASPM on may cause system lockups. pcie_ports= [PCIE] PCIe port services handling: native Use native PCIe services (PME, AER, DPC, PCIe hotplug) even if the platform doesn&#39;t give the OS permission to use them. This may cause conflicts if the platform also tries to use these services. dpc-native Use native PCIe service for DPC only. May cause conflicts if firmware uses AER or DPC. compat Disable native PCIe services (PME, AER, DPC, PCIe hotplug). pcie_port_pm= [PCIE] PCIe port power management handling: off Disable power management of all PCIe ports force Forcibly enable power management of all PCIe ports pcie_pme= [PCIE,PM] Native PCIe PME signaling options: nomsi Do not use MSI for native PCIe PME signaling (this makes all PCIe root ports use INTx for all services). pcmv= [HW,PCMCIA] BadgePAD 4 pd_ignore_unused [PM] Keep all power-domains already enabled by bootloader on, even if no driver has claimed them. This is useful for debug and development, but should not be needed on a platform with proper driver support. pd. [PARIDE] See Documentation/blockdev/paride.txt. pdcchassis= [PARISC,HW] Disable/Enable PDC Chassis Status codes at boot time. Format: &#123; 0 | 1 &#125; See arch/parisc/kernel/pdc_chassis.c percpu_alloc= Select which percpu first chunk allocator to use. Currently supported values are &quot;embed&quot; and &quot;page&quot;. Archs may support subset or none of the selections. See comments in mm/percpu.c for details on each allocator. This parameter is primarily for debugging and performance comparison. pf. [PARIDE] See Documentation/blockdev/paride.txt. pg. [PARIDE] See Documentation/blockdev/paride.txt. pirq= [SMP,APIC] Manual mp-table setup See Documentation/x86/i386/IO-APIC.txt. plip= [PPT,NET] Parallel port network link Format: &#123; parport&lt;nr&gt; | timid | 0 &#125; See also Documentation/admin-guide/parport.rst. pmtmr= [X86] Manual setup of pmtmr I/O Port. Override pmtimer IOPort with a hex value. e.g. pmtmr=0x508 pnp.debug=1 [PNP] Enable PNP debug messages (depends on the CONFIG_PNP_DEBUG_MESSAGES option). Change at run-time via /sys/module/pnp/parameters/debug. We always show current resource usage; turning this on also shows possible settings and some assignment information. pnpacpi= [ACPI] &#123; off &#125; pnpbios= [ISAPNP] &#123; on | off | curr | res | no-curr | no-res &#125; pnp_reserve_irq= [ISAPNP] Exclude IRQs for the autoconfiguration pnp_reserve_dma= [ISAPNP] Exclude DMAs for the autoconfiguration pnp_reserve_io= [ISAPNP] Exclude I/O ports for the autoconfiguration Ranges are in pairs (I/O port base and size). pnp_reserve_mem= [ISAPNP] Exclude memory regions for the autoconfiguration. Ranges are in pairs (memory base and size). ports= [IP_VS_FTP] IPVS ftp helper module Default is 21. Up to 8 (IP_VS_APP_MAX_PORTS) ports may be specified. Format: &lt;port&gt;,&lt;port&gt;.... powersave=off [PPC] This option disables power saving features. It specifically disables cpuidle and sets the platform machine description specific power_save function to NULL. On Idle the CPU just reduces execution priority. ppc_strict_facility_enable [PPC] This option catches any kernel floating point, Altivec, VSX and SPE outside of regions specifically allowed (eg kernel_enable_fpu()/kernel_disable_fpu()). There is some performance impact when enabling this. ppc_tm= [PPC] Format: &#123;&quot;off&quot;&#125; Disable Hardware Transactional Memory print-fatal-signals= [KNL] debug: print fatal signals If enabled, warn about various signal handling related application anomalies: too many signals, too many POSIX.1 timers, fatal signals causing a coredump - etc. If you hit the warning due to signal overflow, you might want to try &quot;ulimit -i unlimited&quot;. default: off. printk.always_kmsg_dump= Trigger kmsg_dump for cases other than kernel oops or panics Format: &lt;bool&gt; (1/Y/y=enable, 0/N/n=disable) default: disabled printk.devkmsg=&#123;on,off,ratelimit&#125; Control writing to /dev/kmsg. on - unlimited logging to /dev/kmsg from userspace off - logging to /dev/kmsg disabled ratelimit - ratelimit the logging Default: ratelimit printk.time= Show timing data prefixed to each printk message line Format: &lt;bool&gt; (1/Y/y=enable, 0/N/n=disable) processor.max_cstate= [HW,ACPI] Limit processor to maximum C-state max_cstate=9 overrides any DMI blacklist limit. processor.nocst [HW,ACPI] Ignore the _CST method to determine C-states, instead using the legacy FADT method profile= [KNL] Enable kernel profiling via /proc/profile Format: [&lt;profiletype&gt;,]&lt;number&gt; Param: &lt;profiletype&gt;: &quot;schedule&quot;, &quot;sleep&quot;, or &quot;kvm&quot; [defaults to kernel profiling] Param: &quot;schedule&quot; - profile schedule points. Param: &quot;sleep&quot; - profile D-state sleeping (millisecs). Requires CONFIG_SCHEDSTATS Param: &quot;kvm&quot; - profile VM exits. Param: &lt;number&gt; - step/bucket size as a power of 2 for statistical time based profiling. prompt_ramdisk= [RAM] List of RAM disks to prompt for floppy disk before loading. See Documentation/blockdev/ramdisk.txt. prot_virt= [S390] enable hosting protected virtual machines isolated from the hypervisor (if hardware supports that). Format: &lt;bool&gt; psi= [KNL] Enable or disable pressure stall information tracking. Format: &lt;bool&gt; psmouse.proto= [HW,MOUSE] Highest PS2 mouse protocol extension to probe for; one of (bare|imps|exps|lifebook|any). psmouse.rate= [HW,MOUSE] Set desired mouse report rate, in reports per second. psmouse.resetafter= [HW,MOUSE] Try to reset the device after so many bad packets (0 = never). psmouse.resolution= [HW,MOUSE] Set desired mouse resolution, in dpi. psmouse.smartscroll= [HW,MOUSE] Controls Logitech smartscroll autorepeat. 0 = disabled, 1 = enabled (default). pstore.backend= Specify the name of the pstore backend to use pt. [PARIDE] See Documentation/blockdev/paride.txt. pti= [X86_64] Control Page Table Isolation of user and kernel address spaces. Disabling this feature removes hardening, but improves performance of system calls and interrupts. on - unconditionally enable off - unconditionally disable auto - kernel detects whether your CPU model is vulnerable to issues that PTI mitigates Not specifying this option is equivalent to pti=auto. nopti [X86_64] Equivalent to pti=off pty.legacy_count= [KNL] Number of legacy pty&#39;s. Overwrites compiled-in default number. quiet [KNL] Disable most log messages r128= [HW,DRM] raid= [HW,RAID] See Documentation/admin-guide/md.rst. ramdisk_size= [RAM] Sizes of RAM disks in kilobytes See Documentation/blockdev/ramdisk.txt. random.trust_cpu=&#123;on,off&#125; [KNL] Enable or disable trusting the use of the CPU&#39;s random number generator (if available) to fully seed the kernel&#39;s CRNG. Default is controlled by CONFIG_RANDOM_TRUST_CPU. ras=option[,option,...] [KNL] RAS-specific options cec_disable [X86] Disable the Correctable Errors Collector, see CONFIG_RAS_CEC help text. rcu_nocbs= [KNL] The argument is a cpu list, as described above, except that the string &quot;all&quot; can be used to specify every CPU on the system. In kernels built with CONFIG_RCU_NOCB_CPU=y, set the specified list of CPUs to be no-callback CPUs. Invocation of these CPUs&#39; RCU callbacks will be offloaded to &quot;rcuox/N&quot; kthreads created for that purpose, where &quot;x&quot; is &quot;p&quot; for RCU-preempt, and &quot;s&quot; for RCU-sched, and &quot;N&quot; is the CPU number. This reduces OS jitter on the offloaded CPUs, which can be useful for HPC and real-time workloads. It can also improve energy efficiency for asymmetric multiprocessors. rcu_nocb_poll [KNL] Rather than requiring that offloaded CPUs (specified by rcu_nocbs= above) explicitly awaken the corresponding &quot;rcuoN&quot; kthreads, make these kthreads poll for callbacks. This improves the real-time response for the offloaded CPUs by relieving them of the need to wake up the corresponding kthread, but degrades energy efficiency by requiring that the kthreads periodically wake up to do the polling. rcutree.blimit= [KNL] Set maximum number of finished RCU callbacks to process in one batch. rcutree.dump_tree= [KNL] Dump the structure of the rcu_node combining tree out at early boot. This is used for diagnostic purposes, to verify correct tree setup. rcutree.gp_cleanup_delay= [KNL] Set the number of jiffies to delay each step of RCU grace-period cleanup. rcutree.gp_init_delay= [KNL] Set the number of jiffies to delay each step of RCU grace-period initialization. rcutree.gp_preinit_delay= [KNL] Set the number of jiffies to delay each step of RCU grace-period pre-initialization, that is, the propagation of recent CPU-hotplug changes up the rcu_node combining tree. rcutree.use_softirq= [KNL] If set to zero, move all RCU_SOFTIRQ processing to per-CPU rcuc kthreads. Defaults to a non-zero value, meaning that RCU_SOFTIRQ is used by default. Specify rcutree.use_softirq=0 to use rcuc kthreads. rcutree.rcu_fanout_exact= [KNL] Disable autobalancing of the rcu_node combining tree. This is used by rcutorture, and might possibly be useful for architectures having high cache-to-cache transfer latencies. rcutree.rcu_fanout_leaf= [KNL] Change the number of CPUs assigned to each leaf rcu_node structure. Useful for very large systems, which will choose the value 64, and for NUMA systems with large remote-access latencies, which will choose a value aligned with the appropriate hardware boundaries. rcutree.jiffies_till_first_fqs= [KNL] Set delay from grace-period initialization to first attempt to force quiescent states. Units are jiffies, minimum value is zero, and maximum value is HZ. rcutree.jiffies_till_next_fqs= [KNL] Set delay between subsequent attempts to force quiescent states. Units are jiffies, minimum value is one, and maximum value is HZ. rcutree.jiffies_till_sched_qs= [KNL] Set required age in jiffies for a given grace period before RCU starts soliciting quiescent-state help from rcu_note_context_switch() and cond_resched(). If not specified, the kernel will calculate a value based on the most recent settings of rcutree.jiffies_till_first_fqs and rcutree.jiffies_till_next_fqs. This calculated value may be viewed in rcutree.jiffies_to_sched_qs. Any attempt to set rcutree.jiffies_to_sched_qs will be cheerfully overwritten. rcutree.kthread_prio= [KNL,BOOT] Set the SCHED_FIFO priority of the RCU per-CPU kthreads (rcuc/N). This value is also used for the priority of the RCU boost threads (rcub/N) and for the RCU grace-period kthreads (rcu_bh, rcu_preempt, and rcu_sched). If RCU_BOOST is set, valid values are 1-99 and the default is 1 (the least-favored priority). Otherwise, when RCU_BOOST is not set, valid values are 0-99 and the default is zero (non-realtime operation). rcutree.rcu_nocb_leader_stride= [KNL] Set the number of NOCB kthread groups, which defaults to the square root of the number of CPUs. Larger numbers reduces the wakeup overhead on the per-CPU grace-period kthreads, but increases that same overhead on each group&#39;s leader. rcutree.qhimark= [KNL] Set threshold of queued RCU callbacks beyond which batch limiting is disabled. rcutree.qlowmark= [KNL] Set threshold of queued RCU callbacks below which batch limiting is re-enabled. rcutree.rcu_idle_gp_delay= [KNL] Set wakeup interval for idle CPUs that have RCU callbacks (RCU_FAST_NO_HZ=y). rcutree.rcu_idle_lazy_gp_delay= [KNL] Set wakeup interval for idle CPUs that have only &quot;lazy&quot; RCU callbacks (RCU_FAST_NO_HZ=y). Lazy RCU callbacks are those which RCU can prove do nothing more than free memory. rcutree.rcu_kick_kthreads= [KNL] Cause the grace-period kthread to get an extra wake_up() if it sleeps three times longer than it should at force-quiescent-state time. This wake_up() will be accompanied by a WARN_ONCE() splat and an ftrace_dump(). rcutree.sysrq_rcu= [KNL] Commandeer a sysrq key to dump out Tree RCU&#39;s rcu_node tree with an eye towards determining why a new grace period has not yet started. rcuperf.gp_async= [KNL] Measure performance of asynchronous grace-period primitives such as call_rcu(). rcuperf.gp_async_max= [KNL] Specify the maximum number of outstanding callbacks per writer thread. When a writer thread exceeds this limit, it invokes the corresponding flavor of rcu_barrier() to allow previously posted callbacks to drain. rcuperf.gp_exp= [KNL] Measure performance of expedited synchronous grace-period primitives. rcuperf.holdoff= [KNL] Set test-start holdoff period. The purpose of this parameter is to delay the start of the test until boot completes in order to avoid interference. rcuperf.nreaders= [KNL] Set number of RCU readers. The value -1 selects N, where N is the number of CPUs. A value &quot;n&quot; less than -1 selects N-n+1, where N is again the number of CPUs. For example, -2 selects N (the number of CPUs), -3 selects N+1, and so on. A value of &quot;n&quot; less than or equal to -N selects a single reader. rcuperf.nwriters= [KNL] Set number of RCU writers. The values operate the same as for rcuperf.nreaders. N, where N is the number of CPUs rcuperf.perf_type= [KNL] Specify the RCU implementation to test. rcuperf.shutdown= [KNL] Shut the system down after performance tests complete. This is useful for hands-off automated testing. rcuperf.verbose= [KNL] Enable additional printk() statements. rcuperf.writer_holdoff= [KNL] Write-side holdoff between grace periods, in microseconds. The default of zero says no holdoff. rcutorture.fqs_duration= [KNL] Set duration of force_quiescent_state bursts in microseconds. rcutorture.fqs_holdoff= [KNL] Set holdoff time within force_quiescent_state bursts in microseconds. rcutorture.fqs_stutter= [KNL] Set wait time between force_quiescent_state bursts in seconds. rcutorture.fwd_progress= [KNL] Enable RCU grace-period forward-progress testing for the types of RCU supporting this notion. rcutorture.fwd_progress_div= [KNL] Specify the fraction of a CPU-stall-warning period to do tight-loop forward-progress testing. rcutorture.fwd_progress_holdoff= [KNL] Number of seconds to wait between successive forward-progress tests. rcutorture.fwd_progress_need_resched= [KNL] Enclose cond_resched() calls within checks for need_resched() during tight-loop forward-progress testing. rcutorture.gp_cond= [KNL] Use conditional/asynchronous update-side primitives, if available. rcutorture.gp_exp= [KNL] Use expedited update-side primitives, if available. rcutorture.gp_normal= [KNL] Use normal (non-expedited) asynchronous update-side primitives, if available. rcutorture.gp_sync= [KNL] Use normal (non-expedited) synchronous update-side primitives, if available. If all of rcutorture.gp_cond=, rcutorture.gp_exp=, rcutorture.gp_normal=, and rcutorture.gp_sync= are zero, rcutorture acts as if is interpreted they are all non-zero. rcutorture.n_barrier_cbs= [KNL] Set callbacks/threads for rcu_barrier() testing. rcutorture.nfakewriters= [KNL] Set number of concurrent RCU writers. These just stress RCU, they don&#39;t participate in the actual test, hence the &quot;fake&quot;. rcutorture.nreaders= [KNL] Set number of RCU readers. The value -1 selects N-1, where N is the number of CPUs. A value &quot;n&quot; less than -1 selects N-n-2, where N is again the number of CPUs. For example, -2 selects N (the number of CPUs), -3 selects N+1, and so on. rcutorture.object_debug= [KNL] Enable debug-object double-call_rcu() testing. rcutorture.onoff_holdoff= [KNL] Set time (s) after boot for CPU-hotplug testing. rcutorture.onoff_interval= [KNL] Set time (jiffies) between CPU-hotplug operations, or zero to disable CPU-hotplug testing. rcutorture.shuffle_interval= [KNL] Set task-shuffle interval (s). Shuffling tasks allows some CPUs to go into dyntick-idle mode during the rcutorture test. rcutorture.shutdown_secs= [KNL] Set time (s) after boot system shutdown. This is useful for hands-off automated testing. rcutorture.stall_cpu= [KNL] Duration of CPU stall (s) to test RCU CPU stall warnings, zero to disable. rcutorture.stall_cpu_holdoff= [KNL] Time to wait (s) after boot before inducing stall. rcutorture.stall_cpu_irqsoff= [KNL] Disable interrupts while stalling if set. rcutorture.stat_interval= [KNL] Time (s) between statistics printk()s. rcutorture.stutter= [KNL] Time (s) to stutter testing, for example, specifying five seconds causes the test to run for five seconds, wait for five seconds, and so on. This tests RCU&#39;s ability to transition abruptly to and from idle. rcutorture.test_boost= [KNL] Test RCU priority boosting? 0=no, 1=maybe, 2=yes. &quot;Maybe&quot; means test if the RCU implementation under test support RCU priority boosting. rcutorture.test_boost_duration= [KNL] Duration (s) of each individual boost test. rcutorture.test_boost_interval= [KNL] Interval (s) between each boost test. rcutorture.test_no_idle_hz= [KNL] Test RCU&#39;s dyntick-idle handling. See also the rcutorture.shuffle_interval parameter. rcutorture.torture_type= [KNL] Specify the RCU implementation to test. rcutorture.verbose= [KNL] Enable additional printk() statements. rcupdate.rcu_cpu_stall_suppress= [KNL] Suppress RCU CPU stall warning messages. rcupdate.rcu_cpu_stall_timeout= [KNL] Set timeout for RCU CPU stall warning messages. rcupdate.rcu_expedited= [KNL] Use expedited grace-period primitives, for example, synchronize_rcu_expedited() instead of synchronize_rcu(). This reduces latency, but can increase CPU utilization, degrade real-time latency, and degrade energy efficiency. No effect on CONFIG_TINY_RCU kernels. rcupdate.rcu_normal= [KNL] Use only normal grace-period primitives, for example, synchronize_rcu() instead of synchronize_rcu_expedited(). This improves real-time latency, CPU utilization, and energy efficiency, but can expose users to increased grace-period latency. This parameter overrides rcupdate.rcu_expedited. No effect on CONFIG_TINY_RCU kernels. rcupdate.rcu_normal_after_boot= [KNL] Once boot has completed (that is, after rcu_end_inkernel_boot() has been invoked), use only normal grace-period primitives. No effect on CONFIG_TINY_RCU kernels. rcupdate.rcu_task_stall_timeout= [KNL] Set timeout in jiffies for RCU task stall warning messages. Disable with a value less than or equal to zero. rcupdate.rcu_self_test= [KNL] Run the RCU early boot self tests rdinit= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /init from the ramdisk, used for early userspace startup. See initrd. rdt= [HW,X86,RDT] Turn on/off individual RDT features. List is: cmt, mbmtotal, mbmlocal, l3cat, l3cdp, l2cat, l2cdp, mba. E.g. to turn on cmt and turn off mba use: rdt=cmt,!mba reboot= [KNL] Format (x86 or x86_64): [w[arm] | c[old] | h[ard] | s[oft] | g[pio]] \\ [[,]s[mp]#### \\ [[,]b[ios] | a[cpi] | k[bd] | t[riple] | e[fi] | p[ci]] \\ [[,]f[orce] Where reboot_mode is one of warm (soft) or cold (hard) or gpio, reboot_type is one of bios, acpi, kbd, triple, efi, or pci, reboot_force is either force or not specified, reboot_cpu is s[mp]#### with #### being the processor to be used for rebooting. relax_domain_level= [KNL, SMP] Set scheduler&#39;s default relax_domain_level. See Documentation/cgroup-v1/cpusets.txt. reserve= [KNL,BUGS] Force kernel to ignore I/O ports or memory Format: &lt;base1&gt;,&lt;size1&gt;[,&lt;base2&gt;,&lt;size2&gt;,...] Reserve I/O ports or memory so the kernel won&#39;t use them. If &lt;base&gt; is less than 0x10000, the region is assumed to be I/O ports; otherwise it is memory. reservetop= [X86-32] Format: nn[KMG] Reserves a hole at the top of the kernel virtual address space. reservelow= [X86] Format: nn[K] Set the amount of memory to reserve for BIOS at the bottom of the address space. reset_devices [KNL] Force drivers to reset the underlying device during initialization. resume= [SWSUSP] Specify the partition device for software suspend Format: &#123;/dev/&lt;dev&gt; | PARTUUID=&lt;uuid&gt; | &lt;int&gt;:&lt;int&gt; | &lt;hex&gt;&#125; resume_offset= [SWSUSP] Specify the offset from the beginning of the partition given by &quot;resume=&quot; at which the swap header is located, in &lt;PAGE_SIZE&gt; units (needed only for swap files). See Documentation/power/swsusp-and-swap-files.rst resumedelay= [HIBERNATION] Delay (in seconds) to pause before attempting to read the resume files resumewait [HIBERNATION] Wait (indefinitely) for resume device to show up. Useful for devices that are detected asynchronously (e.g. USB and MMC devices). hibernate= [HIBERNATION] noresume Don&#39;t check if there&#39;s a hibernation image present during boot. nocompress Don&#39;t compress/decompress hibernation images. no Disable hibernation and resume. protect_image Turn on image protection during restoration (that will set all pages holding image data during restoration read-only). retain_initrd [RAM] Keep initrd memory after extraction rfkill.default_state= 0 &quot;airplane mode&quot;. All wifi, bluetooth, wimax, gps, fm, etc. communication is blocked by default. 1 Unblocked. rfkill.master_switch_mode= 0 The &quot;airplane mode&quot; button does nothing. 1 The &quot;airplane mode&quot; button toggles between everything blocked and the previous configuration. 2 The &quot;airplane mode&quot; button toggles between everything blocked and everything unblocked. rhash_entries= [KNL,NET] Set number of hash buckets for route cache ring3mwait=disable [KNL] Disable ring 3 MONITOR/MWAIT feature on supported CPUs. ro [KNL] Mount root device read-only on boot rodata= [KNL] on Mark read-only kernel memory as read-only (default). off Leave read-only kernel memory writable for debugging. rockchip.usb_uart Enable the uart passthrough on the designated usb port on Rockchip SoCs. When active, the signals of the debug-uart get routed to the D+ and D- pins of the usb port and the regular usb controller gets disabled. root= [KNL] Root filesystem See name_to_dev_t comment in init/do_mounts.c. rootdelay= [KNL] Delay (in seconds) to pause before attempting to mount the root filesystem rootflags= [KNL] Set root filesystem mount option string rootfstype= [KNL] Set root filesystem type rootwait [KNL] Wait (indefinitely) for root device to show up. Useful for devices that are detected asynchronously (e.g. USB and MMC devices). rproc_mem=nn[KMG][@address] [KNL,ARM,CMA] Remoteproc physical memory block. Memory area to be used by remote processor image, managed by CMA. rw [KNL] Mount root device read-write on boot S [KNL] Run init in single mode s390_iommu= [HW,S390] Set s390 IOTLB flushing mode strict With strict flushing every unmap operation will result in an IOTLB flush. Default is lazy flushing before reuse, which is faster. sa1100ir [NET] See drivers/net/irda/sa1100_ir.c. sbni= [NET] Granch SBNI12 leased line adapter sched_debug [KNL] Enables verbose scheduler debug messages. schedstats= [KNL,X86] Enable or disable scheduled statistics. Allowed values are enable and disable. This feature incurs a small amount of overhead in the scheduler but is useful for debugging and performance tuning. skew_tick= [KNL] Offset the periodic timer tick per cpu to mitigate xtime_lock contention on larger systems, and/or RCU lock contention on all systems with CONFIG_MAXSMP set. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 -- disable. (may be 1 via CONFIG_CMDLINE=&quot;skew_tick=1&quot; 1 -- enable. Note: increases power consumption, thus should only be enabled if running jitter sensitive (HPC/RT) workloads. security= [SECURITY] Choose a security module to enable at boot. If this boot parameter is not specified, only the first security module asking for security registration will be loaded. An invalid security module name will be treated as if no module has been chosen. selinux= [SELINUX] Disable or enable SELinux at boot time. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- disable. 1 -- enable. Default value is 1. apparmor= [APPARMOR] Disable or enable AppArmor at boot time Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/apparmor/Kconfig help text 0 -- disable. 1 -- enable. Default value is set via kernel config option. serialnumber [BUGS=X86-32] shapers= [NET] Maximal number of shapers. simeth= [IA-64] simscsi= slram= [HW,MTD] slab_nomerge [MM] Disable merging of slabs with similar size. May be necessary if there is some reason to distinguish allocs to different slabs, especially in hardened environments where the risk of heap overflows and layout control by attackers can usually be frustrated by disabling merging. This will reduce most of the exposure of a heap attack to a single cache (risks via metadata attacks are mostly unchanged). Debug options disable merging on their own. For more information see Documentation/vm/slub.rst. slab_max_order= [MM, SLAB] Determines the maximum allowed order for slabs. A high setting may cause OOMs due to memory fragmentation. Defaults to 1 for systems with more than 32MB of RAM, 0 otherwise. slub_debug[=options[,slabs]] [MM, SLUB] Enabling slub_debug allows one to determine the culprit if slab objects become corrupted. Enabling slub_debug can create guard zones around objects and may poison objects when not in use. Also tracks the last alloc / free. For more information see Documentation/vm/slub.rst. slub_memcg_sysfs= [MM, SLUB] Determines whether to enable sysfs directories for memory cgroup sub-caches. 1 to enable, 0 to disable. The default is determined by CONFIG_SLUB_MEMCG_SYSFS_ON. Enabling this can lead to a very high number of debug directories and files being created under /sys/kernel/slub. slub_max_order= [MM, SLUB] Determines the maximum allowed order for slabs. A high setting may cause OOMs due to memory fragmentation. For more information see Documentation/vm/slub.rst. slub_min_objects= [MM, SLUB] The minimum number of objects per slab. SLUB will increase the slab order up to slub_max_order to generate a sufficiently large slab able to contain the number of objects indicated. The higher the number of objects the smaller the overhead of tracking slabs and the less frequently locks need to be acquired. For more information see Documentation/vm/slub.rst. slub_min_order= [MM, SLUB] Determines the minimum page order for slabs. Must be lower than slub_max_order. For more information see Documentation/vm/slub.rst. slub_nomerge [MM, SLUB] Same with slab_nomerge. This is supported for legacy. See slab_nomerge for more information. smart2= [HW] Format: &lt;io1&gt;[,&lt;io2&gt;[,...,&lt;io8&gt;]] smsc-ircc2.nopnp [HW] Don&#39;t use PNP to discover SMC devices smsc-ircc2.ircc_cfg= [HW] Device configuration I/O port smsc-ircc2.ircc_sir= [HW] SIR base I/O port smsc-ircc2.ircc_fir= [HW] FIR base I/O port smsc-ircc2.ircc_irq= [HW] IRQ line smsc-ircc2.ircc_dma= [HW] DMA channel smsc-ircc2.ircc_transceiver= [HW] Transceiver type: 0: Toshiba Satellite 1800 (GP data pin select) 1: Fast pin select (default) 2: ATC IRMode smt [KNL,S390] Set the maximum number of threads (logical CPUs) to use per physical CPU on systems capable of symmetric multithreading (SMT). Will be capped to the actual hardware limit. Format: &lt;integer&gt; Default: -1 (no limit) softlockup_panic= [KNL] Should the soft-lockup detector generate panics. Format: &lt;integer&gt; A nonzero value instructs the soft-lockup detector to panic the machine when a soft-lockup occurs. This is also controlled by CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC which is the respective build-time switch to that functionality. softlockup_all_cpu_backtrace= [KNL] Should the soft-lockup detector generate backtraces on all cpus. Format: &lt;integer&gt; sonypi.*= [HW] Sony Programmable I/O Control Device driver See Documentation/laptops/sonypi.txt spectre_v2= [X86] Control mitigation of Spectre variant 2 (indirect branch speculation) vulnerability. The default operation protects the kernel from user space attacks. on - unconditionally enable, implies spectre_v2_user=on off - unconditionally disable, implies spectre_v2_user=off auto - kernel detects whether your CPU model is vulnerable Selecting &#39;on&#39; will, and &#39;auto&#39; may, choose a mitigation method at run time according to the CPU, the available microcode, the setting of the CONFIG_RETPOLINE configuration option, and the compiler with which the kernel was built. Selecting &#39;on&#39; will also enable the mitigation against user space to user space task attacks. Selecting &#39;off&#39; will disable both the kernel and the user space protections. Specific mitigations can also be selected manually: retpoline - replace indirect branches retpoline,generic - google&#39;s original retpoline retpoline,amd - AMD-specific minimal thunk ibrs - use IBRS to protect kernel ibrs_always - use IBRS to protect both kernel and userland retpoline,ibrs_user - replace indirect branches with retpolines and use IBRS to protect userland Not specifying this option is equivalent to spectre_v2=auto. spectre_v2_user= [X86] Control mitigation of Spectre variant 2 (indirect branch speculation) vulnerability between user space tasks on - Unconditionally enable mitigations. Is enforced by spectre_v2=on off - Unconditionally disable mitigations. Is enforced by spectre_v2=off prctl - Indirect branch speculation is enabled, but mitigation can be enabled via prctl per thread. The mitigation control state is inherited on fork. prctl,ibpb - Like &quot;prctl&quot; above, but only STIBP is controlled per thread. IBPB is issued always when switching between different user space processes. seccomp - Same as &quot;prctl&quot; above, but all seccomp threads will enable the mitigation unless they explicitly opt out. seccomp,ibpb - Like &quot;seccomp&quot; above, but only STIBP is controlled per thread. IBPB is issued always when switching between different user space processes. auto - Kernel selects the mitigation depending on the available CPU features and vulnerability. Default mitigation: If CONFIG_SECCOMP=y then &quot;seccomp&quot;, otherwise &quot;prctl&quot; Not specifying this option is equivalent to spectre_v2_user=auto. spec_store_bypass_disable= [HW] Control Speculative Store Bypass (SSB) Disable mitigation (Speculative Store Bypass vulnerability) Certain CPUs are vulnerable to an exploit against a a common industry wide performance optimization known as &quot;Speculative Store Bypass&quot; in which recent stores to the same memory location may not be observed by later loads during speculative execution. The idea is that such stores are unlikely and that they can be detected prior to instruction retirement at the end of a particular speculation execution window. In vulnerable processors, the speculatively forwarded store can be used in a cache side channel attack, for example to read memory to which the attacker does not directly have access (e.g. inside sandboxed code). This parameter controls whether the Speculative Store Bypass optimization is used. on - Unconditionally disable Speculative Store Bypass off - Unconditionally enable Speculative Store Bypass auto - Kernel detects whether the CPU model contains an implementation of Speculative Store Bypass and picks the most appropriate mitigation. If the CPU is not vulnerable, &quot;off&quot; is selected. If the CPU is vulnerable the default mitigation is architecture and Kconfig dependent. See below. prctl - Control Speculative Store Bypass per thread via prctl. Speculative Store Bypass is enabled for a process by default. The state of the control is inherited on fork. seccomp - Same as &quot;prctl&quot; above, but all seccomp threads will disable SSB unless they explicitly opt out. Not specifying this option is equivalent to spec_store_bypass_disable=auto. Default mitigations: X86: If CONFIG_SECCOMP=y &quot;seccomp&quot;, otherwise &quot;prctl&quot; spia_io_base= [HW,MTD] spia_fio_base= spia_pedr= spia_peddr= split_lock_detect= [X86] Enable split lock detection When enabled (and if hardware support is present), atomic instructions that access data across cache line boundaries will result in an alignment check exception. off - not enabled warn - the kernel will emit rate limited warnings about applications triggering the #AC exception. This mode is the default on CPUs that supports split lock detection. fatal - the kernel will send SIGBUS to applications that trigger the #AC exception. If an #AC exception is hit in the kernel or in firmware (i.e. not while executing in user mode) the kernel will oops in either &quot;warn&quot; or &quot;fatal&quot; mode. srbds= [X86,INTEL] Control the Special Register Buffer Data Sampling (SRBDS) mitigation. Certain CPUs are vulnerable to an MDS-like exploit which can leak bits from the random number generator. By default, this issue is mitigated by microcode. However, the microcode fix can cause the RDRAND and RDSEED instructions to become much slower. Among other effects, this will result in reduced throughput from /dev/urandom. The microcode mitigation can be disabled with the following option: off: Disable mitigation and remove performance impact to RDRAND and RDSEED srcutree.counter_wrap_check [KNL] Specifies how frequently to check for grace-period sequence counter wrap for the srcu_data structure&#39;s -&gt;srcu_gp_seq_needed field. The greater the number of bits set in this kernel parameter, the less frequently counter wrap will be checked for. Note that the bottom two bits are ignored. srcutree.exp_holdoff [KNL] Specifies how many nanoseconds must elapse since the end of the last SRCU grace period for a given srcu_struct until the next normal SRCU grace period will be considered for automatic expediting. Set to zero to disable automatic expediting. ssbd= [ARM64,HW] Speculative Store Bypass Disable control On CPUs that are vulnerable to the Speculative Store Bypass vulnerability and offer a firmware based mitigation, this parameter indicates how the mitigation should be used: force-on: Unconditionally enable mitigation for for both kernel and userspace force-off: Unconditionally disable mitigation for for both kernel and userspace kernel: Always enable mitigation in the kernel, and offer a prctl interface to allow userspace to register its interest in being mitigated too. stack_guard_gap= [MM] override the default stack gap protection. The value is in page units and it defines how many pages prior to (for stacks growing down) resp. after (for stacks growing up) the main stack are reserved for no other mapping. Default value is 256 pages. stacktrace [FTRACE] Enabled the stack tracer on boot up. stacktrace_filter=[function-list] [FTRACE] Limit the functions that the stack tracer will trace at boot up. function-list is a comma separated list of functions. This list can be changed at run time by the stack_trace_filter file in the debugfs tracing directory. Note, this enables stack tracing and the stacktrace above is not needed. sti= [PARISC,HW] Format: &lt;num&gt; Set the STI (builtin display/keyboard on the HP-PARISC machines) console (graphic card) which should be used as the initial boot-console. See also comment in drivers/video/console/sticore.c. sti_font= [HW] See comment in drivers/video/console/sticore.c. stifb= [HW] Format: bpp:&lt;bpp1&gt;[:&lt;bpp2&gt;[:&lt;bpp3&gt;...]] sunrpc.min_resvport= sunrpc.max_resvport= [NFS,SUNRPC] SunRPC servers often require that client requests originate from a privileged port (i.e. a port in the range 0 &lt; portnr &lt; 1024). An administrator who wishes to reserve some of these ports for other uses may adjust the range that the kernel&#39;s sunrpc client considers to be privileged using these two parameters to set the minimum and maximum port values. sunrpc.svc_rpc_per_connection_limit= [NFS,SUNRPC] Limit the number of requests that the server will process in parallel from a single connection. The default value is 0 (no limit). sunrpc.pool_mode= [NFS] Control how the NFS server code allocates CPUs to service thread pools. Depending on how many NICs you have and where their interrupts are bound, this option will affect which CPUs will do NFS serving. Note: this parameter cannot be changed while the NFS server is running. auto the server chooses an appropriate mode automatically using heuristics global a single global pool contains all CPUs percpu one pool for each CPU pernode one pool for each NUMA node (equivalent to global on non-NUMA machines) sunrpc.tcp_slot_table_entries= sunrpc.udp_slot_table_entries= [NFS,SUNRPC] Sets the upper limit on the number of simultaneous RPC calls that can be sent from the client to a server. Increasing these values may allow you to improve throughput, but will also increase the amount of memory reserved for use by the client. suspend.pm_test_delay= [SUSPEND] Sets the number of seconds to remain in a suspend test mode before resuming the system (see /sys/power/pm_test). Only available when CONFIG_PM_DEBUG is set. Default value is 5. svm= [PPC] Format: &#123; on | off | y | n | 1 | 0 &#125; This parameter controls use of the Protected Execution Facility on pSeries. swapaccount=[0|1] [KNL] Enable accounting of swap in memory resource controller if no parameter or 1 is given or disable it if 0 is given (See Documentation/cgroup-v1/memory.txt) swiotlb= [ARM,IA-64,PPC,MIPS,X86] Format: &#123; &lt;int&gt; | force | noforce &#125; &lt;int&gt; -- Number of I/O TLB slabs force -- force using of bounce buffers even if they wouldn&#39;t be automatically used by the kernel noforce -- Never use bounce buffers (for debugging) switches= [HW,M68k] sysfs.deprecated=0|1 [KNL] Enable/disable old style sysfs layout for old udev on older distributions. When this option is enabled very new udev will not work anymore. When this option is disabled (or CONFIG_SYSFS_DEPRECATED not compiled) in older udev will not work anymore. Default depends on CONFIG_SYSFS_DEPRECATED_V2 set in the kernel configuration. sysrq_always_enabled [KNL] Ignore sysrq setting - this boot parameter will neutralize any effect of /proc/sys/kernel/sysrq. Useful for debugging. tcpmhash_entries= [KNL,NET] Set the number of tcp_metrics_hash slots. Default value is 8192 or 16384 depending on total ram pages. This is used to specify the TCP metrics cache size. See Documentation/networking/ip-sysctl.txt &quot;tcp_no_metrics_save&quot; section for more details. tdfx= [HW,DRM] test_suspend= [SUSPEND][,N] Specify &quot;mem&quot; (for Suspend-to-RAM) or &quot;standby&quot; (for standby suspend) or &quot;freeze&quot; (for suspend type freeze) as the system sleep state during system startup with the optional capability to repeat N number of times. The system is woken from this state using a wakeup-capable RTC alarm. thash_entries= [KNL,NET] Set number of hash buckets for TCP connection thermal.act= [HW,ACPI] -1: disable all active trip points in all thermal zones &lt;degrees C&gt;: override all lowest active trip points thermal.crt= [HW,ACPI] -1: disable all critical trip points in all thermal zones &lt;degrees C&gt;: override all critical trip points thermal.nocrt= [HW,ACPI] Set to disable actions on ACPI thermal zone critical and hot trip points. thermal.off= [HW,ACPI] 1: disable ACPI thermal control thermal.psv= [HW,ACPI] -1: disable all passive trip points &lt;degrees C&gt;: override all passive trip points to this value thermal.tzp= [HW,ACPI] Specify global default ACPI thermal zone polling rate &lt;deci-seconds&gt;: poll all this frequency 0: no polling (default) threadirqs [KNL] Force threading of all interrupt handlers except those marked explicitly IRQF_NO_THREAD. tmem [KNL,XEN] Enable the Transcendent memory driver if built-in. tmem.cleancache=0|1 [KNL, XEN] Default is on (1). Disable the usage of the cleancache API to send anonymous pages to the hypervisor. tmem.frontswap=0|1 [KNL, XEN] Default is on (1). Disable the usage of the frontswap API to send swap pages to the hypervisor. If disabled the selfballooning and selfshrinking are force disabled. tmem.selfballooning=0|1 [KNL, XEN] Default is on (1). Disable the driving of swap pages to the hypervisor. tmem.selfshrinking=0|1 [KNL, XEN] Default is on (1). Partial swapoff that immediately transfers pages from Xen hypervisor back to the kernel based on different criteria. topology= [S390] Format: &#123;off | on&#125; Specify if the kernel should make use of the cpu topology information if the hardware supports this. The scheduler will make use of this information and e.g. base its process migration decisions on it. Default is on. topology_updates= [KNL, PPC, NUMA] Format: &#123;off&#125; Specify if the kernel should ignore (off) topology updates sent by the hypervisor to this LPAR. tp720= [HW,PS2] tpm_suspend_pcr=[HW,TPM] Format: integer pcr id Specify that at suspend time, the tpm driver should extend the specified pcr with zeros, as a workaround for some chips which fail to flush the last written pcr on TPM_SaveState. This will guarantee that all the other pcrs are saved. trace_buf_size=nn[KMG] [FTRACE] will set tracing buffer size on each cpu. trace_event=[event-list] [FTRACE] Set and start specified trace events in order to facilitate early boot debugging. The event-list is a comma separated list of trace events to enable. See also Documentation/trace/events.rst trace_options=[option-list] [FTRACE] Enable or disable tracer options at boot. The option-list is a comma delimited list of options that can be enabled or disabled just as if you were to echo the option name into /sys/kernel/debug/tracing/trace_options For example, to enable stacktrace option (to dump the stack trace of each event), add to the command line: trace_options=stacktrace See also Documentation/trace/ftrace.rst &quot;trace options&quot; section. tp_printk[FTRACE] Have the tracepoints sent to printk as well as the tracing ring buffer. This is useful for early boot up where the system hangs or reboots and does not give the option for reading the tracing buffer or performing a ftrace_dump_on_oops. To turn off having tracepoints sent to printk, echo 0 &gt; /proc/sys/kernel/tracepoint_printk Note, echoing 1 into this file without the tracepoint_printk kernel cmdline option has no effect. ** CAUTION ** Having tracepoints sent to printk() and activating high frequency tracepoints such as irq or sched, can cause the system to live lock. traceoff_on_warning [FTRACE] enable this option to disable tracing when a warning is hit. This turns off &quot;tracing_on&quot;. Tracing can be enabled again by echoing &#39;1&#39; into the &quot;tracing_on&quot; file located in /sys/kernel/debug/tracing/ This option is useful, as it disables the trace before the WARNING dump is called, which prevents the trace to be filled with content caused by the warning output. This option can also be set at run time via the sysctl option: kernel/traceoff_on_warning transparent_hugepage= [KNL] Format: [always|madvise|never] Can be used to control the default behavior of the system with respect to transparent hugepages. See Documentation/admin-guide/mm/transhuge.rst for more details. tsc= Disable clocksource stability checks for TSC. Format: &lt;string&gt; [x86] reliable: mark tsc clocksource as reliable, this disables clocksource verification at runtime, as well as the stability checks done at bootup. Used to enable high-resolution timer mode on older hardware, and in virtualized environment. [x86] noirqtime: Do not use TSC to do irq accounting. Used to run time disable IRQ_TIME_ACCOUNTING on any platforms where RDTSC is slow and this accounting can add overhead. [x86] unstable: mark the TSC clocksource as unstable, this marks the TSC unconditionally unstable at bootup and avoids any further wobbles once the TSC watchdog notices. [x86] nowatchdog: disable clocksource watchdog. Used in situations with strict latency requirements (where interruptions from clocksource watchdog are not acceptable). tsx= [X86] Control Transactional Synchronization Extensions (TSX) feature in Intel processors that support TSX control. This parameter controls the TSX feature. The options are: on - Enable TSX on the system. Although there are mitigations for all known security vulnerabilities, TSX has been known to be an accelerator for several previous speculation-related CVEs, and so there may be unknown security risks associated with leaving it enabled. off - Disable TSX on the system. (Note that this option takes effect only on newer CPUs which are not vulnerable to MDS, i.e., have MSR_IA32_ARCH_CAPABILITIES.MDS_NO=1 and which get the new IA32_TSX_CTRL MSR through a microcode update. This new MSR allows for the reliable deactivation of the TSX functionality.) auto - Disable TSX if X86_BUG_TAA is present, otherwise enable TSX on the system. Not specifying this option is equivalent to tsx=off. See Documentation/admin-guide/hw-vuln/tsx_async_abort.rst for more details. tsx_async_abort= [X86,INTEL] Control mitigation for the TSX Async Abort (TAA) vulnerability. Similar to Micro-architectural Data Sampling (MDS) certain CPUs that support Transactional Synchronization Extensions (TSX) are vulnerable to an exploit against CPU internal buffers which can forward information to a disclosure gadget under certain conditions. In vulnerable processors, the speculatively forwarded data can be used in a cache side channel attack, to access data to which the attacker does not have direct access. This parameter controls the TAA mitigation. The options are: full - Enable TAA mitigation on vulnerable CPUs if TSX is enabled. full,nosmt - Enable TAA mitigation and disable SMT on vulnerable CPUs. If TSX is disabled, SMT is not disabled because CPU is not vulnerable to cross-thread TAA attacks. off - Unconditionally disable TAA mitigation On MDS-affected machines, tsx_async_abort=off can be prevented by an active MDS mitigation as both vulnerabilities are mitigated with the same mechanism so in order to disable this mitigation, you need to specify mds=off too. Not specifying this option is equivalent to tsx_async_abort=full. On CPUs which are MDS affected and deploy MDS mitigation, TAA mitigation is not required and doesn&#39;t provide any additional mitigation. For details see: Documentation/admin-guide/hw-vuln/tsx_async_abort.rst turbografx.map[2|3]= [HW,JOY] TurboGraFX parallel port interface Format: &lt;port#&gt;,&lt;js1&gt;,&lt;js2&gt;,&lt;js3&gt;,&lt;js4&gt;,&lt;js5&gt;,&lt;js6&gt;,&lt;js7&gt; See also Documentation/input/devices/joystick-parport.rst udbg-immortal [PPC] When debugging early kernel crashes that happen after console_init() and before a proper console driver takes over, this boot options might help &quot;seeing&quot; what&#39;s going on. uhash_entries= [KNL,NET] Set number of hash buckets for UDP/UDP-Lite connections uhci-hcd.ignore_oc= [USB] Ignore overcurrent events (default N). Some badly-designed motherboards generate lots of bogus events, for ports that aren&#39;t wired to anything. Set this parameter to avoid log spamming. Note that genuine overcurrent events won&#39;t be reported either. unknown_nmi_panic [X86] Cause panic on unknown NMI. unprivileged_bpf_disabled= Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; Sets the initial value of kernel.unprivileged_bpf_disabled sysctl knob. 0 - unprivileged bpf() syscall access is enabled. 1 - unprivileged bpf() syscall access is disabled. Default value is 1. usbcore.authorized_default= [USB] Default USB device authorization: (default -1 = authorized except for wireless USB, 0 = not authorized, 1 = authorized, 2 = authorized if device connected to internal port) usbcore.autosuspend= [USB] The autosuspend time delay (in seconds) used for newly-detected USB devices (default 2). This is the time required before an idle device will be autosuspended. Devices for which the delay is set to a negative value won&#39;t be autosuspended at all. usbcore.usbfs_snoop= [USB] Set to log all usbfs traffic (default 0 = off). usbcore.usbfs_snoop_max= [USB] Maximum number of bytes to snoop in each URB (default = 65536). usbcore.blinkenlights= [USB] Set to cycle leds on hubs (default 0 = off). usbcore.old_scheme_first= [USB] Start with the old device initialization scheme, applies only to low and full-speed devices (default 0 = off). usbcore.usbfs_memory_mb= [USB] Memory limit (in MB) for buffers allocated by usbfs (default = 16, 0 = max = 2047). usbcore.use_both_schemes= [USB] Try the other device initialization scheme if the first one fails (default 1 = enabled). usbcore.initial_descriptor_timeout= [USB] Specifies timeout for the initial 64-byte USB_REQ_GET_DESCRIPTOR request in milliseconds (default 5000 = 5.0 seconds). usbcore.nousb [USB] Disable the USB subsystem usbcore.quirks= [USB] A list of quirk entries to augment the built-in usb core quirk list. List entries are separated by commas. Each entry has the form VendorID:ProductID:Flags. The IDs are 4-digit hex numbers and Flags is a set of letters. Each letter will change the built-in quirk; setting it if it is clear and clearing it if it is set. The letters have the following meanings: a = USB_QUIRK_STRING_FETCH_255 (string descriptors must not be fetched using a 255-byte read); b = USB_QUIRK_RESET_RESUME (device can&#39;t resume correctly so reset it instead); c = USB_QUIRK_NO_SET_INTF (device can&#39;t handle Set-Interface requests); d = USB_QUIRK_CONFIG_INTF_STRINGS (device can&#39;t handle its Configuration or Interface strings); e = USB_QUIRK_RESET (device can&#39;t be reset (e.g morph devices), don&#39;t use reset); f = USB_QUIRK_HONOR_BNUMINTERFACES (device has more interface descriptions than the bNumInterfaces count, and can&#39;t handle talking to these interfaces); g = USB_QUIRK_DELAY_INIT (device needs a pause during initialization, after we read the device descriptor); h = USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL (For high speed and super speed interrupt endpoints, the USB 2.0 and USB 3.0 spec require the interval in microframes (1 microframe = 125 microseconds) to be calculated as interval = 2 ^ (bInterval-1). Devices with this quirk report their bInterval as the result of this calculation instead of the exponent variable used in the calculation); i = USB_QUIRK_DEVICE_QUALIFIER (device can&#39;t handle device_qualifier descriptor requests); j = USB_QUIRK_IGNORE_REMOTE_WAKEUP (device generates spurious wakeup, ignore remote wakeup capability); k = USB_QUIRK_NO_LPM (device can&#39;t handle Link Power Management); l = USB_QUIRK_LINEAR_FRAME_INTR_BINTERVAL (Device reports its bInterval as linear frames instead of the USB 2.0 calculation); m = USB_QUIRK_DISCONNECT_SUSPEND (Device needs to be disconnected before suspend to prevent spurious wakeup); n = USB_QUIRK_DELAY_CTRL_MSG (Device needs a pause after every control message); o = USB_QUIRK_HUB_SLOW_RESET (Hub needs extra delay after resetting its port); Example: quirks=0781:5580:bk,0a5c:5834:gij usbhid.mousepoll= [USBHID] The interval which mice are to be polled at. usbhid.jspoll= [USBHID] The interval which joysticks are to be polled at. usbhid.kbpoll= [USBHID] The interval which keyboards are to be polled at. usb-storage.delay_use= [UMS] The delay in seconds before a new device is scanned for Logical Units (default 1). usb-storage.quirks= [UMS] A list of quirks entries to supplement or override the built-in unusual_devs list. List entries are separated by commas. Each entry has the form VID:PID:Flags where VID and PID are Vendor and Product ID values (4-digit hex numbers) and Flags is a set of characters, each corresponding to a common usb-storage quirk flag as follows: a = SANE_SENSE (collect more than 18 bytes of sense data); b = BAD_SENSE (don&#39;t collect more than 18 bytes of sense data); c = FIX_CAPACITY (decrease the reported device capacity by one sector); d = NO_READ_DISC_INFO (don&#39;t use READ_DISC_INFO command); e = NO_READ_CAPACITY_16 (don&#39;t use READ_CAPACITY_16 command); f = NO_REPORT_OPCODES (don&#39;t use report opcodes command, uas only); g = MAX_SECTORS_240 (don&#39;t transfer more than 240 sectors at a time, uas only); h = CAPACITY_HEURISTICS (decrease the reported device capacity by one sector if the number is odd); i = IGNORE_DEVICE (don&#39;t bind to this device); j = NO_REPORT_LUNS (don&#39;t use report luns command, uas only); l = NOT_LOCKABLE (don&#39;t try to lock and unlock ejectable media); m = MAX_SECTORS_64 (don&#39;t transfer more than 64 sectors = 32 KB at a time); n = INITIAL_READ10 (force a retry of the initial READ(10) command); o = CAPACITY_OK (accept the capacity reported by the device); p = WRITE_CACHE (the device cache is ON by default); r = IGNORE_RESIDUE (the device reports bogus residue values); s = SINGLE_LUN (the device has only one Logical Unit); t = NO_ATA_1X (don&#39;t allow ATA(12) and ATA(16) commands, uas only); u = IGNORE_UAS (don&#39;t bind to the uas driver); w = NO_WP_DETECT (don&#39;t test whether the medium is write-protected). y = ALWAYS_SYNC (issue a SYNCHRONIZE_CACHE even if the device claims no cache) Example: quirks=0419:aaf5:rl,0421:0433:rc user_debug= [KNL,ARM] Format: &lt;int&gt; See arch/arm/Kconfig.debug help text. 1 - undefined instruction events 2 - system calls 4 - invalid data aborts 8 - SIGSEGV faults 16 - SIGBUS faults Example: user_debug=31 userpte= [X86] Flags controlling user PTE allocations. nohigh = do not allocate PTE pages in HIGHMEM regardless of setting of CONFIG_HIGHPTE. vdso= [X86,SH] On X86_32, this is an alias for vdso32=. Otherwise: vdso=1: enable VDSO (the default) vdso=0: disable VDSO mapping vdso32= [X86] Control the 32-bit vDSO vdso32=1: enable 32-bit VDSO vdso32=0 or vdso32=2: disable 32-bit VDSO See the help text for CONFIG_COMPAT_VDSO for more details. If CONFIG_COMPAT_VDSO is set, the default is vdso32=0; otherwise, the default is vdso32=1. For compatibility with older kernels, vdso32=2 is an alias for vdso32=0. Try vdso32=0 if you encounter an error that says: dl_main: Assertion `(void *) ph-&gt;p_vaddr == _rtld_local._dl_sysinfo_dso&#39; failed! vector= [IA-64,SMP] vector=percpu: enable percpu vector domain video= [FB] Frame buffer configuration See Documentation/fb/modedb.txt. video.brightness_switch_enabled= [0,1] If set to 1, on receiving an ACPI notify event generated by hotkey, video driver will adjust brightness level and then send out the event to user space through the allocated input device; If set to 0, video driver will only send out the event without touching backlight brightness level. default: 1 virtio_mmio.device= [VMMIO] Memory mapped virtio (platform) device. &lt;size&gt;@&lt;baseaddr&gt;:&lt;irq&gt;[:&lt;id&gt;] where: &lt;size&gt; := size (can use standard suffixes like K, M and G) &lt;baseaddr&gt; := physical base address &lt;irq&gt; := interrupt number (as passed to request_irq()) &lt;id&gt; := (optional) platform device id example: virtio_mmio.device=1K@0x100b0000:48:7 Can be used multiple times for multiple devices. vga= [BOOT,X86-32] Select a particular video mode See Documentation/x86/boot.txt and Documentation/svga.txt. Use vga=ask for menu. This is actually a boot loader parameter; the value is passed to the kernel using a special protocol. vm_debug[=options] [KNL] Available with CONFIG_DEBUG_VM=y. May slow down system boot speed, especially when enabled on systems with a large amount of memory. All options are enabled by default, and this interface is meant to allow for selectively enabling or disabling specific virtual memory debugging features. Available options are: P Enable page structure init time poisoning - Disable all of the above options vmalloc=nn[KMG] [KNL,BOOT] Forces the vmalloc area to have an exact size of &lt;nn&gt;. This can be used to increase the minimum size (128MB on x86). It can also be used to decrease the size and leave more room for directly mapped kernel RAM. vmcp_cma=nn[MG] [KNL,S390] Sets the memory size reserved for contiguous memory allocations for the vmcp device driver. vmhalt= [KNL,S390] Perform z/VM CP command after system halt. Format: &lt;command&gt; vmpanic= [KNL,S390] Perform z/VM CP command after kernel panic. Format: &lt;command&gt; vmpoff= [KNL,S390] Perform z/VM CP command after power off. Format: &lt;command&gt; vsyscall= [X86-64] Controls the behavior of vsyscalls (i.e. calls to fixed addresses of 0xffffffffff600x00 from legacy code). Most statically-linked binaries and older versions of glibc use these calls. Because these functions are at fixed addresses, they make nice targets for exploits that can control RIP. emulate [default] Vsyscalls turn into traps and are emulated reasonably safely. native Vsyscalls are native syscall instructions. This is a little bit faster than trapping and makes a few dynamic recompilers work better than they would in emulation mode. It also makes exploits much easier to write. none Vsyscalls don&#39;t work at all. This makes them quite hard to use for exploits but might break your system. vt.color= [VT] Default text color. Format: 0xYX, X = foreground, Y = background. Default: 0x07 = light gray on black. vt.cur_default= [VT] Default cursor shape. Format: 0xCCBBAA, where AA, BB, and CC are the same as the parameters of the &lt;Esc&gt;[?A;B;Cc escape sequence; see VGA-softcursor.txt. Default: 2 = underline. vt.default_blu= [VT] Format: &lt;blue0&gt;,&lt;blue1&gt;,&lt;blue2&gt;,...,&lt;blue15&gt; Change the default blue palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_grn= [VT] Format: &lt;green0&gt;,&lt;green1&gt;,&lt;green2&gt;,...,&lt;green15&gt; Change the default green palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_red= [VT] Format: &lt;red0&gt;,&lt;red1&gt;,&lt;red2&gt;,...,&lt;red15&gt; Change the default red palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_utf8= [VT] Format=&lt;0|1&gt; Set system-wide default UTF-8 mode for all tty&#39;s. Default is 1, i.e. UTF-8 mode is enabled for all newly opened terminals. vt.global_cursor_default= [VT] Format=&lt;-1|0|1&gt; Set system-wide default for whether a cursor is shown on new VTs. Default is -1, i.e. cursors will be created by default unless overridden by individual drivers. 0 will hide cursors, 1 will display them. vt.italic= [VT] Default color for italic text; 0-15. Default: 2 = green. vt.underline= [VT] Default color for underlined text; 0-15. Default: 3 = cyan. watchdog timers [HW,WDT] For information on watchdog timers, see Documentation/watchdog/watchdog-parameters.rst or other driver-specific files in the Documentation/watchdog/ directory. watchdog_thresh= This parameter allows early boot to change the value of the watchdog timeout threshold from the default of 10 seconds to avoid hard lockups. Example: watchdog_thresh=30 Default: 10 workqueue.watchdog_thresh= If CONFIG_WQ_WATCHDOG is configured, workqueue can warn stall conditions and dump internal state to help debugging. 0 disables workqueue stall detection; otherwise, it&#39;s the stall threshold duration in seconds. The default value is 30 and it can be updated at runtime by writing to the corresponding sysfs file. workqueue.disable_numa By default, all work items queued to unbound workqueues are affine to the NUMA nodes they&#39;re issued on, which results in better behavior in general. If NUMA affinity needs to be disabled for whatever reason, this option can be used. Note that this also can be controlled per-workqueue for workqueues visible under /sys/bus/workqueue/. workqueue.power_efficient Per-cpu workqueues are generally preferred because they show better performance thanks to cache locality; unfortunately, per-cpu workqueues tend to be more power hungry than unbound workqueues. Enabling this makes the per-cpu workqueues which were observed to contribute significantly to power consumption unbound, leading to measurably lower power usage at the cost of small performance overhead. The default value of this parameter is determined by the config option CONFIG_WQ_POWER_EFFICIENT_DEFAULT. workqueue.debug_force_rr_cpu Workqueue used to implicitly guarantee that work items queued without explicit CPU specified are put on the local CPU. This guarantee is no longer true and while local CPU is still preferred work items may be put on foreign CPUs. This debug option forces round-robin CPU selection to flush out usages which depend on the now broken guarantee. When enabled, memory and cache locality will be impacted. x2apic_phys [X86-64,APIC] Use x2apic physical mode instead of default x2apic cluster mode on platforms supporting x2apic. x86_intel_mid_timer= [X86-32,APBT] Choose timer option for x86 Intel MID platform. Two valid options are apbt timer only and lapic timer plus one apbt timer for broadcast timer. x86_intel_mid_timer=apbt_only | lapic_and_apbt xen_512gb_limit [KNL,X86-64,XEN] Restricts the kernel running paravirtualized under Xen to use only up to 512 GB of RAM. The reason to do so is crash analysis tools and Xen tools for doing domain save/restore/migration must be enabled to handle larger domains. xen_emul_unplug= [HW,X86,XEN] Unplug Xen emulated devices Format: [unplug0,][unplug1] ide-disks -- unplug primary master IDE devices aux-ide-disks -- unplug non-primary-master IDE devices nics -- unplug network devices all -- unplug all emulated devices (NICs and IDE disks) unnecessary -- unplugging emulated devices is unnecessary even if the host did not respond to the unplug protocol never -- do not unplug even if version check succeeds xen_nopvspin [X86,XEN] Disables the ticketlock slowpath using Xen PV optimizations. xen_nopv [X86] Disables the PV optimizations forcing the HVM guest to run as generic HVM guest with no PV drivers. nopv= [X86,XEN,KVM,HYPER_V,VMWARE] Disables the PV optimizations forcing the guest to run as generic guest with no PV drivers. Currently support XEN HVM, KVM, HYPER_V and VMWARE guest. xirc2ps_cs= [NET,PCMCIA] Format: &lt;irq&gt;,&lt;irq_mask&gt;,&lt;io&gt;,&lt;full_duplex&gt;,&lt;do_sound&gt;,&lt;lockup_hack&gt;[,&lt;irq2&gt;[,&lt;irq3&gt;[,&lt;irq4&gt;]]] xhci-hcd.quirks [USB,KNL] A hex value specifying bitmask with supplemental xhci host controller quirks. Meaning of each bit can be consulted in header drivers/usb/host/xhci.h.","categories":[{"name":"内核文档","slug":"内核文档","permalink":"http://www.oostech.com/categories/%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/"}],"tags":[]},{"title":"RHEL7 内核参数 Kernel-3.10.0-1160.15.2.el7_kernel-parameters","slug":"Kernel-3.10.0-1160.15.2.el7_kernel-parameters","date":"2021-03-06T16:00:00.000Z","updated":"2021-03-06T16:00:00.000Z","comments":false,"path":"2021/03/07/Kernel-3.10.0-1160.15.2.el7_kernel-parameters/","link":"","permalink":"http://www.oostech.com/2021/03/07/Kernel-3.10.0-1160.15.2.el7_kernel-parameters/","excerpt":"","text":"Kernel Parameters ~~~~~~~~~~~~~~~~~ The following is a consolidated list of the kernel parameters as implemented(mostly) by the __setup() macro and sorted into English Dictionary order(defined as ignoring all punctuation and sorting digits before letters in acase insensitive manner), and with descriptions where known. Module parameters for loadable modules are specified only as theparameter name with optional ‘=’ and value as appropriate, such as: modprobe usbcore blinkenlights=1 Module parameters for modules that are built into the kernel imageare specified on the kernel command line with the module name plus‘.’ plus parameter name, with ‘=’ and value if appropriate, such as: usbcore.blinkenlights=1 Hyphens (dashes) and underscores are equivalent in parameter names, so log_buf_len=1M print-fatal-signals=1can also be entered as log-buf-len=1M print_fatal_signals=1 This document may not be entirely up to date and comprehensive. The command“modinfo -p ${modulename}” shows a current list of all parameters of a loadablemodule. Loadable modules, after being loaded into the running kernel, alsoreveal their parameters in /sys/module/${modulename}/parameters/. Some of theseparameters may be changed at runtime by the command“echo -n ${value} &gt; /sys/module/${modulename}/parameters/${parm}”. The parameters listed below are only valid if certain kernel build options wereenabled and if respective hardware is present. The text in square brackets atthe beginning of each description states the restrictions within which aparameter is applicable: ACPI ACPI support is enabled. AGP AGP (Accelerated Graphics Port) is enabled. ALSA ALSA sound support is enabled. APIC APIC support is enabled. APM Advanced Power Management support is enabled. ARM ARM architecture is enabled. AVR32 AVR32 architecture is enabled. AX25 Appropriate AX.25 support is enabled. BLACKFIN Blackfin architecture is enabled. CLK Common clock infrastructure is enabled. CMA Contiguous Memory Area support is enabled. DRM Direct Rendering Management support is enabled. DYNAMIC_DEBUG Build in debug messages and enable them at runtime EDD BIOS Enhanced Disk Drive Services (EDD) is enabled EFI EFI Partitioning (GPT) is enabled EIDE EIDE/ATAPI support is enabled. EVM Extended Verification Module FB The frame buffer device is enabled. FTRACE Function tracing enabled. GCOV GCOV profiling is enabled. HW Appropriate hardware is enabled. IA-64 IA-64 architecture is enabled. IMA Integrity measurement architecture is enabled. IOSCHED More than one I/O scheduler is enabled. IP_PNP IP DHCP, BOOTP, or RARP is enabled. IPV6 IPv6 support is enabled. ISAPNP ISA PnP code is enabled. ISDN Appropriate ISDN support is enabled. JOY Appropriate joystick support is enabled. KGDB Kernel debugger support is enabled. KVM Kernel Virtual Machine support is enabled. LIBATA Libata driver is enabled LP Printer support is enabled. LOOP Loopback device support is enabled. M68k M68k architecture is enabled. These options have more detailed description inside of Documentation/m68k/kernel-options.txt. MDA MDA console support is enabled. MIPS MIPS architecture is enabled. MOUSE Appropriate mouse support is enabled. MSI Message Signaled Interrupts (PCI). MTD MTD (Memory Technology Device) support is enabled. NET Appropriate network support is enabled. NUMA NUMA support is enabled. NFS Appropriate NFS support is enabled. OSS OSS sound support is enabled. PV_OPS A paravirtualized kernel is enabled. PARIDE The ParIDE (parallel port IDE) subsystem is enabled. PARISC The PA-RISC architecture is enabled. PCI PCI bus support is enabled. PCIE PCI Express support is enabled. PCMCIA The PCMCIA subsystem is enabled. PNP Plug &amp; Play support is enabled. PPC PowerPC architecture is enabled. PPT Parallel port support is enabled. PS2 Appropriate PS/2 support is enabled. RAM RAM disk support is enabled. RDT Intel Resource Director Technology. S390 S390 architecture is enabled. SCSI Appropriate SCSI support is enabled. A lot of drivers have their options described inside the Documentation/scsi/ sub-directory. SECURITY Different security models are enabled. SELINUX SELinux support is enabled. APPARMOR AppArmor support is enabled. SERIAL Serial support is enabled. SH SuperH architecture is enabled. SMP The kernel is an SMP kernel. SPARC Sparc architecture is enabled. SWSUSP Software suspend (hibernation) is enabled. SUSPEND System suspend states are enabled. TPM TPM drivers are enabled. TS Appropriate touchscreen support is enabled. UMS USB Mass Storage support is enabled. USB USB support is enabled. USBHID USB Human Interface Device support is enabled. V4L Video For Linux support is enabled. VMMIO Driver for memory mapped virtio devices is enabled. VGA The VGA console has been enabled. VT Virtual terminal support is enabled. WDT Watchdog support is enabled. XT IBM PC/XT MFM hard disk support is enabled. X86-32 X86-32, aka i386 architecture is enabled. X86-64 X86-64 architecture is enabled. More X86-64 boot options can be found in Documentation/x86/x86_64/boot-options.txt . X86 Either 32-bit or 64-bit x86 (same as X86-32+X86-64) X86_UV SGI UV support is enabled. XEN Xen support is enabled In addition, the following text indicates that the option: BUGS= Relates to possible processor bugs on the said processor. KNL Is a kernel start-up parameter. BOOT Is a boot loader parameter. Parameters denoted with BOOT are actually interpreted by the bootloader, and have no meaning to the kernel directly.Do not modify the syntax of boot loader parameters without extremeneed or coordination with &lt;Documentation/x86/boot.txt&gt;. There are also arch-specific kernel-parameters not documented here.See for example &lt;Documentation/x86/x86_64/boot-options.txt&gt;. Note that ALL kernel parameters listed below are CASE SENSITIVE, and thata trailing = on the name of any parameter states that that parameter willbe entered as an environment variable, whereas its absence indicates thatit will appear as a kernel argument readable via /proc/cmdline by programsrunning once the system is up. The number of kernel parameters is not limited, but the length of thecomplete command line (parameters including spaces etc.) is limited toa fixed number of characters. This limit depends on the architectureand is between 256 and 4096 characters. It is defined in the file./include/asm/setup.h as COMMAND_LINE_SIZE. Finally, the [KMG] suffix is commonly described after a number of kernelparameter values. These ‘K’, ‘M’, and ‘G’ letters represent the binarymultipliers ‘Kilo’, ‘Mega’, and ‘Giga’, equalling 2^10, 2^20, and 2^30bytes respectively. Such letter suffixes can also be entirely omitted. acpi= [HW,ACPI,X86] Advanced Configuration and Power Interface Format: &#123; force | off | strict | noirq | rsdt &#125; force -- enable ACPI if default was off off -- disable ACPI if default was on noirq -- do not use ACPI for IRQ routing strict -- Be less tolerant of platforms that are not strictly ACPI specification compliant. rsdt -- prefer RSDT over (default) XSDT copy_dsdt -- copy DSDT to memory See also Documentation/power/runtime_pm.txt, pci=noacpi acpi_rsdp= [ACPI,EFI,KEXEC] Pass the RSDP address to the kernel, mostly used on machines running EFI runtime service to boot the second kernel for kdump. acpi_apic_instance= [ACPI, IOAPIC] Format: &lt;int&gt; 2: use 2nd APIC table, if available 1,0: use 1st APIC table default: 0 acpi_backlight= [HW,ACPI] acpi_backlight=vendor acpi_backlight=video If set to vendor, prefer vendor specific driver (e.g. thinkpad_acpi, sony_acpi, etc.) instead of the ACPI video.ko driver. acpi.debug_layer= [HW,ACPI,ACPI_DEBUG] acpi.debug_level= [HW,ACPI,ACPI_DEBUG] Format: &lt;int&gt; CONFIG_ACPI_DEBUG must be enabled to produce any ACPI debug output. Bits in debug_layer correspond to a _COMPONENT in an ACPI source file, e.g., #define _COMPONENT ACPI_PCI_COMPONENT Bits in debug_level correspond to a level in ACPI_DEBUG_PRINT statements, e.g., ACPI_DEBUG_PRINT((ACPI_DB_INFO, ... The debug_level mask defaults to &quot;info&quot;. See Documentation/acpi/debug.txt for more information about debug layers and levels. Enable processor driver info messages: acpi.debug_layer=0x20000000 Enable PCI/PCI interrupt routing info messages: acpi.debug_layer=0x400000 Enable AML &quot;Debug&quot; output, i.e., stores to the Debug object while interpreting AML: acpi.debug_layer=0xffffffff acpi.debug_level=0x2 Enable all messages related to ACPI hardware: acpi.debug_layer=0x2 acpi.debug_level=0xffffffff Some values produce so much output that the system is unusable. The &quot;log_buf_len&quot; parameter may be useful if you need to capture more output. acpi_force_table_verification [HW,ACPI] Enable table checksum verification during early stage. By default, this is disabled due to x86 early mapping size limitation. acpi_irq_balance [HW,ACPI] ACPI will balance active IRQs default in APIC mode acpi_irq_nobalance [HW,ACPI] ACPI will not move active IRQs (default) default in PIC mode acpi_irq_isa= [HW,ACPI] If irq_balance, mark listed IRQs used by ISA Format: &lt;irq&gt;,&lt;irq&gt;... acpi_irq_pci= [HW,ACPI] If irq_balance, clear listed IRQs for use by PCI Format: &lt;irq&gt;,&lt;irq&gt;... acpi_no_static_ssdt [HW,ACPI] Disable installation of static SSDTs at early boot time By default, SSDTs contained in the RSDT/XSDT will be installed automatically and they will appear under /sys/firmware/acpi/tables. This option turns off this feature. Note that specifying this option does not affect dynamic table installation which will install SSDT tables to /sys/firmware/acpi/tables/dynamic. acpi_os_name= [HW,ACPI] Tell ACPI BIOS the name of the OS Format: To spoof as Windows 98: =&quot;Microsoft Windows&quot; acpi_osi= [HW,ACPI] Modify list of supported OS interface strings acpi_osi=&quot;string1&quot; # add string1 -- only one string acpi_osi=&quot;!string2&quot; # remove built-in string2 acpi_osi= # disable all strings acpi_pm_good [X86] Override the pmtimer bug detection: force the kernel to assume that this machine&#39;s pmtimer latches its value and always returns good values. acpi_sci= [HW,ACPI] ACPI System Control Interrupt trigger mode Format: &#123; level | edge | high | low &#125; acpi_serialize [HW,ACPI] force serialization of AML methods acpi_skip_timer_override [HW,ACPI] Recognize and ignore IRQ0/pin2 Interrupt Override. For broken nForce2 BIOS resulting in XT-PIC timer. acpi_sleep= [HW,ACPI] Sleep options Format: &#123; s3_bios, s3_mode, s3_beep, s4_nohwsig, old_ordering, nonvs, sci_force_enable &#125; See Documentation/power/video.txt for information on s3_bios and s3_mode. s3_beep is for debugging; it makes the PC&#39;s speaker beep as soon as the kernel&#39;s real-mode entry point is called. s4_nohwsig prevents ACPI hardware signature from being used during resume from hibernation. old_ordering causes the ACPI 1.0 ordering of the _PTS control method, with respect to putting devices into low power states, to be enforced (the ACPI 2.0 ordering of _PTS is used by default). nonvs prevents the kernel from saving/restoring the ACPI NVS memory during suspend/hibernation and resume. sci_force_enable causes the kernel to set SCI_EN directly on resume from S1/S3 (which is against the ACPI spec, but some broken systems don&#39;t work without it). acpi_use_timer_override [HW,ACPI] Use timer override. For some broken Nvidia NF5 boards that require a timer override, but don&#39;t have HPET acpi_enforce_resources= [ACPI] &#123; strict | lax | no &#125; Check for resource conflicts between native drivers and ACPI OperationRegions (SystemIO and SystemMemory only). IO ports and memory declared in ACPI might be used by the ACPI subsystem in arbitrary AML code and can interfere with legacy drivers. strict (default): access to resources claimed by ACPI is denied; legacy drivers trying to access reserved resources will fail to bind to device using them. lax: access to resources claimed by ACPI is allowed; legacy drivers trying to access reserved resources will bind successfully but a warning message is logged. no: ACPI OperationRegions are not marked as reserved, no further checks are performed. acpi_no_memhotplug [ACPI] Disable memory hotplug. Useful for kdump kernels. acpi_mask_gpe= [HW,ACPI] Due to the existence of _Lxx/_Exx, some GPEs triggered by unsupported hardware/firmware features can result in GPE floodings that cannot be automatically disabled by the GPE dispatcher. This facility can be used to prevent such uncontrolled GPE floodings. Format: &lt;int&gt; Support masking of GPEs numbered from 0x00 to 0x7f. add_efi_memmap [EFI; X86] Include EFI memory map in kernel&#39;s map of available physical RAM. agp= [AGP] &#123; off | try_unsupported &#125; off: disable AGP support try_unsupported: try to drive unsupported chipsets (may crash computer or cause data corruption) ALSA [HW,ALSA] See Documentation/sound/alsa/alsa-parameters.txt alignment= [KNL,ARM] Allow the default userspace alignment fault handler behaviour to be specified. Bit 0 enables warnings, bit 1 enables fixups, and bit 2 sends a segfault. align_va_addr= [X86-64] Align virtual addresses by clearing slice [14:12] when allocating a VMA at process creation time. This option gives you up to 3% performance improvement on AMD F15h machines (where it is enabled by default) for a CPU-intensive style benchmark, and it can vary highly in a microbenchmark depending on workload and compiler. 32: only for 32-bit processes 64: only for 64-bit processes on: enable for both 32- and 64-bit processes off: disable for both 32- and 64-bit processes alloc_snapshot [FTRACE] Allocate the ftrace snapshot buffer on boot up when the main buffer is allocated. This is handy if debugging and you need to use tracing_snapshot() on boot up, and do not want to use tracing_snapshot_alloc() as it needs to be done where GFP_KERNEL allocations are allowed. amd_iommu= [HW,X86-64] Pass parameters to the AMD IOMMU driver in the system. Possible values are: fullflush - enable flushing of IO/TLB entries when they are unmapped. Otherwise they are flushed before they will be reused, which is a lot of faster off - do not initialize any AMD IOMMU found in the system force_isolation - Force device isolation for all devices. The IOMMU driver is not allowed anymore to lift isolation requirements as needed. This option does not override iommu=pt amd_iommu_dump= [HW,X86-64] Enable AMD IOMMU driver option to dump the ACPI table for AMD IOMMU. With this option enabled, AMD IOMMU driver will print ACPI tables for AMD IOMMU during IOMMU initialization. amd_iommu_intr= [HW,X86-64] Specifies one of the following AMD IOMMU interrupt remapping modes: legacy - Use legacy interrupt remapping mode. vapic - Use virtual APIC mode, which allows IOMMU to inject interrupts directly into guest. This mode requires kvm-amd.avic=1. (Default when IOMMU HW support is present.) amijoy.map= [HW,JOY] Amiga joystick support Map of devices attached to JOY0DAT and JOY1DAT Format: &lt;a&gt;,&lt;b&gt; See also Documentation/input/joystick.txt analog.map= [HW,JOY] Analog joystick and gamepad support Specifies type or capabilities of an analog joystick connected to one of 16 gameports Format: &lt;type1&gt;,&lt;type2&gt;,..&lt;type16&gt; apc= [HW,SPARC] Power management functions (SPARCstation-4/5 + deriv.) Format: noidle Disable APC CPU standby support. SPARCstation-Fox does not play well with APC CPU idle - disable it if you have APC and your system crashes randomly. apic= [APIC,X86-32] Advanced Programmable Interrupt Controller Change the output verbosity whilst booting Format: &#123; quiet (default) | verbose | debug &#125; Change the amount of debugging information output when initialising the APIC and IO-APIC components. apic_extnmi= [APIC,X86] External NMI delivery setting Format: &#123; bsp (default) | all | none &#125; bsp: External NMI is delivered only to CPU 0 all: External NMIs are broadcast to all CPUs as a backup of CPU 0 none: External NMI is masked for all CPUs. This is useful so that a dump capture kernel won&#39;t be shot down by NMI autoconf= [IPV6] See Documentation/networking/ipv6.txt. show_lapic= [APIC,X86] Advanced Programmable Interrupt Controller Limit apic dumping. The parameter defines the maximal number of local apics being dumped. Also it is possible to set it to &quot;all&quot; by meaning -- no limit here. Format: &#123; 1 (default) | 2 | ... | all &#125;. The parameter valid if only apic=debug or apic=verbose is specified. Example: apic=debug show_lapic=all apm= [APM] Advanced Power Management See header of arch/x86/kernel/apm_32.c. arcrimi= [HW,NET] ARCnet - &quot;RIM I&quot; (entirely mem-mapped) cards Format: &lt;io&gt;,&lt;irq&gt;,&lt;nodeID&gt; ataflop= [HW,M68k] atarimouse= [HW,MOUSE] Atari Mouse atkbd.extra= [HW] Enable extra LEDs and keys on IBM RapidAccess, EzKey and similar keyboards atkbd.reset= [HW] Reset keyboard during initialization atkbd.set= [HW] Select keyboard code set Format: &lt;int&gt; (2 = AT (default), 3 = PS/2) atkbd.scroll= [HW] Enable scroll wheel on MS Office and similar keyboards atkbd.softraw= [HW] Choose between synthetic and real raw mode Format: &lt;bool&gt; (0 = real, 1 = synthetic (default)) atkbd.softrepeat= [HW] Use software keyboard repeat audit= [KNL] Enable the audit sub-system Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; (0 = disabled, 1 = enabled) Default: unset audit_backlog_limit= [KNL] Set the audit queue size limit. Format: &lt;int&gt; (must be &gt;=0) Default: 64 bau= [X86_UV] Enable the BAU on SGI UV. The default behavior is to disable the BAU (i.e. bau=0). Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 - Disable the BAU. 1 - Enable the BAU. unset - Disable the BAU. baycom_epp= [HW,AX25] Format: &lt;io&gt;,&lt;mode&gt; baycom_par= [HW,AX25] BayCom Parallel Port AX.25 Modem Format: &lt;io&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_par.c. baycom_ser_fdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Full Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt;[,&lt;baud&gt;] See header of drivers/net/hamradio/baycom_ser_fdx.c. baycom_ser_hdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Half Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_ser_hdx.c. boot_delay= Milliseconds to delay each printk during boot. Values larger than 10 seconds (10000) are changed to no delay (0). Format: integer bootmem_debug [KNL] Enable bootmem allocator debug messages. bert_disable [ACPI] Disable BERT OS support on buggy BIOSes. bert_enable [ACPI] RHEL7 only: enable BERT OS support (disabled by default). bttv.card= [HW,V4L] bttv (bt848 + bt878 based grabber cards) bttv.radio= Most important insmod options are available as kernel args too. bttv.pll= See Documentation/video4linux/bttv/Insmod-options bttv.tuner= bulk_remove=off [PPC] This parameter disables the use of the pSeries firmware feature for flushing multiple hpte entries at a time. c101= [NET] Moxa C101 synchronous serial card cachesize= [BUGS=X86-32] Override level 2 CPU cache size detection. Sometimes CPU hardware bugs make them report the cache size incorrectly. The kernel will attempt work arounds to fix known problems, but for some CPUs it is not possible to determine what the correct size should be. This option provides an override for these situations. ca_keys= [KEYS] This parameter identifies a specific key(s) on the system trusted keyring to be used for certificate trust validation. format: &#123; id:&lt;keyid&gt; | builtin &#125; ccw_timeout_log [S390] See Documentation/s390/CommonIO for details. cgroup_disable= [KNL] Disable a particular controller Format: &#123;name of the controller(s) to disable&#125; &#123;Currently supported controllers - &quot;memory&quot;&#125; cgroup.memory= [KNL] Pass options to the cgroup memory controller. Format: &lt;string&gt; nokmem -- Disable kernel memory accounting. checkreqprot [SELINUX] Set initial checkreqprot flag value. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- check protection applied by kernel (includes any implied execute protection). 1 -- check protection requested by application. Default value is set via a kernel config option. Value can be changed at runtime via /selinux/checkreqprot. cio_ignore= [S390] See Documentation/s390/CommonIO for details. clk_ignore_unused [CLK] Keep all clocks already enabled by bootloader on, even if no driver has claimed them. This is useful for debug and development, but should not be needed on a platform with proper driver support. For more information, see Documentation/clk.txt. clock= [BUGS=X86-32, HW] gettimeofday clocksource override. [Deprecated] Forces specified clocksource (if available) to be used when calculating gettimeofday(). If specified clocksource is not available, it defaults to PIT. Format: &#123; pit | tsc | cyclone | pmtmr &#125; clocksource= Override the default clocksource Format: &lt;string&gt; Override the default clocksource and use the clocksource with the name specified. Some clocksource names to choose from, depending on the platform: [all] jiffies (this is the base, fallback clocksource) [ACPI] acpi_pm [ARM] imx_timer1,OSTS,netx_timer,mpu_timer2, pxa_timer,timer3,32k_counter,timer0_1 [AVR32] avr32 [X86-32] pit,hpet,tsc; scx200_hrt on Geode; cyclone on IBM x440 [MIPS] MIPS [PARISC] cr16 [S390] tod [SH] SuperH [SPARC64] tick [X86-64] hpet,tsc clearcpuid=BITNUM [X86] Disable CPUID feature X for the kernel. See arch/x86/include/asm/cpufeatures.h for the valid bit numbers. Note the Linux specific bits are not necessarily stable over kernel options, but the vendor specific ones should be. Also note that user programs calling CPUID directly or using the feature without checking anything will still see it. This just prevents it from being used by the kernel or shown in /proc/cpuinfo. Also note the kernel might malfunction if you disable some critical bits. cma=nn[MG] [ARM,KNL] Sets the size of kernel global memory area for contiguous memory allocations. For more information, see include/linux/dma-contiguous.h cmo_free_hint= [PPC] Format: &#123; yes | no &#125; Specify whether pages are marked as being inactive when they are freed. This is used in CMO environments to determine OS memory pressure for page stealing by a hypervisor. Default: yes coherent_pool=nn[KMG] [ARM,KNL] Sets the size of memory pool for coherent, atomic dma allocations, by default set to 256K. code_bytes [X86] How many bytes of object code to print in an oops report. Range: 0 - 8192 Default: 64 com20020= [HW,NET] ARCnet - COM20020 chipset Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;nodeID&gt;[,&lt;backplane&gt;[,&lt;ckp&gt;[,&lt;timeout&gt;]]]]] com90io= [HW,NET] ARCnet - COM90xx chipset (IO-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;] com90xx= [HW,NET] ARCnet - COM90xx chipset (memory-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;memstart&gt;]] condev= [HW,S390] console device conmode= console= [KNL] Output console device and options. tty&lt;n&gt; Use the virtual console device &lt;n&gt;. ttyS&lt;n&gt;[,options] ttyUSB0[,options] Use the specified serial port. The options are of the form &quot;bbbbpnf&quot;, where &quot;bbbb&quot; is the baud rate, &quot;p&quot; is parity (&quot;n&quot;, &quot;o&quot;, or &quot;e&quot;), &quot;n&quot; is number of bits, and &quot;f&quot; is flow control (&quot;r&quot; for RTS or omit it). Default is &quot;9600n8&quot;. See Documentation/serial-console.txt for more information. See Documentation/networking/netconsole.txt for an alternative. uart[8250],io,&lt;addr&gt;[,options] uart[8250],mmio,&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address, switching to the matching ttyS device later. The options are the same as for ttyS, above. hvc&lt;n&gt; Use the hypervisor console device &lt;n&gt;. This is for both Xen and PowerPC hypervisors. If the device connected to the port is not a TTY but a braille device, prepend &quot;brl,&quot; before the device type, for instance console=brl,ttyS0 For now, only VisioBraille is supported. consoleblank= [KNL] The console blank (screen saver) timeout in seconds. Defaults to 10*60 = 10mins. A value of 0 disables the blank timer. coredump_filter= [KNL] Change the default value for /proc/&lt;pid&gt;/coredump_filter. See also Documentation/filesystems/proc.txt. cpuidle.off=1 [CPU_IDLE] disable the cpuidle sub-system cpu_init_udelay=N [X86] Delay for N microsec between assert and de-assert of APIC INIT to start processors. This delay occurs on every CPU online, such as boot, and resume from suspend. Default: 10000 cpcihp_generic= [HW,PCI] Generic port I/O CompactPCI driver Format: &lt;first_slot&gt;,&lt;last_slot&gt;,&lt;port&gt;,&lt;enum_bit&gt;[,&lt;debug&gt;] crashkernel=size[KMG][@offset[KMG]] [KNL] Using kexec, Linux can switch to a &#39;crash kernel&#39; upon panic. This parameter reserves the physical memory region [offset, offset + size] for that kernel image. If &#39;@offset&#39; is omitted, then a suitable offset is selected automatically. Check Documentation/kdump/kdump.txt for further details. crashkernel=range1:size1[,range2:size2,...][@offset] [KNL] Same as above, but depends on the memory in the running system. The syntax of range is start-[end] where start and end are both a memory unit (amount[KMG]). See also Documentation/kdump/kdump.txt for an example. crashkernel=size[KMG],high [KNL, x86_64] range could be above 4G. Allow kernel to allocate physical memory region from top, so could be above 4G if system have more than 4G ram installed. Otherwise memory region will be allocated below 4G, if available. It will be ignored if crashkernel=X is specified. crashkernel=size[KMG],low [KNL, x86_64] range under 4G. When crashkernel=X,high is passed, kernel could allocate physical memory region above 4G, that cause second kernel crash on system that require some amount of low memory, e.g. swiotlb requires at least 64M+32K low memory. Kernel would try to allocate 72M below 4G automatically. This one let user to specify own low range under 4G for second kernel instead. 0: to disable low allocation. It will be ignored when crashkernel=X,high is not used or memory reserved is below 4G. cs89x0_dma= [HW,NET] Format: &lt;dma&gt; cs89x0_media= [HW,NET] Format: &#123; rj45 | aui | bnc &#125; dasd= [HW,NET] See header of drivers/s390/block/dasd_devmap.c. db9.dev[2|3]= [HW,JOY] Multisystem joystick support via parallel port (one device per port) Format: &lt;port#&gt;,&lt;type&gt; See also Documentation/input/joystick-parport.txt ddebug_query= [KNL,DYNAMIC_DEBUG] Enable debug messages at early boot time. See Documentation/dynamic-debug-howto.txt for details. Deprecated, see dyndbg. debug [KNL] Enable kernel debugging (events log level). debug_locks_verbose= [KNL] verbose self-tests Format=&lt;0|1&gt; Print debugging info while doing the locking API self-tests. We default to 0 (no extra messages), setting it to 1 will print _a lot_ more information - normally only useful to kernel developers. debug_objects [KNL] Enable object debugging no_debug_objects [KNL] Disable object debugging debug_guardpage_minorder= [KNL] When CONFIG_DEBUG_PAGEALLOC is set, this parameter allows control of the order of pages that will be intentionally kept free (and hence protected) by the buddy allocator. Bigger value increase the probability of catching random memory corruption, but reduce the amount of memory for normal system use. The maximum possible value is MAX_ORDER/2. Setting this parameter to 1 or 2 should be enough to identify most random memory corruption problems caused by bugs in kernel or driver code when a CPU writes to (or reads from) a random memory location. Note that there exists a class of memory corruptions problems caused by buggy H/W or F/W or by drivers badly programing DMA (basically when memory is written at bus level and the CPU MMU is bypassed) which are not detectable by CONFIG_DEBUG_PAGEALLOC, hence this option will not help tracking down these problems. debug_pagealloc= [KNL] When CONFIG_DEBUG_PAGEALLOC is set, this parameter enables the feature at boot time. In default, it is disabled. We can avoid allocating huge chunk of memory for debug pagealloc if we don&#39;t enable it at boot time and the system will work mostly same with the kernel built without CONFIG_DEBUG_PAGEALLOC. on: enable the feature debugpat [X86] Enable PAT debugging decnet.addr= [HW,NET] Format: &lt;area&gt;[,&lt;node&gt;] See also Documentation/networking/decnet.txt. default_hugepagesz= [same as hugepagesz=] The size of the default HugeTLB page size. This is the size represented by the legacy /proc/ hugepages APIs, used for SHM, and default size when mounting hugetlbfs filesystems. Defaults to the default architecture&#39;s huge page size if not specified. dhash_entries= [KNL] Set number of hash buckets for dentry cache. digi= [HW,SERIAL] IO parameters + enable/disable command. digiepca= [HW,SERIAL] See drivers/char/README.epca and Documentation/serial/digiepca.txt. disable= [IPV6] See Documentation/networking/ipv6.txt. hardened_usercopy= [KNL] Under CONFIG_HARDENED_USERCOPY, whether hardening is enabled for this boot. Hardened usercopy checking is used to protect the kernel from reading or writing beyond known memory allocation boundaries as a proactive defense against bounds-checking flaws in the kernel&#39;s copy_to_user()/copy_from_user() interface. on Perform hardened usercopy checks (default). off Disable hardened usercopy checks. disable_cpu_apicid= [X86,APIC,SMP] Format: &lt;int&gt; The number of initial APIC ID for the corresponding CPU to be disabled at boot, mostly used for the kdump 2nd kernel to disable BSP to wake up multiple CPUs without causing system reset or hang due to sending INIT from AP to BSP. disable_ddw [PPC/PSERIES] Disable Dynamic DMA Window support. Use this if to workaround buggy firmware. disable_ipv6= [IPV6] See Documentation/networking/ipv6.txt. disable_mtrr_cleanup [X86] The kernel tries to adjust MTRR layout from continuous to discrete, to make X server driver able to add WB entry later. This parameter disables that. disable_mtrr_trim [X86, Intel and AMD only] By default the kernel will trim any uncacheable memory out of your available memory pool based on MTRR settings. This parameter disables that behavior, possibly causing your machine to run very slowly. disable_timer_pin_1 [X86] Disable PIN 1 of APIC timer Can be useful to work around chipset bugs. dis_ucode_ldr [X86] Disable the microcode loader. dma_debug=off If the kernel is compiled with DMA_API_DEBUG support, this option disables the debugging code at boot. dma_debug_entries=&lt;number&gt; This option allows to tune the number of preallocated entries for DMA-API debugging code. One entry is required per DMA-API allocation. Use this if the DMA-API debugging code disables itself because the architectural default is too low. dma_debug_driver=&lt;driver_name&gt; With this option the DMA-API debugging driver filter feature can be enabled at boot time. Just pass the driver to filter for as the parameter. The filter can be disabled or changed to another driver later using sysfs. drm_kms_helper.edid_firmware=[&lt;connector&gt;:]&lt;file&gt; Broken monitors, graphic adapters and KVMs may send no or incorrect EDID data sets. This parameter allows to specify an EDID data set in the /lib/firmware directory that is used instead. Generic built-in EDID data sets are used, if one of edid/1024x768.bin, edid/1280x1024.bin, edid/1680x1050.bin, or edid/1920x1080.bin is given and no file with the same name exists. Details and instructions how to build your own EDID data are available in Documentation/EDID/HOWTO.txt. An EDID data set will only be used for a particular connector, if its name and a colon are prepended to the EDID name. dscc4.setup= [NET] dyndbg[=&quot;val&quot;] [KNL,DYNAMIC_DEBUG] module.dyndbg[=&quot;val&quot;] Enable debug messages at boot time. See Documentation/dynamic-debug-howto.txt for details. earlycon= [KNL] Output early console device and options. uart[8250],io,&lt;addr&gt;[,options] uart[8250],mmio,&lt;addr&gt;[,options] uart[8250],mmio32,&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address. MMIO inter-register address stride is either 8-bit (mmio) or 32-bit (mmio32). The options are the same as for ttyS, above. earlyprintk= [X86,SH,BLACKFIN,ARM] earlyprintk=vga earlyprintk=efi earlyprintk=xen earlyprintk=serial[,ttySn[,baudrate]] earlyprintk=serial[,0x...[,baudrate]] earlyprintk=ttySn[,baudrate] earlyprintk=dbgp[debugController#] earlyprintk is useful when the kernel crashes before the normal console is initialized. It is not enabled by default because it has some cosmetic problems. Append &quot;,keep&quot; to not disable it when the real console takes over. Only one of vga, efi, serial, or usb debug port can be used at a time. Currently only ttyS0 and ttyS1 may be specified by name. Other I/O ports may be explicitly specified on some architectures (x86 and arm at least) by replacing ttySn with an I/O port address, like this: earlyprintk=serial,0x1008,115200 You can find the port for a given device in /proc/tty/driver/serial: 2: uart:ST16650V2 port:00001008 irq:18 ... Interaction with the standard serial driver is not very good. The VGA and EFI output is eventually overwritten by the real console. The xen output can only be used by Xen PV guests. edac_report= [HW,EDAC] Control how to report EDAC event Format: &#123;&quot;on&quot; | &quot;off&quot; | &quot;force&quot;&#125; on: enable EDAC to report H/W event. May be overridden by other higher priority error reporting module. off: disable H/W event reporting through EDAC. force: enforce the use of EDAC to report H/W event. default: on. ekgdboc= [X86,KGDB] Allow early kernel console debugging ekgdboc=kbd This is designed to be used in conjunction with the boot argument: earlyprintk=vga edd= [EDD] Format: &#123;&quot;off&quot; | &quot;on&quot; | &quot;skip[mbr]&quot;&#125; efi= [EFI] Format: &#123; &quot;old_map&quot; &#125; old_map [X86-64]: switch to the old ioremap-based EFI runtime services mapping. 32-bit still uses this one by default. efi_no_storage_paranoia [EFI; X86] Using this parameter you can use more than 50% of your efi variable storage. Use this parameter only if you are really sure that your UEFI does sane gc and fulfills the spec otherwise your board may brick. eisa_irq_edge= [PARISC,HW] See header of drivers/parisc/eisa.c. elanfreq= [X86-32] See comment before function elanfreq_setup() in arch/x86/kernel/cpu/cpufreq/elanfreq.c. elevator= [IOSCHED] Format: &#123;&quot;cfq&quot; | &quot;deadline&quot; | &quot;noop&quot;&#125; See Documentation/block/cfq-iosched.txt and Documentation/block/deadline-iosched.txt for details. elfcorehdr=[size[KMG]@]offset[KMG] [IA64,PPC,SH,X86,S390] Specifies physical address of start of kernel core image elf header and optionally the size. Generally kexec loader will pass this option to capture kernel. See Documentation/kdump/kdump.txt for details. enable_mtrr_cleanup [X86] The kernel tries to adjust MTRR layout from continuous to discrete, to make X server driver able to add WB entry later. This parameter enables that. enable_timer_pin_1 [X86] Enable PIN 1 of APIC timer Can be useful to work around chipset bugs (in particular on some ATI chipsets). The kernel tries to set a reasonable default. enforcing [SELINUX] Set initial enforcing status. Format: &#123;&quot;0&quot; | &quot;1&quot;&#125; See security/selinux/Kconfig help text. 0 -- permissive (log only, no denials). 1 -- enforcing (deny and log). Default value is 0. Value can be changed at runtime via /selinux/enforce. erst_disable [ACPI] Disable Error Record Serialization Table (ERST) support. ether= [HW,NET] Ethernet cards parameters This option is obsoleted by the &quot;netdev=&quot; option, which has equivalent usage. See its documentation for details. evm= [EVM] Format: &#123; &quot;fix&quot; &#125; Permit &#39;security.evm&#39; to be updated regardless of current integrity status. failslab= fail_page_alloc= fail_make_request=[KNL] General fault injection mechanism. Format: &lt;interval&gt;,&lt;probability&gt;,&lt;space&gt;,&lt;times&gt; See also Documentation/fault-injection/. floppy= [HW] See Documentation/blockdev/floppy.txt. force_pal_cache_flush [IA-64] Avoid check_sal_cache_flush which may hang on buggy SAL_CACHE_FLUSH implementations. Using this parameter will force ia64_sal_cache_flush to call ia64_pal_cache_flush instead of SAL_CACHE_FLUSH. ftrace=[tracer] [FTRACE] will set and start the specified tracer as early as possible in order to facilitate early boot debugging. ftrace_dump_on_oops[=orig_cpu] [FTRACE] will dump the trace buffers on oops. If no parameter is passed, ftrace will dump buffers of all CPUs, but if you pass orig_cpu, it will dump only the buffer of the CPU that triggered the oops. ftrace_filter=[function-list] [FTRACE] Limit the functions traced by the function tracer at boot up. function-list is a comma separated list of functions. This list can be changed at run time by the set_ftrace_filter file in the debugfs tracing directory. ftrace_notrace=[function-list] [FTRACE] Do not trace the functions specified in function-list. This list can be changed at run time by the set_ftrace_notrace file in the debugfs tracing directory. ftrace_graph_filter=[function-list] [FTRACE] Limit the top level callers functions traced by the function graph tracer at boot up. function-list is a comma separated list of functions that can be changed at run time by the set_graph_function file in the debugfs tracing directory. ftrace_graph_max_depth=&lt;uint&gt; [FTRACE] Used with the function graph tracer. This is the max depth it will trace into a function. This value can be changed at run time by the max_graph_depth file in the tracefs tracing directory. default: 0 (no limit) gamecon.map[2|3]= [HW,JOY] Multisystem joystick and NES/SNES/PSX pad support via parallel port (up to 5 devices per port) Format: &lt;port#&gt;,&lt;pad1&gt;,&lt;pad2&gt;,&lt;pad3&gt;,&lt;pad4&gt;,&lt;pad5&gt; See also Documentation/input/joystick-parport.txt gamma= [HW,DRM] gart_fix_e820= [X86_64] disable the fix e820 for K8 GART Format: off | on default: on gcov_persist= [GCOV] When non-zero (default), profiling data for kernel modules is saved and remains accessible via debugfs, even when the module is unloaded/reloaded. When zero, profiling data is discarded and associated debugfs files are removed at module unload time. gpt [EFI] Forces disk with valid GPT signature but invalid Protective MBR to be treated as GPT. grcan.enable0= [HW] Configuration of physical interface 0. Determines the &quot;Enable 0&quot; bit of the configuration register. Format: 0 | 1 Default: 0 grcan.enable1= [HW] Configuration of physical interface 1. Determines the &quot;Enable 0&quot; bit of the configuration register. Format: 0 | 1 Default: 0 grcan.select= [HW] Select which physical interface to use. Format: 0 | 1 Default: 0 grcan.txsize= [HW] Sets the size of the tx buffer. Format: &lt;unsigned int&gt; such that (txsize &amp; ~0x1fffc0) == 0. Default: 1024 grcan.rxsize= [HW] Sets the size of the rx buffer. Format: &lt;unsigned int&gt; such that (rxsize &amp; ~0x1fffc0) == 0. Default: 1024 hardlockup_all_cpu_backtrace= [KNL] Should the hard-lockup detector generate backtraces on all cpus. Format: &lt;integer&gt; hashdist= [KNL,NUMA] Large hashes allocated during boot are distributed across NUMA nodes. Defaults on for 64-bit NUMA, off otherwise. Format: 0 | 1 (for off | on) hcl= [IA-64] SGI&#39;s Hardware Graph compatibility layer hd= [EIDE] (E)IDE hard drive subsystem geometry Format: &lt;cyl&gt;,&lt;head&gt;,&lt;sect&gt; hest_disable [ACPI] Disable Hardware Error Source Table (HEST) support; corresponding firmware-first mode error processing logic will be disabled. highmem=nn[KMG] [KNL,BOOT] forces the highmem zone to have an exact size of &lt;nn&gt;. This works even on boxes that have no highmem otherwise. This also works to reduce highmem size on bigger boxes. highres= [KNL] Enable/disable high resolution timer mode. Valid parameters: &quot;on&quot;, &quot;off&quot; Default: &quot;on&quot; hisax= [HW,ISDN] See Documentation/isdn/README.HiSax. hlt [BUGS=ARM,SH] hpet= [X86-32,HPET] option to control HPET usage Format: &#123; enable (default) | disable | force | verbose &#125; disable: disable HPET and use PIT instead force: allow force enabled of undocumented chips (ICH4, VIA, nVidia) verbose: show contents of HPET registers during setup hpet_mmap= [X86, HPET_MMAP] option to expose HPET MMAP to userspace. By default this is disabled. Values are 0(disabled) or 1(enabled). hugepages= [HW,X86-32,IA-64] HugeTLB pages to allocate at boot. hugepagesz= [HW,IA-64,PPC,X86-64] The size of the HugeTLB pages. On x86-64 and powerpc, this option can be specified multiple times interleaved with hugepages= to reserve huge pages of different sizes. Valid pages sizes on x86-64 are 2M (when the CPU supports &quot;pse&quot;) and 1G (when the CPU supports the &quot;pdpe1gb&quot; cpuinfo flag) Note that 1GB pages can only be allocated at boot time using hugepages= and not freed afterwards. hvc_iucv= [S390] Number of z/VM IUCV hypervisor console (HVC) terminal devices. Valid values: 0..8 hvc_iucv_allow= [S390] Comma-separated list of z/VM user IDs. If specified, z/VM IUCV HVC accepts connections from listed z/VM user IDs only. hwthread_map= [METAG] Comma-separated list of Linux cpu id to hardware thread id mappings. Format: &lt;cpu&gt;:&lt;hwthread&gt; keep_bootcon [KNL] Do not unregister boot console at start. This is only useful for debugging when something happens in the window between unregistering the boot console and initializing the real console. i2c_bus= [HW] Override the default board specific I2C bus speed or register an additional I2C bus that is not registered from board initialization code. Format: &lt;bus_id&gt;,&lt;clkrate&gt; i8042.debug [HW] Toggle i8042 debug mode i8042.direct [HW] Put keyboard port into non-translated mode i8042.dumbkbd [HW] Pretend that controller can only read data from keyboard and cannot control its state (Don&#39;t attempt to blink the leds) i8042.noaux [HW] Don&#39;t check for auxiliary (== mouse) port i8042.nokbd [HW] Don&#39;t check/create keyboard port i8042.noloop [HW] Disable the AUX Loopback command while probing for the AUX port i8042.nomux [HW] Don&#39;t check presence of an active multiplexing controller i8042.nopnp [HW] Don&#39;t use ACPIPnP / PnPBIOS to discover KBD/AUX controllers i8042.notimeout [HW] Ignore timeout condition signalled by controller i8042.reset [HW] Reset the controller during init and cleanup i8042.unlock [HW] Unlock (ignore) the keylock i810= [HW,DRM] i8k.ignore_dmi [HW] Continue probing hardware even if DMI data indicates that the driver is running on unsupported hardware. i8k.force [HW] Activate i8k driver even if SMM BIOS signature does not match list of supported models. i8k.power_status [HW] Report power status in /proc/i8k (disabled by default) i8k.restricted [HW] Allow controlling fans only if SYS_ADMIN capability is set. i915.invert_brightness= [DRM] Invert the sense of the variable that is used to set the brightness of the panel backlight. Normally a brightness value of 0 indicates backlight switched off, and the maximum of the brightness value sets the backlight to maximum brightness. If this parameter is set to 0 (default) and the machine requires it, or this parameter is set to 1, a brightness value of 0 sets the backlight to maximum brightness, and the maximum of the brightness value switches the backlight off. -1 -- never invert brightness 0 -- machine default 1 -- force brightness inversion icn= [HW,ISDN] Format: &lt;io&gt;[,&lt;membase&gt;[,&lt;icn_id&gt;[,&lt;icn_id2&gt;]]] ide-core.nodma= [HW] (E)IDE subsystem Format: =0.0 to prevent dma on hda, =0.1 hdb =1.0 hdc .vlb_clock .pci_clock .noflush .nohpa .noprobe .nowerr .cdrom .chs .ignore_cable are additional options See Documentation/ide/ide.txt. ide-pci-generic.all-generic-ide [HW] (E)IDE subsystem Claim all unknown PCI IDE storage controllers. idle= [X86] Format: idle=poll, idle=halt, idle=nomwait Poll forces a polling idle loop that can slightly improve the performance of waking up a idle CPU, but will use a lot of power and make the system run hot. Not recommended. idle=halt: Halt is forced to be used for CPU idle. In such case C2/C3 won&#39;t be used again. idle=nomwait: Disable mwait for CPU C-states ignore_loglevel [KNL] Ignore loglevel setting - this will print /all/ kernel messages to the console. Useful for debugging. We also add it as printk module parameter, so users could change it dynamically, usually by /sys/module/printk/parameters/ignore_loglevel. ihash_entries= [KNL] Set number of hash buckets for inode cache. shadowman [KNL] SHADOWMAN. ima_appraise= [IMA] appraise integrity measurements Format: &#123; &quot;off&quot; | &quot;enforce&quot; | &quot;fix&quot; &#125; default: &quot;enforce&quot; ima_appraise_tcb [IMA] The builtin appraise policy appraises all files owned by uid=0. ima_audit= [IMA] Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 -- integrity auditing messages. (Default) 1 -- enable informational integrity auditing messages. ima_hash= [IMA] Format: &#123; &quot;sha1&quot; | &quot;md5&quot; &#125; default: &quot;sha1&quot; ima_tcb [IMA] Load a policy which meets the needs of the Trusted Computing Base. This means IMA will measure all programs exec&#39;d, files mmap&#39;d for exec, and all files opened for read by uid=0. init= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /sbin/init as init process. initcall_debug [KNL] Trace initcalls as they are executed. Useful for working out where the kernel is dying during startup. initcall_blacklist= [KNL] Do not execute a comma-separated list of initcall functions. Useful for debugging built-in modules and initcalls. initrd= [BOOT] Specify the location of the initial ramdisk init_pkru= [x86] Specify the default memory protection keys rights register contents for all processes. 0x55555554 by default (disallow access to all but pkey 0). Can override in debugfs after boot. inport.irq= [HW] Inport (ATI XL and Microsoft) busmouse driver Format: &lt;irq&gt; int_pln_enable [x86] Enable power limit notification interrupt intel_iommu= [DMAR] Intel IOMMU driver (DMAR) option on Enable intel iommu driver. off Disable intel iommu driver. igfx_off [Default Off] By default, gfx is mapped as normal device. If a gfx device has a dedicated DMAR unit, the DMAR unit is bypassed by not enabling DMAR with this option. In this case, gfx device will use physical address for DMA. forcedac [x86_64] With this option iommu will not optimize to look for io virtual address below 32-bit forcing dual address cycle on pci bus for cards supporting greater than 32-bit addressing. The default is to look for translation below 32-bit and if not available then look in the higher range. strict [Default Off] With this option on every unmap_single operation will result in a hardware IOTLB flush operation as opposed to batching them for performance. sp_off [Default Off] By default, super page will be supported if Intel IOMMU has the capability. With this option, super page will not be supported. ecs_off [Default Off] By default, extended context tables will be supported if the hardware advertises that it has support both for the extended tables themselves, and also PASID support. With this option set, extended tables will not be used even on hardware which claims to support them. intel_idle.max_cstate= [KNL,HW,ACPI,X86] 0 disables intel_idle and fall back on acpi_idle. 1 to 6 specify maximum depth of C-state. intel_pstate= [X86] disable Do not enable intel_pstate as the default scaling driver for the supported processors passive Use intel_pstate as a scaling driver, but configure it to work with generic cpufreq governors (instead of enabling its internal governor). This mode cannot be used along with the hardware-managed P-states (HWP) feature. force Enable intel_pstate on systems that prohibit it by default in favor of acpi-cpufreq. Forcing the intel_pstate driver instead of acpi-cpufreq may disable platform features, such as thermal controls and power capping, that rely on ACPI P-States information being indicated to OSPM and therefore should be used with caution. This option does not work with processors that aren&#39;t supported by the intel_pstate driver or on platforms that use pcc-cpufreq instead of acpi-cpufreq. no_hwp Do not enable hardware P state control (HWP) if available. hwp_only Only load intel_pstate on systems which support hardware P state control (HWP) if available. support_acpi_ppc Enforce ACPI _PPC performance limits. If the Fixed ACPI Description Table, specifies preferred power management profile as &quot;Enterprise Server&quot; or &quot;Performance Server&quot;, then this feature is turned on by default. intremap= [X86-64, Intel-IOMMU] on enable Interrupt Remapping (default) off disable Interrupt Remapping nosid disable Source ID checking no_x2apic_optout BIOS x2APIC opt-out request will be ignored nopost disable Interrupt Posting iomem= Disable strict checking of access to MMIO memory strict regions from userspace. relaxed iommu= [x86] off force noforce biomerge panic nopanic merge nomerge forcesac soft pt [x86, IA-64] nobypass [PPC/POWERNV] Disable IOMMU bypass, using IOMMU for PCI devices. io7= [HW] IO7 for Marvel based alpha systems See comment before marvel_specify_io7 in arch/alpha/kernel/core_marvel.c. io_delay= [X86] I/O delay method 0x80 Standard port 0x80 based delay 0xed Alternate port 0xed based delay (needed on some systems) udelay Simple two microseconds delay none No delay ip= [IP_PNP] See Documentation/filesystems/nfs/nfsroot.txt. ip2= [HW] Set IO/IRQ pairs for up to 4 IntelliPort boards See comment before ip2_setup() in drivers/char/ip2/ip2base.c. ipcmni_extend [KNL] Extend the maximum number of unique System V IPC identifiers from 32,768 to 16,777,216. irqaffinity= [SMP] Set the default irq affinity mask Format: &lt;cpu number&gt;,...,&lt;cpu number&gt; or &lt;cpu number&gt;-&lt;cpu number&gt; or drivers (must be a positive range in ascending order) or a mixture &lt;cpu number&gt;,...,&lt;cpu number&gt;-&lt;cpu number&gt; drivers will use drivers&#39; affinity masks for default interrupt assignment instead of placing them all on CPU0. irqfixup [HW] When an interrupt is not handled search all handlers for it. Intended to get systems with badly broken firmware running. irqpoll [HW] When an interrupt is not handled search all handlers for it. Also check all handlers each timer interrupt. Intended to get systems with badly broken firmware running. isapnp= [ISAPNP] Format: &lt;RDP&gt;,&lt;reset&gt;,&lt;pci_scan&gt;,&lt;verbosity&gt; isolcpus= [KNL,SMP] Isolate CPUs from the general scheduler. Format: &lt;cpu number&gt;,...,&lt;cpu number&gt; or &lt;cpu number&gt;-&lt;cpu number&gt; (must be a positive range in ascending order) or a mixture &lt;cpu number&gt;,...,&lt;cpu number&gt;-&lt;cpu number&gt; This option can be used to specify one or more CPUs to isolate from the general SMP balancing and scheduling algorithms. You can move a process onto or off an &quot;isolated&quot; CPU via the CPU affinity syscalls or cpuset. &lt;cpu number&gt; begins at 0 and the maximum value is &quot;number of CPUs in system - 1&quot;. This option is the preferred way to isolate CPUs. The alternative -- manually setting the CPU mask of all tasks in the system -- can cause problems and suboptimal load balancer performance. iucv= [HW,NET] ivrs_ioapic [HW,X86_64] Provide an override to the IOAPIC-ID&lt;-&gt;DEVICE-ID mapping provided in the IVRS ACPI table. For example, to map IOAPIC-ID decimal 10 to PCI device 00:14.0 write the parameter as: ivrs_ioapic[10]=00:14.0 ivrs_hpet [HW,X86_64] Provide an override to the HPET-ID&lt;-&gt;DEVICE-ID mapping provided in the IVRS ACPI table. For example, to map HPET-ID decimal 0 to PCI device 00:14.0 write the parameter as: ivrs_hpet[0]=00:14.0 ivrs_acpihid [HW,X86_64] Provide an override to the ACPI-HID:UID&lt;-&gt;DEVICE-ID mapping provided in the IVRS ACPI table. For example, to map UART-HID:UID AMD0020:0 to PCI device 00:14.5 write the parameter as: ivrs_acpihid[00:14.5]=AMD0020:0 js= [HW,JOY] Analog joystick See Documentation/input/joystick.txt. nokaslr [KNL] When CONFIG_RANDOMIZE_BASE is set, this disables kernel and module base offset ASLR (Address Space Layout Randomization). keepinitrd [HW,ARM] kernelcore= [KNL,X86,IA-64,PPC] Format: nn[KMGTPE] | &quot;mirror&quot; This parameter specifies the amount of memory usable by the kernel for non-movable allocations. The requested amount is spread evenly throughout all nodes in the system. The remaining memory in each node is used for Movable pages. In the event, a node is too small to have both kernelcore and Movable pages, kernelcore pages will take priority and other nodes will have a larger number of kernelcore pages. The Movable zone is used for the allocation of pages that may be reclaimed or moved by the page migration subsystem. This means that HugeTLB pages may not be allocated from this zone. Note that allocations like PTEs-from-HighMem still use the HighMem zone if it exists, and the Normal zone if it does not. Instead of specifying the amount of memory (nn[KMGTPE]), you can specify &quot;mirror&quot; option. In case &quot;mirror&quot; option is specified, mirrored (reliable) memory is used for non-movable allocations and remaining memory is used for Movable pages. nn[KMGTPE] and &quot;mirror&quot; are exclusive, so you can NOT specify nn[KMGTPE] and &quot;mirror&quot; at the same time. kgdbdbgp= [KGDB,HW] kgdb over EHCI usb debug port. Format: &lt;Controller#&gt;[,poll interval] The controller # is the number of the ehci usb debug port as it is probed via PCI. The poll interval is optional and is the number seconds in between each poll cycle to the debug port in case you need the functionality for interrupting the kernel with gdb or control-c on the dbgp connection. When not using this parameter you use sysrq-g to break into the kernel debugger. kgdboc= [KGDB,HW] kgdb over consoles. Requires a tty driver that supports console polling, or a supported polling keyboard driver (non-usb). Serial only format: &lt;serial_device&gt;[,baud] keyboard only format: kbd keyboard and serial format: kbd,&lt;serial_device&gt;[,baud] Optional Kernel mode setting: kms, kbd format: kms,kbd kms, kbd and serial format: kms,kbd,&lt;ser_dev&gt;[,baud] kgdbwait [KGDB] Stop kernel execution and enter the kernel debugger at the earliest opportunity. kmac= [MIPS] korina ethernet MAC address. Configure the RouterBoard 532 series on-chip Ethernet adapter MAC address. kmemleak= [KNL] Boot-time kmemleak enable/disable Valid arguments: on, off Default: on kpti [X86-64] Enable kernel page table isolation. kvm.ignore_msrs=[KVM] Ignore guest accesses to unhandled MSRs. Default is 0 (don&#39;t ignore, but inject #GP) kvm.mmu_audit= [KVM] This is a R/W parameter which allows audit KVM MMU at runtime. Default is 0 (off) kvm-amd.nested= [KVM,AMD] Allow nested virtualization in KVM/SVM. Default is 1 (enabled) kvm-amd.npt= [KVM,AMD] Disable nested paging (virtualized MMU) for all guests. Default is 1 (enabled) if in 64-bit or 32-bit PAE mode. kvm-intel.ept= [KVM,Intel] Disable extended page tables (virtualized MMU) support on capable Intel chips. Default is 1 (enabled) kvm-intel.emulate_invalid_guest_state= [KVM,Intel] Enable emulation of invalid guest states Default is 0 (disabled) kvm-intel.flexpriority= [KVM,Intel] Disable FlexPriority feature (TPR shadow). Default is 1 (enabled) kvm-intel.nested= [KVM,Intel] Enable VMX nesting (nVMX). Default is 0 (disabled) kvm-intel.unrestricted_guest= [KVM,Intel] Disable unrestricted guest feature (virtualized real and unpaged mode) on capable Intel chips. Default is 1 (enabled) kvm-intel.vmentry_l1d_flush=[KVM,Intel] Mitigation for L1 Terminal Fault CVE-2018-3620. Valid arguments: never, cond, always always: L1D cache flush on every VMENTER. cond: Flush L1D on VMENTER only when the code between VMEXIT and VMENTER can leak host memory. never: Disables the mitigation Default is cond (do L1 cache flush in specific instances) kvm-intel.vpid= [KVM,Intel] Disable Virtual Processor Identification feature (tagged TLBs) on capable Intel chips. Default is 1 (enabled) l1tf= [X86] Control mitigation of the L1TF vulnerability on affected CPUs The kernel PTE inversion protection is unconditionally enabled and cannot be disabled. full Provides all available mitigations for the L1TF vulnerability. Disables SMT and enables all mitigations in the hypervisors, i.e. unconditional L1D flush. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. full,force Same as &#39;full&#39;, but disables SMT and L1D flush runtime control. Implies the &#39;nosmt=force&#39; command line option. (i.e. sysfs control of SMT is disabled.) flush Leaves SMT enabled and enables the default hypervisor mitigation, i.e. conditional L1D flush. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. flush,nosmt Disables SMT and enables the default hypervisor mitigation. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. flush,nowarn Same as &#39;flush&#39;, but hypervisors will not warn when a VM is started in a potentially insecure configuration. off Disables hypervisor mitigations and doesn&#39;t emit any warnings. Default is &#39;flush&#39;. For details see: Documentation/admin-guide/hw-vuln/l1tf.rst l2cr= [PPC] l3cr= [PPC] lapic [X86-32,APIC] Enable the local APIC even if BIOS disabled it. lapic= [x86,APIC] &quot;notscdeadline&quot; Do not use TSC deadline value for LAPIC timer one-shot implementation. Default back to the programmable timer unit in the LAPIC. lapic_timer_c2_ok [X86,APIC] trust the local apic timer in C2 power state. libata.dma= [LIBATA] DMA control libata.dma=0 Disable all PATA and SATA DMA libata.dma=1 PATA and SATA Disk DMA only libata.dma=2 ATAPI (CDROM) DMA only libata.dma=4 Compact Flash DMA only Combinations also work, so libata.dma=3 enables DMA for disks and CDROMs, but not CFs. libata.ignore_hpa= [LIBATA] Ignore HPA limit libata.ignore_hpa=0 keep BIOS limits (default) libata.ignore_hpa=1 ignore limits, using full disk libata.noacpi [LIBATA] Disables use of ACPI in libata suspend/resume when set. Format: &lt;int&gt; libata.force= [LIBATA] Force configurations. The format is comma separated list of &quot;[ID:]VAL&quot; where ID is PORT[.DEVICE]. PORT and DEVICE are decimal numbers matching port, link or device. Basically, it matches the ATA ID string printed on console by libata. If the whole ID part is omitted, the last PORT and DEVICE values are used. If ID hasn&#39;t been specified yet, the configuration applies to all ports, links and devices. If only DEVICE is omitted, the parameter applies to the port and all links and devices behind it. DEVICE number of 0 either selects the first device or the first fan-out link behind PMP device. It does not select the host link. DEVICE number of 15 selects the host link and device attached to it. The VAL specifies the configuration to force. As long as there&#39;s no ambiguity shortcut notation is allowed. For example, both 1.5 and 1.5G would work for 1.5Gbps. The following configurations can be forced. * Cable type: 40c, 80c, short40c, unk, ign or sata. Any ID with matching PORT is used. * SATA link speed limit: 1.5Gbps or 3.0Gbps. * Transfer mode: pio[0-7], mwdma[0-4] and udma[0-7]. udma[/][16,25,33,44,66,100,133] notation is also allowed. * [no]ncq: Turn on or off NCQ. * [no]ncqtrim: Turn off queued DSM TRIM. * nohrst, nosrst, norst: suppress hard, soft and both resets. * rstonce: only attempt one reset during hot-unplug link recovery * dump_id: dump IDENTIFY data. * atapi_dmadir: Enable ATAPI DMADIR bridge support * disable: Disable this device. If there are multiple matching configurations changing the same attribute, the last one is used. memblock=debug [KNL] Enable memblock debug messages. load_ramdisk= [RAM] List of ramdisks to load from floppy See Documentation/blockdev/ramdisk.txt. lockd.nlm_grace_period=P [NFS] Assign grace period. Format: &lt;integer&gt; lockd.nlm_tcpport=N [NFS] Assign TCP port. Format: &lt;integer&gt; lockd.nlm_timeout=T [NFS] Assign timeout value. Format: &lt;integer&gt; lockd.nlm_udpport=M [NFS] Assign UDP port. Format: &lt;integer&gt; logibm.irq= [HW,MOUSE] Logitech Bus Mouse Driver Format: &lt;irq&gt; loglevel= All Kernel Messages with a loglevel smaller than the console loglevel will be printed to the console. It can also be changed with klogd or other programs. The loglevels are defined as follows: 0 (KERN_EMERG) system is unusable 1 (KERN_ALERT) action must be taken immediately 2 (KERN_CRIT) critical conditions 3 (KERN_ERR) error conditions 4 (KERN_WARNING) warning conditions 5 (KERN_NOTICE) normal but significant condition 6 (KERN_INFO) informational 7 (KERN_DEBUG) debug-level messages log_buf_len=n[KMG] Sets the size of the printk ring buffer, in bytes. n must be a power of two. The default size is set in the kernel config file. logo.nologo [FB] Disables display of the built-in Linux logo. This may be used to provide more screen space for kernel log messages and is useful when debugging kernel boot problems. lp=0 [LP] Specify parallel ports to use, e.g, lp=port[,port...] lp=none,parport0 (lp0 not configured, lp1 uses lp=reset first parallel port). &#39;lp=0&#39; disables the lp=auto printer driver. &#39;lp=reset&#39; (which can be specified in addition to the ports) causes attached printers to be reset. Using lp=port1,port2,... specifies the parallel ports to associate lp devices with, starting with lp0. A port specification may be &#39;none&#39; to skip that lp device, or a parport name such as &#39;parport0&#39;. Specifying &#39;lp=auto&#39; instead of a port specification list means that device IDs from each port should be examined, to see if an IEEE 1284-compliant printer is attached; if so, the driver will manage that printer. See also header of drivers/char/lp.c. lpj=n [KNL] Sets loops_per_jiffy to given constant, thus avoiding time-consuming boot-time autodetection (up to 250 ms per CPU). 0 enables autodetection (default). To determine the correct value for your kernel, boot with normal autodetection and see what value is printed. Note that on SMP systems the preset will be applied to all CPUs, which is likely to cause problems if your CPUs need significantly divergent settings. An incorrect value will cause delays in the kernel to be wrong, leading to unpredictable I/O errors and other breakage. Although unlikely, in the extreme case this might damage your hardware. ltpc= [NET] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt; machvec= [IA-64] Force the use of a particular machine-vector (machvec) in a generic kernel. Example: machvec=hpzx1_swiotlb machtype= [Loongson] Share the same kernel image file between different yeeloong laptop. Example: machtype=lemote-yeeloong-2f-7inch max_addr=nn[KMG] [KNL,BOOT,ia64] All physical memory greater than or equal to this physical address is ignored. maxcpus= [SMP] Maximum number of processors that an SMP kernel should make use of. maxcpus=n : n &gt;= 0 limits the kernel to using &#39;n&#39; processors. n=0 is a special case, it is equivalent to &quot;nosmp&quot;, which also disables the IO APIC. max_loop= [LOOP] The number of loop block devices that get (loop.max_loop) unconditionally pre-created at init time. The default number is configured by BLK_DEV_LOOP_MIN_COUNT. Instead of statically allocating a predefined number, loop devices can be requested on-demand with the /dev/loop-control interface. mce [X86-32] Machine Check Exception mce=option [X86-64] See Documentation/x86/x86_64/boot-options.txt md= [HW] RAID subsystems devices and level See Documentation/md.txt. mdacon= [MDA] Format: &lt;first&gt;,&lt;last&gt; Specifies range of consoles to be captured by the MDA. mds= [X86,INTEL] Control mitigation for the Micro-architectural Data Sampling (MDS) vulnerability. Certain CPUs are vulnerable to an exploit against CPU internal buffers which can forward information to a disclosure gadget under certain conditions. In vulnerable processors, the speculatively forwarded data can be used in a cache side channel attack, to access data to which the attacker does not have direct access. This parameter controls the MDS mitigation. The options are: full - Enable MDS mitigation on vulnerable CPUs full,nosmt - Enable MDS mitigation and disable SMT on vulnerable CPUs off - Unconditionally disable MDS mitigation On TAA-affected machines, mds=off can be prevented by an active TAA mitigation as both vulnerabilities are mitigated with the same mechanism so in order to disable this mitigation, you need to specify tsx_async_abort=off too. Not specifying this option is equivalent to mds=full. For details see: Documentation/admin-guide/hw-vuln/mds.rst mem=nn[KMG] [KNL,BOOT] Force usage of a specific amount of memory Amount of memory to be used when the kernel is not able to see the whole system memory or for test. [X86] Work as limiting max address. Use together with memmap= to avoid physical address space collisions. Without memmap= PCI devices could be placed at addresses belonging to unused RAM. mem=nopentium [BUGS=X86-32] Disable usage of 4MB pages for kernel memory. memchunk=nn[KMG] [KNL,SH] Allow user to override the default size for per-device physically contiguous DMA buffers. memmap=exactmap [KNL,X86] Enable setting of an exact E820 memory map, as specified by the user. Such memmap=exactmap lines can be constructed based on BIOS output or other requirements. See the memmap=nn@ss option description. memmap=nn[KMG]@ss[KMG] [KNL] Force usage of a specific region of memory Region of memory to be used, from ss to ss+nn. If @ss[KMG] is omitted, it is equivalent to mem=nn[KMG], which limits max address to nn[KMG]. Multiple different regions can be specified, comma delimited. Example: memmap=100M@2G,100M#3G,1G!1024G memmap=nn[KMG]#ss[KMG] [KNL,ACPI] Mark specific memory as ACPI data. Region of memory to be used, from ss to ss+nn. memmap=nn[KMG]$ss[KMG] [KNL,ACPI] Mark specific memory as reserved. Region of memory to be used, from ss to ss+nn. Example: Exclude memory from 0x18690000-0x1869ffff memmap=64K$0x18690000 or memmap=0x10000$0x18690000 Some bootloaders may need an escape character before &#39;$&#39;, like Grub2, otherwise &#39;$&#39; and the following number will be eaten. memmap=nn[KMG]!ss[KMG] [KNL,X86] Mark specific memory as protected. Region of memory to be used, from ss to ss+nn. The memory region may be marked as e820 type 12 (0xc) and is NVDIMM or ADR memory. memory_corruption_check=0/1 [X86] Some BIOSes seem to corrupt the first 64k of memory when doing things like suspend/resume. Setting this option will scan the memory looking for corruption. Enabling this will both detect corruption and prevent the kernel from using the memory being corrupted. However, its intended as a diagnostic tool; if repeatable BIOS-originated corruption always affects the same memory, you can use memmap= to prevent the kernel from using that memory. memory_corruption_check_size=size [X86] By default it checks for corruption in the low 64k, making this memory unavailable for normal use. Use this parameter to scan for corruption in more or less memory. memory_corruption_check_period=seconds [X86] By default it checks for corruption every 60 seconds. Use this parameter to check at some other rate. 0 disables periodic checking. memtest= [KNL,X86] Enable memtest Format: &lt;integer&gt; default : 0 &lt;disable&gt; Specifies the number of memtest passes to be performed. Each pass selects another test pattern from a given set of patterns. Memtest fills the memory with this pattern, validates memory contents and reserves bad memory regions that are detected. mem_encrypt= [X86-64] AMD Secure Memory Encryption (SME) control Valid arguments: on, off Default (depends on kernel configuration option): on (CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT=y) off (CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT=n) mem_encrypt=on: Activate SME mem_encrypt=off: Do not activate SME Refer to Documentation/x86/amd-memory-encryption.txt for details on when memory encryption can be activated. meye.*= [HW] Set MotionEye Camera parameters See Documentation/video4linux/meye.txt. mfgpt_irq= [IA-32] Specify the IRQ to use for the Multi-Function General Purpose Timers on AMD Geode platforms. mfgptfix [X86-32] Fix MFGPT timers on AMD Geode platforms when the BIOS has incorrectly applied a workaround. TinyBIOS version 0.98 is known to be affected, 0.99 fixes the problem by letting the user disable the workaround. mga= [HW,DRM] min_addr=nn[KMG] [KNL,BOOT,ia64] All physical memory below this physical address is ignored. mini2440= [ARM,HW,KNL] Format:[0..2][b][c][t] Default: &quot;0tb&quot; MINI2440 configuration specification: 0 - The attached screen is the 3.5&quot; TFT 1 - The attached screen is the 7&quot; TFT 2 - The VGA Shield is attached (1024x768) Leaving out the screen size parameter will not load the TFT driver, and the framebuffer will be left unconfigured. b - Enable backlight. The TFT backlight pin will be linked to the kernel VESA blanking code and a GPIO LED. This parameter is not necessary when using the VGA shield. c - Enable the s3c camera interface. t - Reserved for enabling touchscreen support. The touchscreen support is not enabled in the mainstream kernel as of 2.6.30, a preliminary port can be found in the &quot;bleeding edge&quot; mini2440 support kernel at http://repo.or.cz/w/linux-2.6/mini2440.git mitigations= [X86,PPC,S390] Control optional mitigations for CPU vulnerabilities. This is a set of curated, arch-independent options, each of which is an aggregation of existing arch-specific options. off Disable all optional CPU mitigations. This improves system performance, but it may also expose users to several CPU vulnerabilities. Equivalent to: nopti [X86,PPC] nospectre_v1 [X86,PPC] nobp=0 [S390] nospectre_v2 [X86,PPC,S390] spec_store_bypass_disable=off [X86,PPC] l1tf=off [X86] mds=off [X86] tsx_async_abort=off [X86] kvm.nx_huge_pages=off [X86] Exceptions: This does not have any effect on kvm.nx_huge_pages when kvm.nx_huge_pages=force. auto (default) Mitigate all CPU vulnerabilities, but leave SMT enabled, even if it&#39;s vulnerable. This is for users who don&#39;t want to be surprised by SMT getting disabled across kernel upgrades, or who have other ways of avoiding SMT-based attacks. Equivalent to: (default behavior) auto,nosmt Mitigate all CPU vulnerabilities, disabling SMT if needed. This is for users who always want to be fully mitigated, even if it means losing SMT. Equivalent to: l1tf=flush,nosmt [X86] mds=full,nosmt [X86] tsx_async_abort=full,nosmt [X86] mminit_loglevel= [KNL] When CONFIG_DEBUG_MEMORY_INIT is set, this parameter allows control of the logging verbosity for the additional memory initialisation checks. A value of 0 disables mminit logging and a level of 4 will log everything. Information is printed at KERN_DEBUG so loglevel=8 may also need to be specified. module.sig_enforce [KNL] When CONFIG_MODULE_SIG is set, this means that modules without (valid) signatures will fail to load. Note that if CONFIG_MODULE_SIG_FORCE is set, that is always true, so this option does nothing. module_blacklist= [KNL] Do not load a comma-separated list of modules. Useful for debugging problem modules. mousedev.tap_time= [MOUSE] Maximum time between finger touching and leaving touchpad surface for touch to be considered a tap and be reported as a left button click (for touchpads working in absolute mode only). Format: &lt;msecs&gt; mousedev.xres= [MOUSE] Horizontal screen resolution, used for devices reporting absolute coordinates, such as tablets mousedev.yres= [MOUSE] Vertical screen resolution, used for devices reporting absolute coordinates, such as tablets movablecore=nn[KMG] [KNL,X86,IA-64,PPC] This parameter is similar to kernelcore except it specifies the amount of memory used for migratable allocations. If both kernelcore and movablecore is specified, then kernelcore will be at *least* the specified value but may be more. If movablecore on its own is specified, the administrator must be careful that the amount of memory usable for all allocations is not too small. movable_node [KNL,X86] Boot-time switch to enable the effects of CONFIG_MOVABLE_NODE=y. See mm/Kconfig for details. MTD_Partition= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;,&lt;size&gt;,&lt;offset&gt; MTD_Region= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;[,&lt;base&gt;,&lt;size&gt;,&lt;buswidth&gt;,&lt;altbuswidth&gt;] mtdparts= [MTD] See drivers/mtd/cmdlinepart.c. multitce=off [PPC] This parameter disables the use of the pSeries firmware feature for updating multiple TCE entries at a time. onenand.bdry= [HW,MTD] Flex-OneNAND Boundary Configuration Format: [die0_boundary][,die0_lock][,die1_boundary][,die1_lock] boundary - index of last SLC block on Flex-OneNAND. The remaining blocks are configured as MLC blocks. lock - Configure if Flex-OneNAND boundary should be locked. Once locked, the boundary cannot be changed. 1 indicates lock status, 0 indicates unlock status. mtdset= [ARM] ARM/S3C2412 JIVE boot control See arch/arm/mach-s3c2412/mach-jive.c mtouchusb.raw_coordinates= [HW] Make the MicroTouch USB driver use raw coordinates (&#39;y&#39;, default) or cooked coordinates (&#39;n&#39;) mtrr_chunk_size=nn[KMG] [X86] used for mtrr cleanup. It is largest continuous chunk that could hold holes aka. UC entries. mtrr_gran_size=nn[KMG] [X86] Used for mtrr cleanup. It is granularity of mtrr block. Default is 1. Large value could prevent small alignment from using up MTRRs. mtrr_spare_reg_nr=n [X86] Format: &lt;integer&gt; Range: 0,7 : spare reg number Default : 1 Used for mtrr cleanup. It is spare mtrr entries number. Set to 2 or more if your graphical card needs more. n2= [NET] SDL Inc. RISCom/N2 synchronous serial card netdev= [NET] Network devices parameters Format: &lt;irq&gt;,&lt;io&gt;,&lt;mem_start&gt;,&lt;mem_end&gt;,&lt;name&gt; Note that mem_start is often overloaded to mean something different and driver-specific. This usage is only documented in each driver source file if at all. nf_conntrack.acct= [NETFILTER] Enable connection tracking flow accounting 0 to disable accounting 1 to enable accounting Default value is 0. nfsaddrs= [NFS] Deprecated. Use ip= instead. See Documentation/filesystems/nfs/nfsroot.txt. nfsroot= [NFS] nfs root filesystem for disk-less boxes. See Documentation/filesystems/nfs/nfsroot.txt. nfsrootdebug [NFS] enable nfsroot debugging messages. See Documentation/filesystems/nfs/nfsroot.txt. nfs.callback_tcpport= [NFS] set the TCP port on which the NFSv4 callback channel should listen. nfs.cache_getent= [NFS] sets the pathname to the program which is used to update the NFS client cache entries. nfs.cache_getent_timeout= [NFS] sets the timeout after which an attempt to update a cache entry is deemed to have failed. nfs.idmap_cache_timeout= [NFS] set the maximum lifetime for idmapper cache entries. nfs.enable_ino64= [NFS] enable 64-bit inode numbers. If zero, the NFS client will fake up a 32-bit inode number for the readdir() and stat() syscalls instead of returning the full 64-bit number. The default is to return 64-bit inode numbers. nfs.max_session_slots= [NFSv4.1] Sets the maximum number of session slots the client will attempt to negotiate with the server. This limits the number of simultaneous RPC requests that the client can send to the NFSv4.1 server. Note that there is little point in setting this value higher than the max_tcp_slot_table_limit. nfs.nfs4_disable_idmapping= [NFSv4] When set to the default of &#39;1&#39;, this option ensures that both the RPC level authentication scheme and the NFS level operations agree to use numeric uids/gids if the mount is using the &#39;sec=sys&#39; security flavour. In effect it is disabling idmapping, which can make migration from legacy NFSv2/v3 systems to NFSv4 easier. Servers that do not support this mode of operation will be autodetected by the client, and it will fall back to using the idmapper. To turn off this behaviour, set the value to &#39;0&#39;. nfs.nfs4_unique_id= [NFS4] Specify an additional fixed unique ident- ification string that NFSv4 clients can insert into their nfs_client_id4 string. This is typically a UUID that is generated at system install time. nfs.send_implementation_id = [NFSv4.1] Send client implementation identification information in exchange_id requests. If zero, no implementation identification information will be sent. The default is to send the implementation identification information. nfs.recover_lost_locks = [NFSv4] Attempt to recover locks that were lost due to a lease timeout on the server. Please note that doing this risks data corruption, since there are no guarantees that the file will remain unchanged after the locks are lost. If you want to enable the kernel legacy behaviour of attempting to recover these locks, then set this parameter to &#39;1&#39;. The default parameter value of &#39;0&#39; causes the kernel not to attempt recovery of lost locks. nfs4.layoutstats_timer = [NFSv4.2] Change the rate at which the kernel sends layoutstats to the pNFS metadata server. Setting this to value to 0 causes the kernel to use whatever value is the default set by the layout driver. A non-zero value sets the minimum interval in seconds between layoutstats transmissions. nfsd.nfs4_disable_idmapping= [NFSv4] When set to the default of &#39;1&#39;, the NFSv4 server will return only numeric uids and gids to clients using auth_sys, and will accept numeric uids and gids from such clients. This is intended to ease migration from NFSv2/v3. objlayoutdriver.osd_login_prog= [NFS] [OBJLAYOUT] sets the pathname to the program which is used to automatically discover and login into new osd-targets. Please see: Documentation/filesystems/pnfs.txt for more explanations nmi_debug= [KNL,AVR32,SH] Specify one or more actions to take when a NMI is triggered. Format: [state][,regs][,debounce][,die] nmi_watchdog= [KNL,BUGS=X86] Debugging features for SMP kernels Format: [panic,][nopanic,][num] Valid num: 0 or 1 0 - turn nmi_watchdog off 1 - turn nmi_watchdog on When panic is specified, panic when an NMI watchdog timeout occurs (or &#39;nopanic&#39; to override the opposite default). This is useful when you use a panic=... timeout and need the box quickly up again. These settings can be accessed at runtime via the nmi_watchdog and hardlockup_panic sysctls. netpoll.carrier_timeout= [NET] Specifies amount of time (in seconds) that netpoll should wait for a carrier. By default netpoll waits 4 seconds. no387 [BUGS=X86-32] Tells the kernel to use the 387 maths emulation library even if a 387 maths coprocessor is present. no_console_suspend [HW] Never suspend the console Disable suspending of consoles during suspend and hibernate operations. Once disabled, debugging messages can reach various consoles while the rest of the system is being put to sleep (ie, while debugging driver suspend/resume hooks). This may not work reliably with all consoles, but is known to work with serial and VGA consoles. To facilitate more flexible debugging, we also add console_suspend, a printk module parameter to control it. Users could use console_suspend (usually /sys/module/printk/parameters/console_suspend) to turn on/off it dynamically. noaliencache [MM, NUMA, SLAB] Disables the allocation of alien caches in the slab allocator. Saves per-node memory, but will impact performance. noalign [KNL,ARM] noapic [SMP,APIC] Tells the kernel to not make use of any IOAPICs that may be present in the system. noautogroup Disable scheduler automatic task group creation. nobats [PPC] Do not use BATs for mapping kernel lowmem on &quot;Classic&quot; PPC cores. nocache [ARM] noclflush [BUGS=X86] Don&#39;t use the CLFLUSH instruction nodelayacct [KNL] Disable per-task delay accounting nodisconnect [HW,SCSI,M68K] Disables SCSI disconnects. nodsp [SH] Disable hardware DSP at boot time. noefi Disable EFI runtime services support. noexec [IA-64] noexec [X86] On X86-32 available only on PAE configured kernels. noexec=on: enable non-executable mappings (default) noexec=off: disable non-executable mappings nomokvarconfig [EFI, X86] Disable use of the EFI MOK variable configuration table. nosmap [X86] Disable SMAP (Supervisor Mode Access Prevention) even if it is supported by processor. nosmep [X86] Disable SMEP (Supervisor Mode Execution Prevention) even if it is supported by processor. noexec32 [X86-64] This affects only 32-bit executables. noexec32=on: enable non-executable mappings (default) read doesn&#39;t imply executable mappings noexec32=off: disable non-executable mappings read implies executable mappings nofpu [SH] Disable hardware FPU at boot time. nofxsr [BUGS=X86-32] Disables x86 floating point extended register save and restore. The kernel will only save legacy floating-point registers on task switch. nohugeiomap [KNL,x86] Disable kernel huge I/O mappings. nosmt [KNL,S390] Disable symmetric multithreading (SMT). Equivalent to smt=1. [KNL,x86] Disable symmetric multithreading (SMT). nosmt=force: Force disable SMT, cannot be undone via the sysfs control file. nospectre_v1 [X86,PPC] Disable mitigations for Spectre Variant 1 (bounds check bypass). With this option data leaks are possible in the system. nospectre_v2 [X86] Disable all mitigations for the Spectre variant 2 (indirect branch prediction) vulnerability. System may allow data leaks with this option, which is equivalent to spectre_v2=off. nospec_store_bypass_disable [HW] Disable all mitigations for the Speculative Store Bypass vulnerability noxsave [BUGS=X86] Disables x86 extended register state save and restore using xsave. The kernel will fallback to enabling legacy floating-point and sse state. noxsaveopt [X86] Disables xsaveopt used in saving x86 extended register states. The kernel will fall back to use xsave to save the states. By using this parameter, performance of saving the states is degraded because xsave doesn&#39;t support modified optimization while xsaveopt supports it on xsaveopt enabled systems. noxsaves [X86] Disables xsaves and xrstors used in saving and restoring x86 extended register state in compacted form of xsave area. The kernel will fall back to use xsaveopt and xrstor to save and restore the states in standard form of xsave area. By using this parameter, xsave area per process might occupy more memory on xsaves enabled systems. nompx [X86] Disables Intel Memory Protection Extensions. See Documentation/x86/intel_mpx.txt for more information about the feature. nopku [X86] Disable Memory Protection Keys CPU feature found in some Intel CPUs. novmcoredd [KNL,KDUMP] Disable device dump. Device dump allows drivers to append dump data to vmcore so you can collect driver specified debug info. Drivers can append the data without any limit and this data is stored in memory, so this may cause significant memory stress. Disabling device dump can help save memory but the driver debug data will be no longer available. This parameter is only available when CONFIG_PROC_VMCORE_DEVICE_DUMP is set. eagerfpu= [X86] on enable eager fpu restore off disable eager fpu restore auto selects the default scheme, which automatically enables eagerfpu restore for xsaveopt. nohlt [BUGS=ARM,SH] Tells the kernel that the sleep(SH) or wfi(ARM) instruction doesn&#39;t work correctly and not to use it. This is also useful when using JTAG debugger. no_file_caps Tells the kernel not to honor file capabilities. The only way then for a file to be executed with privilege is to be setuid root or executed by root. nohalt [IA-64] Tells the kernel not to use the power saving function PAL_HALT_LIGHT when idle. This increases power-consumption. On the positive side, it reduces interrupt wake-up latency, which may improve performance in certain environments such as networked servers or real-time systems. nohibernate [HIBERNATION] Disable hibernation and resume. nohz= [KNL] Boottime enable/disable dynamic ticks Valid arguments: on, off Default: on nohz_full= [KNL,BOOT] In kernels built with CONFIG_NO_HZ_FULL=y, set the specified list of CPUs whose tick will be stopped whenever possible. The boot CPU will be forced outside the range to maintain the timekeeping. The CPUs in this range must also be included in the rcu_nocbs= set. noiotrap [SH] Disables trapped I/O port accesses. noirqdebug [X86-32] Disables the code which attempts to detect and disable unhandled interrupt sources. no_timer_check [X86,APIC] Disables the code which tests for broken timer IRQ sources. noisapnp [ISAPNP] Disables ISA PnP code. noinitrd [RAM] Tells the kernel not to load any configured initial RAM disk. nointremap [X86-64, Intel-IOMMU] Do not enable interrupt remapping. [Deprecated - use intremap=off] nointroute [IA-64] nojitter [IA-64] Disables jitter checking for ITC timers. no-kvmclock [X86,KVM] Disable paravirtualized KVM clock driver no-kvmapf [X86,KVM] Disable paravirtualized asynchronous page fault handling. no-vmw-sched-clock [X86,PV_OPS] Disable paravirtualized VMware scheduler clock and use the default one. no-steal-acc [X86,KVM] Disable paravirtualized steal time accounting. steal time is computed, but won&#39;t influence scheduler behaviour nopti [X86-64] Disable kernel page table isolation. nolapic [X86-32,APIC] Do not enable or use the local APIC. nolapic_timer [X86-32,APIC] Do not use the local APIC timer. noltlbs [PPC] Do not use large page/tlb entries for kernel lowmem mapping on PPC40x. nomca [IA-64] Disable machine check abort handling nomce [X86-32] Machine Check Exception nomfgpt [X86-32] Disable Multi-Function General Purpose Timer usage (for AMD Geode machines). nonmi_ipi [X86] Disable using NMI IPIs during panic/reboot to shutdown the other cpus. Instead use the REBOOT_VECTOR irq. nomodule Disable module load nopat [X86] Disable PAT (page attribute table extension of pagetables) support. norandmaps Don&#39;t use address space randomization. Equivalent to echo 0 &gt; /proc/sys/kernel/randomize_va_space noreplace-smp [X86-32,SMP] Don&#39;t replace SMP instructions with UP alternatives nordrand [X86] Disable the direct use of the RDRAND instruction even if it is supported by the processor. RDRAND is still available to user space applications. noresume [SWSUSP] Disables resume and restores original swap space. no-scroll [VGA] Disables scrollback. This is required for the Braillex ib80-piezo Braille reader made by F.H. Papenmeier (Germany). nosbagart [IA-64] nosep [BUGS=X86-32] Disables x86 SYSENTER/SYSEXIT support. nosmp [SMP] Tells an SMP kernel to act as a UP kernel, and disable the IO APIC. legacy for &quot;maxcpus=0&quot;. nosoftlockup [KNL] Disable the soft-lockup detector. nosync [HW,M68K] Disables sync negotiation for all devices. notsc [BUGS=X86-32] Disable Time Stamp Counter nousb [USB] Disable the USB subsystem nowatchdog [KNL] Disable both lockup detectors, i.e. soft-lockup and NMI watchdog (hard-lockup). nowb [ARM] nox2apic [X86-64,APIC] Do not enable x2APIC mode. cpu0_hotplug [X86] Turn on CPU0 hotplug feature when CONFIG_BOOTPARAM_HOTPLUG_CPU0 is off. Some features depend on CPU0. Known dependencies are: 1. Resume from suspend/hibernate depends on CPU0. Suspend/hibernate will fail if CPU0 is offline and you need to online CPU0 before suspend/hibernate. 2. PIC interrupts also depend on CPU0. CPU0 can&#39;t be removed if a PIC interrupt is detected. It&#39;s said poweroff/reboot may depend on CPU0 on some machines although I haven&#39;t seen such issues so far after CPU0 is offline on a few tested machines. If the dependencies are under your control, you can turn on cpu0_hotplug. nptcg= [IA-64] Override max number of concurrent global TLB purges which is reported from either PAL_VM_SUMMARY or SAL PALO. nr_cpus= [SMP] Maximum number of processors that an SMP kernel could support. nr_cpus=n : n &gt;= 1 limits the kernel to supporting &#39;n&#39; processors. Later in runtime you can not use hotplug cpu feature to put more cpu back to online. just like you compile the kernel NR_CPUS=n nr_uarts= [SERIAL] maximum number of UARTs to be registered. numa_balancing= [KNL,X86] Enable or disable automatic NUMA balancing. Allowed values are enable and disable numa_zonelist_order= [KNL, BOOT] Select zonelist order for NUMA. one of [&#39;zone&#39;, &#39;node&#39;, &#39;default&#39;] can be specified This can be set from sysctl after boot. See Documentation/sysctl/vm.txt for details. ohci1394_dma=early [HW] enable debugging via the ohci1394 driver. See Documentation/debugging-via-ohci1394.txt for more info. olpc_ec_timeout= [OLPC] ms delay when issuing EC commands Rather than timing out after 20 ms if an EC command is not properly ACKed, override the length of the timeout. We have interrupts disabled while waiting for the ACK, so if this is set too high interrupts *may* be lost! omap_mux= [OMAP] Override bootloader pin multiplexing. Format: &lt;mux_mode0.mode_name=value&gt;... For example, to override I2C bus2: omap_mux=i2c2_scl.i2c2_scl=0x100,i2c2_sda.i2c2_sda=0x100 oprofile.timer= [HW] Use timer interrupt instead of performance counters oprofile.cpu_type= Force an oprofile cpu type This might be useful if you have an older oprofile userland or if you want common events. Format: &#123; arch_perfmon &#125; arch_perfmon: [X86] Force use of architectural perfmon on Intel CPUs instead of the CPU specific event set. timer: [X86] Force use of architectural NMI timer mode (see also oprofile.timer for generic hr timer mode) [s390] Force legacy basic mode sampling (report cpu_type &quot;timer&quot;) oops=panic Always panic on oopses. Default is to just kill the process, but there is a small probability of deadlocking the machine. This will also cause panics on machine check exceptions. Useful together with panic=30 to trigger a reboot. OSS [HW,OSS] See Documentation/sound/oss/oss-parameters.txt page_owner= [KNL] Boot-time page_owner enabling option. Storage of the information about who allocated each page is disabled in default. With this switch, we can turn it on. on: enable the feature panic= [KNL] Kernel behaviour on panic: delay &lt;timeout&gt; timeout &gt; 0: seconds before rebooting timeout = 0: wait forever timeout &lt; 0: reboot immediately Format: &lt;timeout&gt; panic_on_taint= Bitmask for conditionally calling panic() in add_taint() Format: &lt;hex&gt;[,nousertaint] Hexadecimal bitmask representing the set of TAINT flags that will cause the kernel to panic when add_taint() is called with any of the flags in this set. The optional switch &quot;nousertaint&quot; can be utilized to prevent userspace forced crashes by writing to sysctl /proc/sys/kernel/tainted any flagset matching with the bitmask set on panic_on_taint. See Documentation/admin-guide/tainted-kernels.rst for extra details on the taint flags that users can pick to compose the bitmask to assign to panic_on_taint. panic_on_warn panic() instead of WARN(). Useful to cause kdump on a WARN(). crash_kexec_post_notifiers Run kdump after running panic-notifiers and dumping kmsg. This only for the users who doubt kdump always succeeds in any situation. Note that this also increases risks of kdump failure, because some panic notifiers can make the crashed kernel more unstable. parkbd.port= [HW] Parallel port number the keyboard adapter is connected to, default is 0. Format: &lt;parport#&gt; parkbd.mode= [HW] Parallel port keyboard adapter mode of operation, 0 for XT, 1 for AT (default is AT). Format: &lt;mode&gt; parport= [HW,PPT] Specify parallel ports. 0 disables. Format: &#123; 0 | auto | 0xBBB[,IRQ[,DMA]] &#125; Use &#39;auto&#39; to force the driver to use any IRQ/DMA settings detected (the default is to ignore detected IRQ/DMA settings because of possible conflicts). You can specify the base address, IRQ, and DMA settings; IRQ and DMA should be numbers, or &#39;auto&#39; (for using detected settings on that particular port), or &#39;nofifo&#39; (to avoid using a FIFO even if it is detected). Parallel ports are assigned in the order they are specified on the command line, starting with parport0. parport_init_mode= [HW,PPT] Configure VIA parallel port to operate in a specific mode. This is necessary on Pegasos computer where firmware has no options for setting up parallel port mode and sets it to spp. Currently this function knows 686a and 8231 chips. Format: [spp|ps2|epp|ecp|ecpepp] pause_on_oops= Halt all CPUs after the first oops has been printed for the specified number of seconds. This is to be used if your oopses keep scrolling off the screen. pcbit= [HW,ISDN] pcd. [PARIDE] See header of drivers/block/paride/pcd.c. See also Documentation/blockdev/paride.txt. pci=option[,option...] [PCI] various PCI subsystem options: earlydump [X86] dump PCI config space before the kernel changes anything off [X86] don&#39;t probe for the PCI bus bios [X86-32] force use of PCI BIOS, don&#39;t access the hardware directly. Use this if your machine has a non-standard PCI host bridge. nobios [X86-32] disallow use of PCI BIOS, only direct hardware access methods are allowed. Use this if you experience crashes upon bootup and you suspect they are caused by the BIOS. conf1 [X86] Force use of PCI Configuration Mechanism 1. conf2 [X86] Force use of PCI Configuration Mechanism 2. noaer [PCIE] If the PCIEAER kernel config parameter is enabled, this kernel boot option can be used to disable the use of PCIE advanced error reporting. nodomains [PCI] Disable support for multiple PCI root domains (aka PCI segments, in ACPI-speak). nommconf [X86] Disable use of MMCONFIG for PCI Configuration check_enable_amd_mmconf [X86] check for and enable properly configured MMIO access to PCI config space on AMD family 10h CPU nomsi [MSI] If the PCI_MSI kernel config parameter is enabled, this kernel boot option can be used to disable the use of MSI interrupts system-wide. noioapicquirk [APIC] Disable all boot interrupt quirks. Safety option to keep boot IRQs enabled. This should never be necessary. ioapicreroute [APIC] Enable rerouting of boot IRQs to the primary IO-APIC for bridges that cannot disable boot IRQs. This fixes a source of spurious IRQs when the system masks IRQs. noioapicreroute [APIC] Disable workaround that uses the boot IRQ equivalent of an IRQ that connects to a chipset where boot IRQs cannot be disabled. The opposite of ioapicreroute. biosirq [X86-32] Use PCI BIOS calls to get the interrupt routing table. These calls are known to be buggy on several machines and they hang the machine when used, but on other computers it&#39;s the only way to get the interrupt routing table. Try this option if the kernel is unable to allocate IRQs or discover secondary PCI buses on your motherboard. rom [X86] Assign address space to expansion ROMs. Use with caution as certain devices share address decoders between ROMs and other resources. norom [X86] Do not assign address space to expansion ROMs that do not already have BIOS assigned address ranges. nobar [X86] Do not assign address space to the BARs that weren&#39;t assigned by the BIOS. irqmask=0xMMMM [X86] Set a bit mask of IRQs allowed to be assigned automatically to PCI devices. You can make the kernel exclude IRQs of your ISA cards this way. pirqaddr=0xAAAAA [X86] Specify the physical address of the PIRQ table (normally generated by the BIOS) if it is outside the F0000h-100000h range. lastbus=N [X86] Scan all buses thru bus #N. Can be useful if the kernel is unable to find your secondary buses and you want to tell it explicitly which ones they are. assign-busses [X86] Always assign all PCI bus numbers ourselves, overriding whatever the firmware may have done. usepirqmask [X86] Honor the possible IRQ mask stored in the BIOS $PIR table. This is needed on some systems with broken BIOSes, notably some HP Pavilion N5400 and Omnibook XE3 notebooks. This will have no effect if ACPI IRQ routing is enabled. noacpi [X86] Do not use ACPI for IRQ routing or for PCI scanning. use_crs [X86] Use PCI host bridge window information from ACPI. On BIOSes from 2008 or later, this is enabled by default. If you need to use this, please report a bug. nocrs [X86] Ignore PCI host bridge windows from ACPI. If you need to use this, please report a bug. routeirq Do IRQ routing for all PCI devices. This is normally done in pci_enable_device(), so this option is a temporary workaround for broken drivers that don&#39;t call it. skip_isa_align [X86] do not align io start addr, so can handle more pci cards firmware [ARM] Do not re-enumerate the bus but instead just use the configuration from the bootloader. This is currently used on IXP2000 systems where the bus has to be configured a certain way for adjunct CPUs. noearly [X86] Don&#39;t do any early type 1 scanning. This might help on some broken boards which machine check when some devices&#39; config space is read. But various workarounds are disabled and some IOMMU drivers will not work. bfsort Sort PCI devices into breadth-first order. This sorting is done to get a device order compatible with older (&lt;= 2.4) kernels. nobfsort Don&#39;t sort PCI devices into breadth-first order. pcie_bus_tune_off Disable PCIe MPS (Max Payload Size) tuning and use the BIOS-configured MPS defaults. pcie_bus_safe Set every device&#39;s MPS to the largest value supported by all devices below the root complex. pcie_bus_perf Set device MPS to the largest allowable MPS based on its parent bus. Also set MRRS (Max Read Request Size) to the largest supported value (no larger than the MPS that the device or bus can support) for best performance. pcie_bus_peer2peer Set every device&#39;s MPS to 128B, which every device is guaranteed to support. This configuration allows peer-to-peer DMA between any pair of devices, possibly at the cost of reduced performance. This also guarantees that hot-added devices will work. cbiosize=nn[KMG] The fixed amount of bus space which is reserved for the CardBus bridge&#39;s IO window. The default value is 256 bytes. cbmemsize=nn[KMG] The fixed amount of bus space which is reserved for the CardBus bridge&#39;s memory window. The default value is 64 megabytes. resource_alignment= Format: [&lt;order of align&gt;@][&lt;domain&gt;:]&lt;bus&gt;:&lt;slot&gt;.&lt;func&gt;[; ...] [&lt;order of align&gt;@]pci:&lt;vendor&gt;:&lt;device&gt;\\ [:&lt;subvendor&gt;:&lt;subdevice&gt;][; ...] Specifies alignment and device to reassign aligned memory resources. If &lt;order of align&gt; is not specified, PAGE_SIZE is used as alignment. PCI-PCI bridge can be specified, if resource windows need to be expanded. ecrc= Enable/disable PCIe ECRC (transaction layer end-to-end CRC checking). bios: Use BIOS/firmware settings. This is the the default. off: Turn ECRC off on: Turn ECRC on. hpiosize=nn[KMG] The fixed amount of bus space which is reserved for hotplug bridge&#39;s IO window. Default size is 256 bytes. hpmemsize=nn[KMG] The fixed amount of bus space which is reserved for hotplug bridge&#39;s memory window. Default size is 2 megabytes. hpbussize=nn The minimum amount of additional bus numbers reserved for buses below a hotplug bridge. Default is 1. realloc= Enable/disable reallocating PCI bridge resources if allocations done by BIOS are too small to accommodate resources required by all child devices. off: Turn realloc off on: Turn realloc on realloc same as realloc=on noari do not use PCIe ARI. pcie_scan_all Scan all possible PCIe devices. Otherwise we only look for one device below a PCIe downstream port. pcie_aspm= [PCIE] Forcibly enable or disable PCIe Active State Power Management. off Disable ASPM. force Enable ASPM even on devices that claim not to support it. WARNING: Forcing ASPM on may cause system lockups. pcie_hp= [PCIE] PCI Express Hotplug driver options: nomsi Do not use MSI for PCI Express Native Hotplug (this makes all PCIe ports use INTx for hotplug services). pcie_ports= [PCIE] PCIe ports handling: auto Ask the BIOS whether or not to use native PCIe services associated with PCIe ports (PME, hot-plug, AER). Use them only if that is allowed by the BIOS. native Use native PCIe services associated with PCIe ports unconditionally. compat Treat PCIe ports as PCI-to-PCI bridges, disable the PCIe ports driver. pcie_port_pm= [PCIE] PCIe port power management handling: off Disable power management of all PCIe ports force Forcibly enable power management of all PCIe ports pcie_pme= [PCIE,PM] Native PCIe PME signaling options: nomsi Do not use MSI for native PCIe PME signaling (this makes all PCIe root ports use INTx for all services). pcmv= [HW,PCMCIA] BadgePAD 4 pd. [PARIDE] See Documentation/blockdev/paride.txt. pdcchassis= [PARISC,HW] Disable/Enable PDC Chassis Status codes at boot time. Format: &#123; 0 | 1 &#125; See arch/parisc/kernel/pdc_chassis.c percpu_alloc= Select which percpu first chunk allocator to use. Currently supported values are &quot;embed&quot; and &quot;page&quot;. Archs may support subset or none of the selections. See comments in mm/percpu.c for details on each allocator. This parameter is primarily for debugging and performance comparison. pf. [PARIDE] See Documentation/blockdev/paride.txt. pg. [PARIDE] See Documentation/blockdev/paride.txt. pirq= [SMP,APIC] Manual mp-table setup See Documentation/x86/i386/IO-APIC.txt. plip= [PPT,NET] Parallel port network link Format: &#123; parport&lt;nr&gt; | timid | 0 &#125; See also Documentation/parport.txt. pmtmr= [X86] Manual setup of pmtmr I/O Port. Override pmtimer IOPort with a hex value. e.g. pmtmr=0x508 pnp.debug=1 [PNP] Enable PNP debug messages (depends on the CONFIG_PNP_DEBUG_MESSAGES option). Change at run-time via /sys/module/pnp/parameters/debug. We always show current resource usage; turning this on also shows possible settings and some assignment information. pnpacpi= [ACPI] &#123; off &#125; pnpbios= [ISAPNP] &#123; on | off | curr | res | no-curr | no-res &#125; pnp_reserve_irq= [ISAPNP] Exclude IRQs for the autoconfiguration pnp_reserve_dma= [ISAPNP] Exclude DMAs for the autoconfiguration pnp_reserve_io= [ISAPNP] Exclude I/O ports for the autoconfiguration Ranges are in pairs (I/O port base and size). pnp_reserve_mem= [ISAPNP] Exclude memory regions for the autoconfiguration. Ranges are in pairs (memory base and size). ports= [IP_VS_FTP] IPVS ftp helper module Default is 21. Up to 8 (IP_VS_APP_MAX_PORTS) ports may be specified. Format: &lt;port&gt;,&lt;port&gt;.... ppc_tm= [PPC] Format: &#123;&quot;off&quot;&#125; Disable Hardware Transactional Memory print-fatal-signals= [KNL] debug: print fatal signals If enabled, warn about various signal handling related application anomalies: too many signals, too many POSIX.1 timers, fatal signals causing a coredump - etc. If you hit the warning due to signal overflow, you might want to try &quot;ulimit -i unlimited&quot;. default: off. printk.always_kmsg_dump= Trigger kmsg_dump for cases other than kernel oops or panics Format: &lt;bool&gt; (1/Y/y=enable, 0/N/n=disable) default: disabled printk.time= Show timing data prefixed to each printk message line Format: &lt;bool&gt; (1/Y/y=enable, 0/N/n=disable) processor.max_cstate= [HW,ACPI] Limit processor to maximum C-state max_cstate=9 overrides any DMI blacklist limit. processor.nocst [HW,ACPI] Ignore the _CST method to determine C-states, instead using the legacy FADT method profile= [KNL] Enable kernel profiling via /proc/profile Format: [schedule,]&lt;number&gt; Param: &quot;schedule&quot; - profile schedule points. Param: &lt;number&gt; - step/bucket size as a power of 2 for statistical time based profiling. Param: &quot;sleep&quot; - profile D-state sleeping (millisecs). Requires CONFIG_SCHEDSTATS Param: &quot;kvm&quot; - profile VM exits. prompt_ramdisk= [RAM] List of RAM disks to prompt for floppy disk before loading. See Documentation/blockdev/ramdisk.txt. psmouse.proto= [HW,MOUSE] Highest PS2 mouse protocol extension to probe for; one of (bare|imps|exps|lifebook|any). psmouse.rate= [HW,MOUSE] Set desired mouse report rate, in reports per second. psmouse.resetafter= [HW,MOUSE] Try to reset the device after so many bad packets (0 = never). psmouse.resolution= [HW,MOUSE] Set desired mouse resolution, in dpi. psmouse.smartscroll= [HW,MOUSE] Controls Logitech smartscroll autorepeat. 0 = disabled, 1 = enabled (default). pstore.backend= Specify the name of the pstore backend to use pt. [PARIDE] See Documentation/blockdev/paride.txt. pty.legacy_count= [KNL] Number of legacy pty&#39;s. Overwrites compiled-in default number. quiet [KNL] Disable most log messages r128= [HW,DRM] raid= [HW,RAID] See Documentation/md.txt. ramdisk_blocksize= [RAM] See Documentation/blockdev/ramdisk.txt. ramdisk_size= [RAM] Sizes of RAM disks in kilobytes See Documentation/blockdev/ramdisk.txt. rcu_nocbs= [KNL,BOOT] In kernels built with CONFIG_RCU_NOCB_CPU=y, set the specified list of CPUs to be no-callback CPUs. Invocation of these CPUs&#39; RCU callbacks will be offloaded to &quot;rcuox/N&quot; kthreads created for that purpose, where &quot;x&quot; is &quot;b&quot; for RCU-bh, &quot;p&quot; for RCU-preempt, and &quot;s&quot; for RCU-sched, and &quot;N&quot; is the CPU number. This reduces OS jitter on the offloaded CPUs, which can be useful for HPC and real-time workloads. It can also improve energy efficiency for asymmetric multiprocessors. rcu_nocb_poll [KNL,BOOT] Rather than requiring that offloaded CPUs (specified by rcu_nocbs= above) explicitly awaken the corresponding &quot;rcuoN&quot; kthreads, make these kthreads poll for callbacks. This improves the real-time response for the offloaded CPUs by relieving them of the need to wake up the corresponding kthread, but degrades energy efficiency by requiring that the kthreads periodically wake up to do the polling. rcutree.blimit= [KNL,BOOT] Set maximum number of finished RCU callbacks to process in one batch. rcutree.fanout_leaf= [KNL,BOOT] Increase the number of CPUs assigned to each leaf rcu_node structure. Useful for very large systems. rcutree.jiffies_till_first_fqs= [KNL,BOOT] Set delay from grace-period initialization to first attempt to force quiescent states. Units are jiffies, minimum value is zero, and maximum value is HZ. rcutree.jiffies_till_next_fqs= [KNL,BOOT] Set delay between subsequent attempts to force quiescent states. Units are jiffies, minimum value is one, and maximum value is HZ. rcutree.qhimark= [KNL,BOOT] Set threshold of queued RCU callbacks over which batch limiting is disabled. rcutree.qlowmark= [KNL,BOOT] Set threshold of queued RCU callbacks below which batch limiting is re-enabled. rcutree.rcu_cpu_stall_suppress= [KNL,BOOT] Suppress RCU CPU stall warning messages. rcutree.rcu_cpu_stall_timeout= [KNL,BOOT] Set timeout for RCU CPU stall warning messages. rcutree.rcu_idle_gp_delay= [KNL,BOOT] Set wakeup interval for idle CPUs that have RCU callbacks (RCU_FAST_NO_HZ=y). rcutree.rcu_idle_lazy_gp_delay= [KNL,BOOT] Set wakeup interval for idle CPUs that have only &quot;lazy&quot; RCU callbacks (RCU_FAST_NO_HZ=y). Lazy RCU callbacks are those which RCU can prove do nothing more than free memory. rcutorture.fqs_duration= [KNL,BOOT] Set duration of force_quiescent_state bursts. rcutorture.fqs_holdoff= [KNL,BOOT] Set holdoff time within force_quiescent_state bursts. rcutorture.fqs_stutter= [KNL,BOOT] Set wait time between force_quiescent_state bursts. rcutorture.irqreader= [KNL,BOOT] Test RCU readers from irq handlers. rcutorture.n_barrier_cbs= [KNL,BOOT] Set callbacks/threads for rcu_barrier() testing. rcutorture.nfakewriters= [KNL,BOOT] Set number of concurrent RCU writers. These just stress RCU, they don&#39;t participate in the actual test, hence the &quot;fake&quot;. rcutorture.nreaders= [KNL,BOOT] Set number of RCU readers. rcutorture.onoff_holdoff= [KNL,BOOT] Set time (s) after boot for CPU-hotplug testing. rcutorture.onoff_interval= [KNL,BOOT] Set time (s) between CPU-hotplug operations, or zero to disable CPU-hotplug testing. rcutorture.shuffle_interval= [KNL,BOOT] Set task-shuffle interval (s). Shuffling tasks allows some CPUs to go into dyntick-idle mode during the rcutorture test. rcutorture.shutdown_secs= [KNL,BOOT] Set time (s) after boot system shutdown. This is useful for hands-off automated testing. rcutorture.stall_cpu= [KNL,BOOT] Duration of CPU stall (s) to test RCU CPU stall warnings, zero to disable. rcutorture.stall_cpu_holdoff= [KNL,BOOT] Time to wait (s) after boot before inducing stall. rcutorture.stat_interval= [KNL,BOOT] Time (s) between statistics printk()s. rcutorture.stutter= [KNL,BOOT] Time (s) to stutter testing, for example, specifying five seconds causes the test to run for five seconds, wait for five seconds, and so on. This tests RCU&#39;s ability to transition abruptly to and from idle. rcutorture.test_boost= [KNL,BOOT] Test RCU priority boosting? 0=no, 1=maybe, 2=yes. &quot;Maybe&quot; means test if the RCU implementation under test support RCU priority boosting. rcutorture.test_boost_duration= [KNL,BOOT] Duration (s) of each individual boost test. rcutorture.test_boost_interval= [KNL,BOOT] Interval (s) between each boost test. rcutorture.test_no_idle_hz= [KNL,BOOT] Test RCU&#39;s dyntick-idle handling. See also the rcutorture.shuffle_interval parameter. rcutorture.torture_type= [KNL,BOOT] Specify the RCU implementation to test. rcutorture.verbose= [KNL,BOOT] Enable additional printk() statements. rdinit= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /init from the ramdisk, used for early userspace startup. See initrd. rdt= [HW,X86,RDT] Turn on/off individual RDT features. List is: cmt, mbmtotal, mbmlocal, l3cat, l3cdp, l2cat, l2cdp, mba. E.g. to turn on cmt and turn off mba use: rdt=cmt,!mba reboot= [BUGS=X86-32,BUGS=ARM,BUGS=IA-64] Rebooting mode Format: &lt;reboot_mode&gt;[,&lt;reboot_mode2&gt;[,...]] See arch/*/kernel/reboot.c or arch/*/kernel/process.c relax_domain_level= [KNL, SMP] Set scheduler&#39;s default relax_domain_level. See Documentation/cgroups/cpusets.txt. reserve= [KNL,BUGS] Force the kernel to ignore some iomem area reservetop= [X86-32] Format: nn[KMG] Reserves a hole at the top of the kernel virtual address space. reservelow= [X86] Format: nn[K] Set the amount of memory to reserve for BIOS at the bottom of the address space. reset_devices [KNL] Force drivers to reset the underlying device during initialization. resume= [SWSUSP] Specify the partition device for software suspend Format: &#123;/dev/&lt;dev&gt; | PARTUUID=&lt;uuid&gt; | &lt;int&gt;:&lt;int&gt; | &lt;hex&gt;&#125; resume_offset= [SWSUSP] Specify the offset from the beginning of the partition given by &quot;resume=&quot; at which the swap header is located, in &lt;PAGE_SIZE&gt; units (needed only for swap files). See Documentation/power/swsusp-and-swap-files.txt resumedelay= [HIBERNATION] Delay (in seconds) to pause before attempting to read the resume files resumewait [HIBERNATION] Wait (indefinitely) for resume device to show up. Useful for devices that are detected asynchronously (e.g. USB and MMC devices). hibernate= [HIBERNATION] noresume Don&#39;t check if there&#39;s a hibernation image present during boot. nocompress Don&#39;t compress/decompress hibernation images. no Disable hibernation and resume. retain_initrd [RAM] Keep initrd memory after extraction rhash_entries= [KNL,NET] Set number of hash buckets for route cache ring3mwait=disable [KNL] Disable ring 3 MONITOR/MWAIT feature on supported CPUs. riscom8= [HW,SERIAL] Format: &lt;io_board1&gt;[,&lt;io_board2&gt;[,...&lt;io_boardN&gt;]] ro [KNL] Mount root device read-only on boot root= [KNL] Root filesystem See name_to_dev_t comment in init/do_mounts.c. rootdelay= [KNL] Delay (in seconds) to pause before attempting to mount the root filesystem rootflags= [KNL] Set root filesystem mount option string rootfstype= [KNL] Set root filesystem type rootwait [KNL] Wait (indefinitely) for root device to show up. Useful for devices that are detected asynchronously (e.g. USB and MMC devices). rproc_mem=nn[KMG][@address] [KNL,ARM,CMA] Remoteproc physical memory block. Memory area to be used by remote processor image, managed by CMA. rw [KNL] Mount root device read-write on boot S [KNL] Run init in single mode s390_iommu= [HW,S390] Set s390 IOTLB flushing mode strict With strict flushing every unmap operation will result in an IOTLB flush. Default is lazy flushing before reuse, which is faster. sa1100ir [NET] See drivers/net/irda/sa1100_ir.c. sbni= [NET] Granch SBNI12 leased line adapter sched_debug [KNL] Enables verbose scheduler debug messages. schedstats= [KNL,X86] Enable or disable scheduled statistics. Allowed values are enable and disable. This feature incurs a small amount of overhead in the scheduler but is useful for debugging and performance tuning. skew_tick= [KNL] Offset the periodic timer tick per cpu to mitigate xtime_lock contention on larger systems, and/or RCU lock contention on all systems with CONFIG_MAXSMP set. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 -- disable. (may be 1 via CONFIG_CMDLINE=&quot;skew_tick=1&quot; 1 -- enable. Note: increases power consumption, thus should only be enabled if running jitter sensitive (HPC/RT) workloads. security= [SECURITY] Choose a security module to enable at boot. If this boot parameter is not specified, only the first security module asking for security registration will be loaded. An invalid security module name will be treated as if no module has been chosen. selinux= [SELINUX] Disable or enable SELinux at boot time. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- disable. 1 -- enable. Default value is set via kernel config option. If enabled at boot time, /selinux/disable can be used later to disable prior to initial policy load. apparmor= [APPARMOR] Disable or enable AppArmor at boot time Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/apparmor/Kconfig help text 0 -- disable. 1 -- enable. Default value is set via kernel config option. serialnumber [BUGS=X86-32] shapers= [NET] Maximal number of shapers. show_msr= [x86] show boot-time MSR settings Format: &#123; &lt;integer&gt; &#125; Show boot-time (BIOS-initialized) MSR settings. The parameter means the number of CPUs to show, for example 1 means boot CPU only. simeth= [IA-64] simscsi= slram= [HW,MTD] slab_max_order= [MM, SLAB] Determines the maximum allowed order for slabs. A high setting may cause OOMs due to memory fragmentation. Defaults to 1 for systems with more than 32MB of RAM, 0 otherwise. slub_debug[=options[,slabs]] [MM, SLUB] Enabling slub_debug allows one to determine the culprit if slab objects become corrupted. Enabling slub_debug can create guard zones around objects and may poison objects when not in use. Also tracks the last alloc / free. For more information see Documentation/vm/slub.txt. slub_max_order= [MM, SLUB] Determines the maximum allowed order for slabs. A high setting may cause OOMs due to memory fragmentation. For more information see Documentation/vm/slub.txt. slub_min_objects= [MM, SLUB] The minimum number of objects per slab. SLUB will increase the slab order up to slub_max_order to generate a sufficiently large slab able to contain the number of objects indicated. The higher the number of objects the smaller the overhead of tracking slabs and the less frequently locks need to be acquired. For more information see Documentation/vm/slub.txt. slub_min_order= [MM, SLUB] Determines the minimum page order for slabs. Must be lower than slub_max_order. For more information see Documentation/vm/slub.txt. slub_nomerge [MM, SLUB] Disable merging of slabs with similar size. May be necessary if there is some reason to distinguish allocs to different slabs. Debug options disable merging on their own. For more information see Documentation/vm/slub.txt. smart2= [HW] Format: &lt;io1&gt;[,&lt;io2&gt;[,...,&lt;io8&gt;]] smsc-ircc2.nopnp [HW] Don&#39;t use PNP to discover SMC devices smsc-ircc2.ircc_cfg= [HW] Device configuration I/O port smsc-ircc2.ircc_sir= [HW] SIR base I/O port smsc-ircc2.ircc_fir= [HW] FIR base I/O port smsc-ircc2.ircc_irq= [HW] IRQ line smsc-ircc2.ircc_dma= [HW] DMA channel smsc-ircc2.ircc_transceiver= [HW] Transceiver type: 0: Toshiba Satellite 1800 (GP data pin select) 1: Fast pin select (default) 2: ATC IRMode softlockup_panic= [KNL] Should the soft-lockup detector generate panics. Format: &lt;integer&gt; softlockup_all_cpu_backtrace= [KNL] Should the soft-lockup detector generate backtraces on all cpus. Format: &lt;integer&gt; sonypi.*= [HW] Sony Programmable I/O Control Device driver See Documentation/laptops/sonypi.txt specialix= [HW,SERIAL] Specialix multi-serial port adapter See Documentation/serial/specialix.txt. spectre_v2= [X86] Control mitigation of Spectre variant 2 (indirect branch speculation) vulnerability. on - unconditionally enable off - unconditionally disable auto - kernel detects whether your CPU model is vulnerable Selecting &#39;on&#39; will, and &#39;auto&#39; may, choose a mitigation method at run time according to the CPU, the available microcode, the setting of the CONFIG_RETPOLINE configuration option, and the compiler with which the kernel was built. Specific mitigations can also be selected manually: retpoline - replace indirect branches ibrs - Intel: Indirect Branch Restricted Speculation (kernel) ibrs_always - Intel: Indirect Branch Restricted Speculation (kernel and user space) Not specifying this option is equivalent to spectre_v2=auto. spec_store_bypass_disable= [HW] Control Speculative Store Bypass (SSB) Disable mitigation (Speculative Store Bypass vulnerability) Certain CPUs are vulnerable to an exploit against a a common industry wide performance optimization known as &quot;Speculative Store Bypass&quot; in which recent stores to the same memory location may not be observed by later loads during speculative execution. The idea is that such stores are unlikely and that they can be detected prior to instruction retirement at the end of a particular speculation execution window. In vulnerable processors, the speculatively forwarded store can be used in a cache side channel attack, for example to read memory to which the attacker does not directly have access (e.g. inside sandboxed code). This parameter controls whether the Speculative Store Bypass optimization is used. on - Unconditionally disable Speculative Store Bypass off - Unconditionally enable Speculative Store Bypass auto - Kernel detects whether the CPU model contains an implementation of Speculative Store Bypass and picks the most appropriate mitigation. If the CPU is vulnerable, the default mitigation is architecture and Kconfig dependent. See below. prctl - Control Speculative Store Bypass for a thread via prctl. Speculative Store Bypass is enabled for a process by default. The state of the control is inherited on fork. seccomp - Same as &quot;prctl&quot; above, but all seccomp threads will disable SSB unless they explicitly opt out. Not specifying this option is equivalent to spec_store_bypass_disable=auto. Default mitigations: X86: If CONFIG_SECCOMP=y &quot;seccomp&quot;, otherwise &quot;prctl&quot; spia_io_base= [HW,MTD] spia_fio_base= spia_pedr= spia_peddr= srbds= [X86,INTEL] Control the Special Register Buffer Data Sampling (SRBDS) mitigation. Certain CPUs are vulnerable to an MDS-like exploit which can leak bits from the random number generator. By default, this issue is mitigated by microcode. However, the microcode fix can cause the RDRAND and RDSEED instructions to become much slower. Among other effects, this will result in reduced throughput from /dev/urandom. The microcode mitigation can be disabled with the following option: off: Disable mitigation and remove performance impact to RDRAND and RDSEED stack_guard_gap= [MM] override the default stack gap protection. The value is in page units and it defines how many pages prior to (for stacks growing down) resp. after (for stacks growing up) the main stack are reserved for no other mapping. Default value is 256 pages. stacktrace [FTRACE] Enabled the stack tracer on boot up. stacktrace_filter=[function-list] [FTRACE] Limit the functions that the stack tracer will trace at boot up. function-list is a comma separated list of functions. This list can be changed at run time by the stack_trace_filter file in the debugfs tracing directory. Note, this enables stack tracing and the stacktrace above is not needed. sti= [PARISC,HW] Format: &lt;num&gt; Set the STI (builtin display/keyboard on the HP-PARISC machines) console (graphic card) which should be used as the initial boot-console. See also comment in drivers/video/console/sticore.c. sti_font= [HW] See comment in drivers/video/console/sticore.c. stifb= [HW] Format: bpp:&lt;bpp1&gt;[:&lt;bpp2&gt;[:&lt;bpp3&gt;...]] sunrpc.min_resvport= sunrpc.max_resvport= [NFS,SUNRPC] SunRPC servers often require that client requests originate from a privileged port (i.e. a port in the range 0 &lt; portnr &lt; 1024). An administrator who wishes to reserve some of these ports for other uses may adjust the range that the kernel&#39;s sunrpc client considers to be privileged using these two parameters to set the minimum and maximum port values. sunrpc.svc_rpc_per_connection_limit= [NFS,SUNRPC] Limit the number of requests that the server will process in parallel from a single connection. The default value is 0 (no limit). sunrpc.pool_mode= [NFS] Control how the NFS server code allocates CPUs to service thread pools. Depending on how many NICs you have and where their interrupts are bound, this option will affect which CPUs will do NFS serving. Note: this parameter cannot be changed while the NFS server is running. auto the server chooses an appropriate mode automatically using heuristics global a single global pool contains all CPUs percpu one pool for each CPU pernode one pool for each NUMA node (equivalent to global on non-NUMA machines) sunrpc.tcp_slot_table_entries= sunrpc.udp_slot_table_entries= [NFS,SUNRPC] Sets the upper limit on the number of simultaneous RPC calls that can be sent from the client to a server. Increasing these values may allow you to improve throughput, but will also increase the amount of memory reserved for use by the client. suspend.pm_test_delay= [SUSPEND] Sets the number of seconds to remain in a suspend test mode before resuming the system (see /sys/power/pm_test). Only available when CONFIG_PM_DEBUG is set. Default value is 5. swapaccount[=0|1] [KNL] Enable accounting of swap in memory resource controller if no parameter or 1 is given or disable it if 0 is given (See Documentation/cgroups/memory.txt) swiotlb= [IA-64] Number of I/O TLB slabs switches= [HW,M68k] sysfs.deprecated=0|1 [KNL] Enable/disable old style sysfs layout for old udev on older distributions. When this option is enabled very new udev will not work anymore. When this option is disabled (or CONFIG_SYSFS_DEPRECATED not compiled) in older udev will not work anymore. Default depends on CONFIG_SYSFS_DEPRECATED_V2 set in the kernel configuration. sysrq_always_enabled [KNL] Ignore sysrq setting - this boot parameter will neutralize any effect of /proc/sys/kernel/sysrq. Useful for debugging. tdfx= [HW,DRM] test_suspend= [SUSPEND] Specify &quot;mem&quot; (for Suspend-to-RAM) or &quot;standby&quot; (for standby suspend) as the system sleep state to briefly enter during system startup. The system is woken from this state using a wakeup-capable RTC alarm. thash_entries= [KNL,NET] Set number of hash buckets for TCP connection thermal.act= [HW,ACPI] -1: disable all active trip points in all thermal zones &lt;degrees C&gt;: override all lowest active trip points thermal.crt= [HW,ACPI] -1: disable all critical trip points in all thermal zones &lt;degrees C&gt;: override all critical trip points thermal.nocrt= [HW,ACPI] Set to disable actions on ACPI thermal zone critical and hot trip points. thermal.off= [HW,ACPI] 1: disable ACPI thermal control thermal.psv= [HW,ACPI] -1: disable all passive trip points &lt;degrees C&gt;: override all passive trip points to this value thermal.tzp= [HW,ACPI] Specify global default ACPI thermal zone polling rate &lt;deci-seconds&gt;: poll all this frequency 0: no polling (default) threadirqs [KNL] Force threading of all interrupt handlers except those marked explicitly IRQF_NO_THREAD. tmem [KNL,XEN] Enable the Transcendent memory driver if built-in. tmem.cleancache=0|1 [KNL, XEN] Default is on (1). Disable the usage of the cleancache API to send anonymous pages to the hypervisor. tmem.frontswap=0|1 [KNL, XEN] Default is on (1). Disable the usage of the frontswap API to send swap pages to the hypervisor. If disabled the selfballooning and selfshrinking are force disabled. tmem.selfballooning=0|1 [KNL, XEN] Default is on (1). Disable the driving of swap pages to the hypervisor. tmem.selfshrinking=0|1 [KNL, XEN] Default is on (1). Partial swapoff that immediately transfers pages from Xen hypervisor back to the kernel based on different criteria. topology= [S390] Format: &#123;off | on&#125; Specify if the kernel should make use of the cpu topology information if the hardware supports this. The scheduler will make use of this information and e.g. base its process migration decisions on it. Default is on. topology_updates= [KNL, PPC, NUMA] Format: &#123;off&#125; Specify if the kernel should ignore (off) topology updates sent by the hypervisor to this LPAR. tp720= [HW,PS2] tpm_suspend_pcr=[HW,TPM] Format: integer pcr id Specify that at suspend time, the tpm driver should extend the specified pcr with zeros, as a workaround for some chips which fail to flush the last written pcr on TPM_SaveState. This will guarantee that all the other pcrs are saved. trace_buf_size=nn[KMG] [FTRACE] will set tracing buffer size. trace_event=[event-list] [FTRACE] Set and start specified trace events in order to facilitate early boot debugging. See also Documentation/trace/events.txt trace_options=[option-list] [FTRACE] Enable or disable tracer options at boot. The option-list is a comma delimited list of options that can be enabled or disabled just as if you were to echo the option name into /sys/kernel/debug/tracing/trace_options For example, to enable stacktrace option (to dump the stack trace of each event), add to the command line: trace_options=stacktrace See also Documentation/trace/ftrace.txt &quot;trace options&quot; section. traceoff_on_warning [FTRACE] enable this option to disable tracing when a warning is hit. This turns off &quot;tracing_on&quot;. Tracing can be enabled again by echoing &#39;1&#39; into the &quot;tracing_on&quot; file located in /sys/kernel/debug/tracing/ This option is useful, as it disables the trace before the WARNING dump is called, which prevents the trace to be filled with content caused by the warning output. This option can also be set at run time via the sysctl option: kernel/traceoff_on_warning transparent_hugepage= [KNL] Format: [always|madvise|never] Can be used to control the default behavior of the system with respect to transparent hugepages. See Documentation/vm/transhuge.txt for more details. tsc= Disable clocksource stability checks for TSC. Format: &lt;string&gt; [x86] reliable: mark tsc clocksource as reliable, this disables clocksource verification at runtime, as well as the stability checks done at bootup. Used to enable high-resolution timer mode on older hardware, and in virtualized environment. [x86] noirqtime: Do not use TSC to do irq accounting. Used to run time disable IRQ_TIME_ACCOUNTING on any platforms where RDTSC is slow and this accounting can add overhead. tsx= [X86] Control Transactional Synchronization Extensions (TSX) feature in Intel processors that support TSX control. This parameter controls the TSX feature. The options are: on - Enable TSX on the system. Although there are mitigations for all known security vulnerabilities, TSX has been known to be an accelerator for several previous speculation-related CVEs, and so there may be unknown security risks associated with leaving it enabled. off - Disable TSX on the system. (Note that this option takes effect only on newer CPUs which are not vulnerable to MDS, i.e., have MSR_IA32_ARCH_CAPABILITIES.MDS_NO=1 and which get the new IA32_TSX_CTRL MSR through a microcode update. This new MSR allows for the reliable deactivation of the TSX functionality.) auto - Disable TSX if X86_BUG_TAA is present, otherwise enable TSX on the system. Not specifying this option is equivalent to tsx=off. See Documentation/admin-guide/hw-vuln/tsx_async_abort.rst for more details. tsx_async_abort= [X86,INTEL] Control mitigation for the TSX Async Abort (TAA) vulnerability. Similar to Micro-architectural Data Sampling (MDS) certain CPUs that support Transactional Synchronization Extensions (TSX) are vulnerable to an exploit against CPU internal buffers which can forward information to a disclosure gadget under certain conditions. In vulnerable processors, the speculatively forwarded data can be used in a cache side channel attack, to access data to which the attacker does not have direct access. This parameter controls the TAA mitigation. The options are: full - Enable TAA mitigation on vulnerable CPUs if TSX is enabled. full,nosmt - Enable TAA mitigation and disable SMT on vulnerable CPUs. If TSX is disabled, SMT is not disabled because CPU is not vulnerable to cross-thread TAA attacks. off - Unconditionally disable TAA mitigation On MDS-affected machines, tsx_async_abort=off can be prevented by an active MDS mitigation as both vulnerabilities are mitigated with the same mechanism so in order to disable this mitigation, you need to specify mds=off too. Not specifying this option is equivalent to tsx_async_abort=full. On CPUs which are MDS affected and deploy MDS mitigation, TAA mitigation is not required and doesn&#39;t provide any additional mitigation. For details see: Documentation/admin-guide/hw-vuln/tsx_async_abort.rst turbografx.map[2|3]= [HW,JOY] TurboGraFX parallel port interface Format: &lt;port#&gt;,&lt;js1&gt;,&lt;js2&gt;,&lt;js3&gt;,&lt;js4&gt;,&lt;js5&gt;,&lt;js6&gt;,&lt;js7&gt; See also Documentation/input/joystick-parport.txt udbg-immortal [PPC] When debugging early kernel crashes that happen after console_init() and before a proper console driver takes over, this boot options might help &quot;seeing&quot; what&#39;s going on. uhash_entries= [KNL,NET] Set number of hash buckets for UDP/UDP-Lite connections uhci-hcd.ignore_oc= [USB] Ignore overcurrent events (default N). Some badly-designed motherboards generate lots of bogus events, for ports that aren&#39;t wired to anything. Set this parameter to avoid log spamming. Note that genuine overcurrent events won&#39;t be reported either. unknown_nmi_panic [X86] Cause panic on unknown NMI. usbcore.authorized_default= [USB] Default USB device authorization: (default -1 = authorized except for wireless USB, 0 = not authorized, 1 = authorized) usbcore.autosuspend= [USB] The autosuspend time delay (in seconds) used for newly-detected USB devices (default 2). This is the time required before an idle device will be autosuspended. Devices for which the delay is set to a negative value won&#39;t be autosuspended at all. usbcore.usbfs_snoop= [USB] Set to log all usbfs traffic (default 0 = off). usbcore.usbfs_snoop_max= [USB] Maximum number of bytes to snoop in each URB (default = 65536). usbcore.blinkenlights= [USB] Set to cycle leds on hubs (default 0 = off). usbcore.old_scheme_first= [USB] Start with the old device initialization scheme (default 0 = off). usbcore.usbfs_memory_mb= [USB] Memory limit (in MB) for buffers allocated by usbfs (default = 16, 0 = max = 2047). usbcore.use_both_schemes= [USB] Try the other device initialization scheme if the first one fails (default 1 = enabled). usbcore.initial_descriptor_timeout= [USB] Specifies timeout for the initial 64-byte USB_REQ_GET_DESCRIPTOR request in milliseconds (default 5000 = 5.0 seconds). usbcore.quirks= [USB] A list of quirk entries to augment the built-in usb core quirk list. List entries are separated by commas. Each entry has the form VendorID:ProductID:Flags. The IDs are 4-digit hex numbers and Flags is a set of letters. Each letter will change the built-in quirk; setting it if it is clear and clearing it if it is set. The letters have the following meanings: a = USB_QUIRK_STRING_FETCH_255 (string descriptors must not be fetched using a 255-byte read); b = USB_QUIRK_RESET_RESUME (device can&#39;t resume correctly so reset it instead); c = USB_QUIRK_NO_SET_INTF (device can&#39;t handle Set-Interface requests); d = USB_QUIRK_CONFIG_INTF_STRINGS (device can&#39;t handle its Configuration or Interface strings); e = USB_QUIRK_RESET (device can&#39;t be reset (e.g morph devices), don&#39;t use reset); f = USB_QUIRK_HONOR_BNUMINTERFACES (device has more interface descriptions than the bNumInterfaces count, and can&#39;t handle talking to these interfaces); g = USB_QUIRK_DELAY_INIT (device needs a pause during initialization, after we read the device descriptor); h = USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL (For high speed and super speed interrupt endpoints, the USB 2.0 and USB 3.0 spec require the interval in microframes (1 microframe = 125 microseconds) to be calculated as interval = 2 ^ (bInterval-1). Devices with this quirk report their bInterval as the result of this calculation instead of the exponent variable used in the calculation); i = USB_QUIRK_DEVICE_QUALIFIER (device can&#39;t handle device_qualifier descriptor requests); j = USB_QUIRK_IGNORE_REMOTE_WAKEUP (device generates spurious wakeup, ignore remote wakeup capability); k = USB_QUIRK_NO_LPM (device can&#39;t handle Link Power Management); l = USB_QUIRK_LINEAR_FRAME_INTR_BINTERVAL (Device reports its bInterval as linear frames instead of the USB 2.0 calculation); m = USB_QUIRK_DISCONNECT_SUSPEND (Device needs to be disconnected before suspend to prevent spurious wakeup); n = USB_QUIRK_DELAY_CTRL_MSG (Device needs a pause after every control message); Example: quirks=0781:5580:bk,0a5c:5834:gij usbhid.mousepoll= [USBHID] The interval which mice are to be polled at. usb-storage.delay_use= [UMS] The delay in seconds before a new device is scanned for Logical Units (default 5). usb-storage.quirks= [UMS] A list of quirks entries to supplement or override the built-in unusual_devs list. List entries are separated by commas. Each entry has the form VID:PID:Flags where VID and PID are Vendor and Product ID values (4-digit hex numbers) and Flags is a set of characters, each corresponding to a common usb-storage quirk flag as follows: a = SANE_SENSE (collect more than 18 bytes of sense data); b = BAD_SENSE (don&#39;t collect more than 18 bytes of sense data); c = FIX_CAPACITY (decrease the reported device capacity by one sector); d = NO_READ_DISC_INFO (don&#39;t use READ_DISC_INFO command); e = NO_READ_CAPACITY_16 (don&#39;t use READ_CAPACITY_16 command); f = NO_REPORT_OPCODES (don&#39;t use report opcodes command, uas only); g = MAX_SECTORS_240 (don&#39;t transfer more than 240 sectors at a time, uas only); h = CAPACITY_HEURISTICS (decrease the reported device capacity by one sector if the number is odd); i = IGNORE_DEVICE (don&#39;t bind to this device); j = NO_REPORT_LUNS (don&#39;t use report luns command, uas only); l = NOT_LOCKABLE (don&#39;t try to lock and unlock ejectable media); m = MAX_SECTORS_64 (don&#39;t transfer more than 64 sectors = 32 KB at a time); n = INITIAL_READ10 (force a retry of the initial READ(10) command); o = CAPACITY_OK (accept the capacity reported by the device); p = WRITE_CACHE (the device cache is ON by default); r = IGNORE_RESIDUE (the device reports bogus residue values); s = SINGLE_LUN (the device has only one Logical Unit); t = NO_ATA_1X (don&#39;t allow ATA(12) and ATA(16) commands, uas only); u = IGNORE_UAS (don&#39;t bind to the uas driver); w = NO_WP_DETECT (don&#39;t test whether the medium is write-protected). y = ALWAYS_SYNC (issue a SYNCHRONIZE_CACHE even if the device claims no cache) Example: quirks=0419:aaf5:rl,0421:0433:rc user_debug= [KNL,ARM] Format: &lt;int&gt; See arch/arm/Kconfig.debug help text. 1 - undefined instruction events 2 - system calls 4 - invalid data aborts 8 - SIGSEGV faults 16 - SIGBUS faults Example: user_debug=31 userpte= [X86] Flags controlling user PTE allocations. nohigh = do not allocate PTE pages in HIGHMEM regardless of setting of CONFIG_HIGHPTE. vdso= [X86,SH] vdso=2: enable compat VDSO (default with COMPAT_VDSO) vdso=1: enable VDSO (default) vdso=0: disable VDSO mapping vdso32= [X86] vdso32=2: enable compat VDSO (default with COMPAT_VDSO) vdso32=1: enable 32-bit VDSO (default) vdso32=0: disable 32-bit VDSO mapping vector= [IA-64,SMP] vector=percpu: enable percpu vector domain video= [FB] Frame buffer configuration See Documentation/fb/modedb.txt. video.brightness_switch_enabled= [0,1] If set to 1, on receiving an ACPI notify event generated by hotkey, video driver will adjust brightness level and then send out the event to user space through the allocated input device; If set to 0, video driver will only send out the event without touching backlight brightness level. default: 1 virtio_mmio.device= [VMMIO] Memory mapped virtio (platform) device. &lt;size&gt;@&lt;baseaddr&gt;:&lt;irq&gt;[:&lt;id&gt;] where: &lt;size&gt; := size (can use standard suffixes like K, M and G) &lt;baseaddr&gt; := physical base address &lt;irq&gt; := interrupt number (as passed to request_irq()) &lt;id&gt; := (optional) platform device id example: virtio_mmio.device=1K@0x100b0000:48:7 Can be used multiple times for multiple devices. vga= [BOOT,X86-32] Select a particular video mode See Documentation/x86/boot.txt and Documentation/svga.txt. Use vga=ask for menu. This is actually a boot loader parameter; the value is passed to the kernel using a special protocol. vmalloc=nn[KMG] [KNL,BOOT] Forces the vmalloc area to have an exact size of &lt;nn&gt;. This can be used to increase the minimum size (128MB on x86). It can also be used to decrease the size and leave more room for directly mapped kernel RAM. vmhalt= [KNL,S390] Perform z/VM CP command after system halt. Format: &lt;command&gt; vmpanic= [KNL,S390] Perform z/VM CP command after kernel panic. Format: &lt;command&gt; vmpoff= [KNL,S390] Perform z/VM CP command after power off. Format: &lt;command&gt; vsyscall= [X86-64] Controls the behavior of vsyscalls (i.e. calls to fixed addresses of 0xffffffffff600x00 from legacy code). Most statically-linked binaries and older versions of glibc use these calls. Because these functions are at fixed addresses, they make nice targets for exploits that can control RIP. emulate [default] Vsyscalls turn into traps and are emulated reasonably safely. native Vsyscalls are native syscall instructions. This is a little bit faster than trapping and makes a few dynamic recompilers work better than they would in emulation mode. It also makes exploits much easier to write. none Vsyscalls don&#39;t work at all. This makes them quite hard to use for exploits but might break your system. vt.cur_default= [VT] Default cursor shape. Format: 0xCCBBAA, where AA, BB, and CC are the same as the parameters of the &lt;Esc&gt;[?A;B;Cc escape sequence; see VGA-softcursor.txt. Default: 2 = underline. vt.default_blu= [VT] Format: &lt;blue0&gt;,&lt;blue1&gt;,&lt;blue2&gt;,...,&lt;blue15&gt; Change the default blue palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_grn= [VT] Format: &lt;green0&gt;,&lt;green1&gt;,&lt;green2&gt;,...,&lt;green15&gt; Change the default green palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_red= [VT] Format: &lt;red0&gt;,&lt;red1&gt;,&lt;red2&gt;,...,&lt;red15&gt; Change the default red palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_utf8= [VT] Format=&lt;0|1&gt; Set system-wide default UTF-8 mode for all tty&#39;s. Default is 1, i.e. UTF-8 mode is enabled for all newly opened terminals. vt.global_cursor_default= [VT] Format=&lt;-1|0|1&gt; Set system-wide default for whether a cursor is shown on new VTs. Default is -1, i.e. cursors will be created by default unless overridden by individual drivers. 0 will hide cursors, 1 will display them. watchdog timers [HW,WDT] For information on watchdog timers, see Documentation/watchdog/watchdog-parameters.txt or other driver-specific files in the Documentation/watchdog/ directory. watchdog_thresh= [KNL] Set the hard lockup detector stall duration threshold in seconds. The soft lockup detector threshold is set to twice the value. A value of 0 disables both lockup detectors. Default is 10 seconds. workqueue.watchdog_thresh= If CONFIG_WQ_WATCHDOG is configured, workqueue can warn stall conditions and dump internal state to help debugging. 0 disables workqueue stall detection; otherwise, it&#39;s the stall threshold duration in seconds. The default value is 30 and it can be updated at runtime by writing to the corresponding sysfs file. workqueue.disable_numa By default, all work items queued to unbound workqueues are affine to the NUMA nodes they&#39;re issued on, which results in better behavior in general. If NUMA affinity needs to be disabled for whatever reason, this option can be used. Note that this also can be controlled per-workqueue for workqueues visible under /sys/bus/workqueue/. workqueue.power_efficient Per-cpu workqueues are generally preferred because they show better performance thanks to cache locality; unfortunately, per-cpu workqueues tend to be more power hungry than unbound workqueues. Enabling this makes the per-cpu workqueues which were observed to contribute significantly to power consumption unbound, leading to measurably lower power usage at the cost of small performance overhead. The default value of this parameter is determined by the config option CONFIG_WQ_POWER_EFFICIENT_DEFAULT. x2apic_phys [X86-64,APIC] Use x2apic physical mode instead of default x2apic cluster mode on platforms supporting x2apic. x86_mrst_timer= [X86-32,APBT] Choose timer option for x86 Moorestown MID platform. Two valid options are apbt timer only and lapic timer plus one apbt timer for broadcast timer. x86_mrst_timer=apbt_only | lapic_and_apbt xen_emul_unplug= [HW,X86,XEN] Unplug Xen emulated devices Format: [unplug0,][unplug1] ide-disks -- unplug primary master IDE devices aux-ide-disks -- unplug non-primary-master IDE devices nics -- unplug network devices all -- unplug all emulated devices (NICs and IDE disks) unnecessary -- unplugging emulated devices is unnecessary even if the host did not respond to the unplug protocol never -- do not unplug even if version check succeeds xirc2ps_cs= [NET,PCMCIA] Format: &lt;irq&gt;,&lt;irq_mask&gt;,&lt;io&gt;,&lt;full_duplex&gt;,&lt;do_sound&gt;,&lt;lockup_hack&gt;[,&lt;irq2&gt;[,&lt;irq3&gt;[,&lt;irq4&gt;]]] TODO: Add more DRM drivers.","categories":[{"name":"内核文档","slug":"内核文档","permalink":"http://www.oostech.com/categories/%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/"}],"tags":[]},{"title":"RHEL6 内核参数 Kernel-2.6.32-754.35.1.el6_kernel-parameters","slug":"Kernel-2.6.32-754.35.1.el6_kernel-parameters","date":"2021-03-06T16:00:00.000Z","updated":"2021-03-06T16:00:00.000Z","comments":false,"path":"2021/03/07/Kernel-2.6.32-754.35.1.el6_kernel-parameters/","link":"","permalink":"http://www.oostech.com/2021/03/07/Kernel-2.6.32-754.35.1.el6_kernel-parameters/","excerpt":"","text":"Kernel Parameters ~~~~~~~~~~~~~~~~~ The following is a consolidated list of the kernel parameters as implemented(mostly) by the __setup() macro and sorted into English Dictionary order(defined as ignoring all punctuation and sorting digits before letters in acase insensitive manner), and with descriptions where known. Module parameters for loadable modules are specified only as theparameter name with optional ‘=’ and value as appropriate, such as: modprobe usbcore blinkenlights=1 Module parameters for modules that are built into the kernel imageare specified on the kernel command line with the module name plus‘.’ plus parameter name, with ‘=’ and value if appropriate, such as: usbcore.blinkenlights=1 Hyphens (dashes) and underscores are equivalent in parameter names, so log_buf_len=1M print-fatal-signals=1can also be entered as log-buf-len=1M print_fatal_signals=1 This document may not be entirely up to date and comprehensive. The command“modinfo -p ${modulename}” shows a current list of all parameters of a loadablemodule. Loadable modules, after being loaded into the running kernel, alsoreveal their parameters in /sys/module/${modulename}/parameters/. Some of theseparameters may be changed at runtime by the command“echo -n ${value} &gt; /sys/module/${modulename}/parameters/${parm}”. The parameters listed below are only valid if certain kernel build options wereenabled and if respective hardware is present. The text in square brackets atthe beginning of each description states the restrictions within which aparameter is applicable: ACPI ACPI support is enabled. AGP AGP (Accelerated Graphics Port) is enabled. ALSA ALSA sound support is enabled. APIC APIC support is enabled. APM Advanced Power Management support is enabled. AVR32 AVR32 architecture is enabled. AX25 Appropriate AX.25 support is enabled. BLACKFIN Blackfin architecture is enabled. EDD BIOS Enhanced Disk Drive Services (EDD) is enabled EFI EFI Partitioning (GPT) is enabled EIDE EIDE/ATAPI support is enabled. DRM Direct Rendering Management support is enabled. DYNAMIC_DEBUG Build in debug messages and enable them at runtime FB The frame buffer device is enabled. GCOV GCOV profiling is enabled. HW Appropriate hardware is enabled. IA-64 IA-64 architecture is enabled. IMA Integrity measurement architecture is enabled. IOSCHED More than one I/O scheduler is enabled. IP_PNP IP DHCP, BOOTP, or RARP is enabled. ISAPNP ISA PnP code is enabled. ISDN Appropriate ISDN support is enabled. JOY Appropriate joystick support is enabled. KVM Kernel Virtual Machine support is enabled. LIBATA Libata driver is enabled LP Printer support is enabled. LOOP Loopback device support is enabled. M68k M68k architecture is enabled. These options have more detailed description inside of Documentation/m68k/kernel-options.txt. MCA MCA bus support is enabled. MDA MDA console support is enabled. MOUSE Appropriate mouse support is enabled. MSI Message Signaled Interrupts (PCI). MTD MTD (Memory Technology Device) support is enabled. NET Appropriate network support is enabled. NUMA NUMA support is enabled. NFS Appropriate NFS support is enabled. OSS OSS sound support is enabled. PV_OPS A paravirtualized kernel is enabled. PARIDE The ParIDE (parallel port IDE) subsystem is enabled. PARISC The PA-RISC architecture is enabled. PCI PCI bus support is enabled. PCIE PCI Express support is enabled. PCMCIA The PCMCIA subsystem is enabled. PNP Plug &amp; Play support is enabled. PPC PowerPC architecture is enabled. PPT Parallel port support is enabled. PS2 Appropriate PS/2 support is enabled. RAM RAM disk support is enabled. ROOTPLUG The example Root Plug LSM is enabled. S390 S390 architecture is enabled. SCSI Appropriate SCSI support is enabled. A lot of drivers has their options described inside of Documentation/scsi/. SECURITY Different security models are enabled. SELINUX SELinux support is enabled. SERIAL Serial support is enabled. SH SuperH architecture is enabled. SMP The kernel is an SMP kernel. SPARC Sparc architecture is enabled. SWSUSP Software suspend (hibernation) is enabled. SUSPEND System suspend states are enabled. FTRACE Function tracing enabled. TPM TPM drivers are enabled. TS Appropriate touchscreen support is enabled. UMS USB Mass Storage support is enabled. USB USB support is enabled. USBHID USB Human Interface Device support is enabled. V4L Video For Linux support is enabled. VGA The VGA console has been enabled. VT Virtual terminal support is enabled. WDT Watchdog support is enabled. XT IBM PC/XT MFM hard disk support is enabled. X86-32 X86-32, aka i386 architecture is enabled. X86-64 X86-64 architecture is enabled. More X86-64 boot options can be found in Documentation/x86/x86_64/boot-options.txt . X86 Either 32bit or 64bit x86 (same as X86-32+X86-64) XEN Xen support is enabled In addition, the following text indicates that the option: BUGS= Relates to possible processor bugs on the said processor. KNL Is a kernel start-up parameter. BOOT Is a boot loader parameter. Parameters denoted with BOOT are actually interpreted by the bootloader, and have no meaning to the kernel directly.Do not modify the syntax of boot loader parameters without extremeneed or coordination with &lt;Documentation/x86/boot.txt&gt;. There are also arch-specific kernel-parameters not documented here.See for example &lt;Documentation/x86/x86_64/boot-options.txt&gt;. Note that ALL kernel parameters listed below are CASE SENSITIVE, and thata trailing = on the name of any parameter states that that parameter willbe entered as an environment variable, whereas its absence indicates thatit will appear as a kernel argument readable via /proc/cmdline by programsrunning once the system is up. The number of kernel parameters is not limited, but the length of thecomplete command line (parameters including spaces etc.) is limited toa fixed number of characters. This limit depends on the architectureand is between 256 and 4096 characters. It is defined in the file./include/asm/setup.h as COMMAND_LINE_SIZE. acpi= [HW,ACPI,X86] Advanced Configuration and Power Interface Format: &#123; force | off | ht | strict | noirq | rsdt &#125; force -- enable ACPI if default was off off -- disable ACPI if default was on noirq -- do not use ACPI for IRQ routing ht -- run only enough ACPI to enable Hyper Threading strict -- Be less tolerant of platforms that are not strictly ACPI specification compliant. rsdt -- prefer RSDT over (default) XSDT See also Documentation/power/pm.txt, pci=noacpi acpi_rsdp= [ACPI,EFI,KEXEC] Pass the RSDP address to the kernel, mostly used on machines running EFI runtime service to boot the second kernel for kdump. acpi_apic_instance= [ACPI, IOAPIC] Format: &lt;int&gt; 2: use 2nd APIC table, if available 1,0: use 1st APIC table default: 0 acpi_backlight= [HW,ACPI] acpi_backlight=vendor acpi_backlight=video If set to vendor, prefer vendor specific driver (e.g. thinkpad_acpi, sony_acpi, etc.) instead of the ACPI video.ko driver. acpi.debug_layer= [HW,ACPI,ACPI_DEBUG] acpi.debug_level= [HW,ACPI,ACPI_DEBUG] Format: &lt;int&gt; CONFIG_ACPI_DEBUG must be enabled to produce any ACPI debug output. Bits in debug_layer correspond to a _COMPONENT in an ACPI source file, e.g., #define _COMPONENT ACPI_PCI_COMPONENT Bits in debug_level correspond to a level in ACPI_DEBUG_PRINT statements, e.g., ACPI_DEBUG_PRINT((ACPI_DB_INFO, ... The debug_level mask defaults to &quot;info&quot;. See Documentation/acpi/debug.txt for more information about debug layers and levels. Enable processor driver info messages: acpi.debug_layer=0x20000000 Enable PCI/PCI interrupt routing info messages: acpi.debug_layer=0x400000 Enable AML &quot;Debug&quot; output, i.e., stores to the Debug object while interpreting AML: acpi.debug_layer=0xffffffff acpi.debug_level=0x2 Enable all messages related to ACPI hardware: acpi.debug_layer=0x2 acpi.debug_level=0xffffffff Some values produce so much output that the system is unusable. The &quot;log_buf_len&quot; parameter may be useful if you need to capture more output. acpi_display_output= [HW,ACPI] acpi_display_output=vendor acpi_display_output=video See above. acpi_irq_balance [HW,ACPI] ACPI will balance active IRQs default in APIC mode acpi_irq_nobalance [HW,ACPI] ACPI will not move active IRQs (default) default in PIC mode acpi_irq_isa= [HW,ACPI] If irq_balance, mark listed IRQs used by ISA Format: &lt;irq&gt;,&lt;irq&gt;... acpi_irq_pci= [HW,ACPI] If irq_balance, clear listed IRQs for use by PCI Format: &lt;irq&gt;,&lt;irq&gt;... acpi_no_auto_ssdt [HW,ACPI] Disable automatic loading of SSDT acpi_os_name= [HW,ACPI] Tell ACPI BIOS the name of the OS Format: To spoof as Windows 98: =&quot;Microsoft Windows&quot; acpi_osi= [HW,ACPI] Modify list of supported OS interface strings acpi_osi=&quot;string1&quot; # add string1 -- only one string acpi_osi=&quot;!string2&quot; # remove built-in string2 acpi_osi= # disable all strings acpi_pm_good [X86] Override the pmtimer bug detection: force the kernel to assume that this machine&#39;s pmtimer latches its value and always returns good values. acpi_sci= [HW,ACPI] ACPI System Control Interrupt trigger mode Format: &#123; level | edge | high | low &#125; acpi_serialize [HW,ACPI] force serialization of AML methods acpi_skip_timer_override [HW,ACPI] Recognize and ignore IRQ0/pin2 Interrupt Override. For broken nForce2 BIOS resulting in XT-PIC timer. acpi_sleep= [HW,ACPI] Sleep options Format: &#123; s3_bios, s3_mode, s3_beep, s4_nohwsig, old_ordering, s4_nonvs &#125; See Documentation/power/video.txt for information on s3_bios and s3_mode. s3_beep is for debugging; it makes the PC&#39;s speaker beep as soon as the kernel&#39;s real-mode entry point is called. s4_nohwsig prevents ACPI hardware signature from being used during resume from hibernation. old_ordering causes the ACPI 1.0 ordering of the _PTS control method, with respect to putting devices into low power states, to be enforced (the ACPI 2.0 ordering of _PTS is used by default). s4_nonvs prevents the kernel from saving/restoring the ACPI NVS memory during hibernation. acpi_use_timer_override [HW,ACPI] Use timer override. For some broken Nvidia NF5 boards that require a timer override, but don&#39;t have HPET acpi_enforce_resources= [ACPI] &#123; strict | lax | no &#125; Check for resource conflicts between native drivers and ACPI OperationRegions (SystemIO and SystemMemory only). IO ports and memory declared in ACPI might be used by the ACPI subsystem in arbitrary AML code and can interfere with legacy drivers. strict (default): access to resources claimed by ACPI is denied; legacy drivers trying to access reserved resources will fail to bind to device using them. lax: access to resources claimed by ACPI is allowed; legacy drivers trying to access reserved resources will bind successfully but a warning message is logged. no: ACPI OperationRegions are not marked as reserved, no further checks are performed. ad1848= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;type&gt; acpi_no_memhotplug [ACPI] Disable memory hotplug. Useful for kdump kernels. add_efi_memmap [EFI; X86] Include EFI memory map in kernel&#39;s map of available physical RAM. advansys= [HW,SCSI] See header of drivers/scsi/advansys.c. advwdt= [HW,WDT] Advantech WDT Format: &lt;iostart&gt;,&lt;iostop&gt; aedsp16= [HW,OSS] Audio Excel DSP 16 Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;mss_io&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; See also header of sound/oss/aedsp16.c. agp= [AGP] &#123; off | try_unsupported &#125; off: disable AGP support try_unsupported: try to drive unsupported chipsets (may crash computer or cause data corruption) aha152x= [HW,SCSI] See Documentation/scsi/aha152x.txt. aha1542= [HW,SCSI] Format: &lt;portbase&gt;[,&lt;buson&gt;,&lt;busoff&gt;[,&lt;dmaspeed&gt;]] aic7xxx= [HW,SCSI] See Documentation/scsi/aic7xxx.txt. aic79xx= [HW,SCSI] See Documentation/scsi/aic79xx.txt. align_va_addr= [X86-64] Align virtual addresses by clearing slice [14:12] when allocating a VMA at process creation time. This option gives you up to 3% performance improvement on AMD F15h machines (where it is enabled by default) for a CPU-intensive style benchmark, and it can vary highly in a microbenchmark depending on workload and compiler. 32: only for 32-bit processes 64: only for 64-bit processes on: enable for both 32- and 64-bit processes off: disable for both 32- and 64-bit processes amd_iommu= [HW,X86-84] Pass parameters to the AMD IOMMU driver in the system. Format: &lt;a&gt;,&lt;b&gt;,... Possible values are: on - enable AMD IOMMU (disabled by default) isolate - enable device isolation (each device, as far as possible, will get its own protection domain). This parameter also forces the AMD IOMMU driver out of passthrough mode. share - put every device behind one IOMMU into the same protection domain. This parameter also forces the AMD IOMMU driver to not use passthrough mode. fullflush - enable flushing of IO/TLB entries when they are unmapped. Otherwise they are flushed before they will be reused, which is a lot faster. amijoy.map= [HW,JOY] Amiga joystick support Map of devices attached to JOY0DAT and JOY1DAT Format: &lt;a&gt;,&lt;b&gt; See also Documentation/kernel/input/joystick.txt analog.map= [HW,JOY] Analog joystick and gamepad support Specifies type or capabilities of an analog joystick connected to one of 16 gameports Format: &lt;type1&gt;,&lt;type2&gt;,..&lt;type16&gt; apc= [HW,SPARC] Power management functions (SPARCstation-4/5 + deriv.) Format: noidle Disable APC CPU standby support. SPARCstation-Fox does not play well with APC CPU idle - disable it if you have APC and your system crashes randomly. apic= [APIC,X86-32] Advanced Programmable Interrupt Controller Change the output verbosity whilst booting Format: &#123; quiet (default) | verbose | debug &#125; Change the amount of debugging information output when initialising the APIC and IO-APIC components. apm= [APM] Advanced Power Management See header of arch/x86/kernel/apm_32.c. arcrimi= [HW,NET] ARCnet - &quot;RIM I&quot; (entirely mem-mapped) cards Format: &lt;io&gt;,&lt;irq&gt;,&lt;nodeID&gt; ataflop= [HW,M68k] atarimouse= [HW,MOUSE] Atari Mouse atascsi= [HW,SCSI] Atari SCSI atkbd.extra= [HW] Enable extra LEDs and keys on IBM RapidAccess, EzKey and similar keyboards atkbd.reset= [HW] Reset keyboard during initialization atkbd.set= [HW] Select keyboard code set Format: &lt;int&gt; (2 = AT (default), 3 = PS/2) atkbd.scroll= [HW] Enable scroll wheel on MS Office and similar keyboards atkbd.softraw= [HW] Choose between synthetic and real raw mode Format: &lt;bool&gt; (0 = real, 1 = synthetic (default)) atkbd.softrepeat= [HW] Use software keyboard repeat autotest [IA64] baycom_epp= [HW,AX25] Format: &lt;io&gt;,&lt;mode&gt; baycom_par= [HW,AX25] BayCom Parallel Port AX.25 Modem Format: &lt;io&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_par.c. baycom_ser_fdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Full Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt;[,&lt;baud&gt;] See header of drivers/net/hamradio/baycom_ser_fdx.c. baycom_ser_hdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Half Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_ser_hdx.c. boot_delay= Milliseconds to delay each printk during boot. Values larger than 10 seconds (10000) are changed to no delay (0). Format: integer bootmem_debug [KNL] Enable bootmem allocator debug messages. bttv.card= [HW,V4L] bttv (bt848 + bt878 based grabber cards) bttv.radio= Most important insmod options are available as kernel args too. bttv.pll= See Documentation/video4linux/bttv/Insmod-options bttv.tuner= and Documentation/video4linux/bttv/CARDLIST BusLogic= [HW,SCSI] See drivers/scsi/BusLogic.c, comment before function BusLogic_ParseDriverOptions(). c101= [NET] Moxa C101 synchronous serial card cachesize= [BUGS=X86-32] Override level 2 CPU cache size detection. Sometimes CPU hardware bugs make them report the cache size incorrectly. The kernel will attempt work arounds to fix known problems, but for some CPUs it is not possible to determine what the correct size should be. This option provides an override for these situations. capability.disable= [SECURITY] Disable capabilities. This would normally be used only if an alternative security model is to be configured. Potentially dangerous and should only be used if you are entirely sure of the consequences. ccw_timeout_log [S390] See Documentation/s390/CommonIO for details. cgroup_disable= [KNL] Disable a particular controller Format: &#123;name of the controller(s) to disable&#125; &#123;Currently supported controllers - &quot;memory&quot;&#125; checkreqprot [SELINUX] Set initial checkreqprot flag value. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- check protection applied by kernel (includes any implied execute protection). 1 -- check protection requested by application. Default value is set via a kernel config option. Value can be changed at runtime via /selinux/checkreqprot. cio_ignore= [S390] See Documentation/s390/CommonIO for details. clock= [BUGS=X86-32, HW] gettimeofday clocksource override. [Deprecated] Forces specified clocksource (if available) to be used when calculating gettimeofday(). If specified clocksource is not available, it defaults to PIT. Format: &#123; pit | tsc | cyclone | pmtmr &#125; clocksource= Override the default clocksource Format: &lt;string&gt; Override the default clocksource and use the clocksource with the name specified. Some clocksource names to choose from, depending on the platform: [all] jiffies (this is the base, fallback clocksource) [ACPI] acpi_pm [ARM] imx_timer1,OSTS,netx_timer,mpu_timer2, pxa_timer,timer3,32k_counter,timer0_1 [AVR32] avr32 [X86-32] pit,hpet,tsc,vmi-timer; scx200_hrt on Geode; cyclone on IBM x440 [MIPS] MIPS [PARISC] cr16 [S390] tod [SH] SuperH [SPARC64] tick [X86-64] hpet,tsc clocksource_failover [GENERIC_TIME] Switch the clocksource if the current clocksource is found to be unstable. clearcpuid=BITNUM [X86] Disable CPUID feature X for the kernel. See arch/x86/include/asm/cpufeature.h for the valid bit numbers. Note the Linux specific bits are not necessarily stable over kernel options, but the vendor specific ones should be. Also note that user programs calling CPUID directly or using the feature without checking anything will still see it. This just prevents it from being used by the kernel or shown in /proc/cpuinfo. Also note the kernel might malfunction if you disable some critical bits. cmo_free_hint= [PPC] Format: &#123; yes | no &#125; Specify whether pages are marked as being inactive when they are freed. This is used in CMO environments to determine OS memory pressure for page stealing by a hypervisor. Default: yes code_bytes [X86] How many bytes of object code to print in an oops report. Range: 0 - 8192 Default: 64 com20020= [HW,NET] ARCnet - COM20020 chipset Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;nodeID&gt;[,&lt;backplane&gt;[,&lt;ckp&gt;[,&lt;timeout&gt;]]]]] com90io= [HW,NET] ARCnet - COM90xx chipset (IO-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;] com90xx= [HW,NET] ARCnet - COM90xx chipset (memory-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;memstart&gt;]] condev= [HW,S390] console device conmode= console= [KNL] Output console device and options. tty&lt;n&gt; Use the virtual console device &lt;n&gt;. ttyS&lt;n&gt;[,options] ttyUSB0[,options] Use the specified serial port. The options are of the form &quot;bbbbpnf&quot;, where &quot;bbbb&quot; is the baud rate, &quot;p&quot; is parity (&quot;n&quot;, &quot;o&quot;, or &quot;e&quot;), &quot;n&quot; is number of bits, and &quot;f&quot; is flow control (&quot;r&quot; for RTS or omit it). Default is &quot;9600n8&quot;. See Documentation/serial-console.txt for more information. See Documentation/networking/netconsole.txt for an alternative. uart[8250],io,&lt;addr&gt;[,options] uart[8250],mmio,&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address, switching to the matching ttyS device later. The options are the same as for ttyS, above. If the device connected to the port is not a TTY but a braille device, prepend &quot;brl,&quot; before the device type, for instance console=brl,ttyS0 For now, only VisioBraille is supported. consoleblank= [KNL] The console blank (screen saver) timeout in seconds. Defaults to 10*60 = 10mins. A value of 0 disables the blank timer. coredump_filter= [KNL] Change the default value for /proc/&lt;pid&gt;/coredump_filter. See also Documentation/filesystems/proc.txt. cpcihp_generic= [HW,PCI] Generic port I/O CompactPCI driver Format: &lt;first_slot&gt;,&lt;last_slot&gt;,&lt;port&gt;,&lt;enum_bit&gt;[,&lt;debug&gt;] crashkernel=nn[KMG]@ss[KMG] [KNL] Reserve a chunk of physical memory to hold a kernel to switch to with kexec on panic. crashkernel=range1:size1[,range2:size2,...][@offset] [KNL] Same as above, but depends on the memory in the running system. The syntax of range is start-[end] where start and end are both a memory unit (amount[KMG]). See also Documentation/kdump/kdump.txt for a example. cs89x0_dma= [HW,NET] Format: &lt;dma&gt; cs89x0_media= [HW,NET] Format: &#123; rj45 | aui | bnc &#125; dasd= [HW,NET] See header of drivers/s390/block/dasd_devmap.c. db9.dev[2|3]= [HW,JOY] Multisystem joystick support via parallel port (one device per port) Format: &lt;port#&gt;,&lt;type&gt; See also Documentation/input/joystick-parport.txt ddebug_query= [KNL,DYNAMIC_DEBUG] Enable debug messages at early boot time. See Documentation/dynamic-debug-howto.txt for details. Deprecated, see dyndbg. debug [KNL] Enable kernel debugging (events log level). debug_locks_verbose= [KNL] verbose self-tests Format=&lt;0|1&gt; Print debugging info while doing the locking API self-tests. We default to 0 (no extra messages), setting it to 1 will print _a lot_ more information - normally only useful to kernel developers. debug_objects [KNL] Enable object debugging no_debug_objects [KNL] Disable object debugging debugpat [X86] Enable PAT debugging decnet.addr= [HW,NET] Format: &lt;area&gt;[,&lt;node&gt;] See also Documentation/networking/decnet.txt. default_hugepagesz= [same as hugepagesz=] The size of the default HugeTLB page size. This is the size represented by the legacy /proc/ hugepages APIs, used for SHM, and default size when mounting hugetlbfs filesystems. Defaults to the default architecture&#39;s huge page size if not specified. dhash_entries= [KNL] Set number of hash buckets for dentry cache. digi= [HW,SERIAL] IO parameters + enable/disable command. digiepca= [HW,SERIAL] See drivers/char/README.epca and Documentation/serial/digiepca.txt. disable_cpu_apicid= [X86,APIC,SMP] Format: &lt;int&gt; The number of initial APIC ID for the corresponding CPU to be disabled at boot, mostly used for the kdump 2nd kernel to disable BSP to wake up multiple CPUs without causing system reset or hang due to sending INIT from AP to BSP. disable_ddw [PPC] Disable Dynamic DMA Window support. Use this if to workaround buggy firmware. disable_mtrr_cleanup [X86] The kernel tries to adjust MTRR layout from continuous to discrete, to make X server driver able to add WB entry later. This parameter disables that. disable_mtrr_trim [X86, Intel and AMD only] By default the kernel will trim any uncacheable memory out of your available memory pool based on MTRR settings. This parameter disables that behavior, possibly causing your machine to run very slowly. disable_timer_pin_1 [X86] Disable PIN 1 of APIC timer Can be useful to work around chipset bugs. dmasound= [HW,OSS] Sound subsystem buffers dma_debug=off If the kernel is compiled with DMA_API_DEBUG support, this option disables the debugging code at boot. dma_debug_entries=&lt;number&gt; This option allows to tune the number of preallocated entries for DMA-API debugging code. One entry is required per DMA-API allocation. Use this if the DMA-API debugging code disables itself because the architectural default is too low. dma_debug_driver=&lt;driver_name&gt; With this option the DMA-API debugging driver filter feature can be enabled at boot time. Just pass the driver to filter for as the parameter. The filter can be disabled or changed to another driver later using sysfs. dscc4.setup= [NET] dtc3181e= [HW,SCSI] dyndbg[=&quot;val&quot;] [KNL,DYNAMIC_DEBUG] module.dyndbg[=&quot;val&quot;] Enable debug messages at boot time. See Documentation/dynamic-debug-howto.txt for details. earlycon= [KNL] Output early console device and options. uart[8250],io,&lt;addr&gt;[,options] uart[8250],mmio,&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address. The options are the same as for ttyS, above. earlyprintk= [X86,SH,BLACKFIN] earlyprintk=vga earlyprintk=efi earlyprintk=serial[,ttySn[,baudrate]] earlyprintk=ttySn[,baudrate] earlyprintk=dbgp[debugController#] Append &quot;,keep&quot; to not disable it when the real console takes over. Only one of vga, efi, serial or usb debug port can be used at a time. Currently only ttyS0 and ttyS1 are supported. Interaction with the standard serial driver is not very good. The VGA and EFI output is eventually overwritten by the real console. eata= [HW,SCSI] edac_report= [HW,EDAC] Control how to report EDAC event Format: &#123;&quot;on&quot; | &quot;off&quot; | &quot;force&quot;&#125; on: enable EDAC to report H/W event. May be overridden by other higher priority error reporting module. off: disable H/W event reporting through EDAC. force: enforce the use of EDAC to report H/W event. default: on. edd= [EDD] Format: &#123;&quot;off&quot; | &quot;on&quot; | &quot;skip[mbr]&quot;&#125; efi_smbios_addr= [X86,EFI] Parameter used to specify location of SMBIOS for EFI systems. Used by kexec-tools for kdump. eisa_irq_edge= [PARISC,HW] See header of drivers/parisc/eisa.c. elanfreq= [X86-32] See comment before function elanfreq_setup() in arch/x86/kernel/cpu/cpufreq/elanfreq.c. elevator= [IOSCHED] Format: &#123;&quot;anticipatory&quot; | &quot;cfq&quot; | &quot;deadline&quot; | &quot;noop&quot;&#125; See Documentation/block/as-iosched.txt and Documentation/block/deadline-iosched.txt for details. elfcorehdr=[size[KMG]@]offset[KMG] [IA64,PPC,SH,X86,S390] Specifies physical address of start of kernel core image elf header and optionally the size. Generally kexec loader will pass this option to capture kernel. See Documentation/kdump/kdump.txt for details. enable_mtrr_cleanup [X86] The kernel tries to adjust MTRR layout from continuous to discrete, to make X server driver able to add WB entry later. This parameter enables that. enable_timer_pin_1 [X86] Enable PIN 1 of APIC timer Can be useful to work around chipset bugs (in particular on some ATI chipsets). The kernel tries to set a reasonable default. enforcing [SELINUX] Set initial enforcing status. Format: &#123;&quot;0&quot; | &quot;1&quot;&#125; See security/selinux/Kconfig help text. 0 -- permissive (log only, no denials). 1 -- enforcing (deny and log). Default value is 0. Value can be changed at runtime via /selinux/enforce. erst_disable [ACPI] Disable Error Record Serialization Table (ERST) support. ether= [HW,NET] Ethernet cards parameters This option is obsoleted by the &quot;netdev=&quot; option, which has equivalent usage. See its documentation for details. eurwdt= [HW,WDT] Eurotech CPU-1220/1410 onboard watchdog. Format: &lt;io&gt;[,&lt;irq&gt;] failslab= fail_page_alloc= fail_make_request=[KNL] General fault injection mechanism. Format: &lt;interval&gt;,&lt;probability&gt;,&lt;space&gt;,&lt;times&gt; See also /Documentation/fault-injection/. fd_mcs= [HW,SCSI] See header of drivers/scsi/fd_mcs.c. fdomain= [HW,SCSI] See header of drivers/scsi/fdomain.c. floppy= [HW] See Documentation/blockdev/floppy.txt. force_hrtimer_reprogram= [KNL] Force the reprogramming of expired timers in hrtimer_reprogram(). force_pal_cache_flush [IA-64] Avoid check_sal_cache_flush which may hang on buggy SAL_CACHE_FLUSH implementations. Using this parameter will force ia64_sal_cache_flush to call ia64_pal_cache_flush instead of SAL_CACHE_FLUSH. ftrace=[tracer] [FTRACE] will set and start the specified tracer as early as possible in order to facilitate early boot debugging. ftrace_dump_on_oops [FTRACE] will dump the trace buffers on oops. ftrace_filter=[function-list] [FTRACE] Limit the functions traced by the function tracer at boot up. function-list is a comma separated list of functions. This list can be changed at run time by the set_ftrace_filter file in the debugfs tracing directory. ftrace_notrace=[function-list] [FTRACE] Do not trace the functions specified in function-list. This list can be changed at run time by the set_ftrace_notrace file in the debugfs tracing directory. gamecon.map[2|3]= [HW,JOY] Multisystem joystick and NES/SNES/PSX pad support via parallel port (up to 5 devices per port) Format: &lt;port#&gt;,&lt;pad1&gt;,&lt;pad2&gt;,&lt;pad3&gt;,&lt;pad4&gt;,&lt;pad5&gt; See also Documentation/input/joystick-parport.txt gamma= [HW,DRM] gart_fix_e820= [X86_64] disable the fix e820 for K8 GART Format: off | on default: on gcov_persist= [GCOV] When non-zero (default), profiling data for kernel modules is saved and remains accessible via debugfs, even when the module is unloaded/reloaded. When zero, profiling data is discarded and associated debugfs files are removed at module unload time. gdth= [HW,SCSI] See header of drivers/scsi/gdth.c. gpt [EFI] Forces disk with valid GPT signature but invalid Protective MBR to be treated as GPT. gvp11= [HW,SCSI] hardlockup_all_cpu_backtrace= [KNL] Should the hard-lockup detector generate backtraces on all cpus. Format: &lt;integer&gt; hashdist= [KNL,NUMA] Large hashes allocated during boot are distributed across NUMA nodes. Defaults on for 64bit NUMA, off otherwise. Format: 0 | 1 (for off | on) hcl= [IA-64] SGI&#39;s Hardware Graph compatibility layer hd= [EIDE] (E)IDE hard drive subsystem geometry Format: &lt;cyl&gt;,&lt;head&gt;,&lt;sect&gt; hest_disable [ACPI] Disable Hardware Error Source Table (HEST) support; corresponding firmware-first mode error processing logic will be disabled. highmem=nn[KMG] [KNL,BOOT] forces the highmem zone to have an exact size of &lt;nn&gt;. This works even on boxes that have no highmem otherwise. This also works to reduce highmem size on bigger boxes. highres= [KNL] Enable/disable high resolution timer mode. Valid parameters: &quot;on&quot;, &quot;off&quot; Default: &quot;on&quot; hisax= [HW,ISDN] See Documentation/isdn/README.HiSax. hlt [BUGS=ARM,SH] hpet= [X86-32,HPET] option to control HPET usage Format: &#123; enable (default) | disable | force | verbose &#125; disable: disable HPET and use PIT instead force: allow force enabled of undocumented chips (ICH4, VIA, nVidia) verbose: show contents of HPET registers during setup hpet_mmap [HW, X86_64] Enable userspace mapping of HPET registers for faster HPET access by userspace processes. hugepages= [HW,X86-32,IA-64] HugeTLB pages to allocate at boot. hugepagesz= [HW,IA-64,PPC,X86-64] The size of the HugeTLB pages. On x86-64 and powerpc, this option can be specified multiple times interleaved with hugepages= to reserve huge pages of different sizes. Valid pages sizes on x86-64 are 2M (when the CPU supports &quot;pse&quot;) and 1G (when the CPU supports the &quot;pdpe1gb&quot; cpuinfo flag) Note that 1GB pages can only be allocated at boot time using hugepages= and not freed afterwards. hvc_iucv= [S390] Number of z/VM IUCV hypervisor console (HVC) terminal devices. Valid values: 0..8 hvc_iucv_allow= [S390] Comma-separated list of z/VM user IDs. If specified, z/VM IUCV HVC accepts connections from listed z/VM user IDs only. i2c_bus= [HW] Override the default board specific I2C bus speed or register an additional I2C bus that is not registered from board initialization code. Format: &lt;bus_id&gt;,&lt;clkrate&gt; i8042.debug [HW] Toggle i8042 debug mode i8042.direct [HW] Put keyboard port into non-translated mode i8042.dumbkbd [HW] Pretend that controller can only read data from keyboard and cannot control its state (Don&#39;t attempt to blink the leds) i8042.noaux [HW] Don&#39;t check for auxiliary (== mouse) port i8042.nokbd [HW] Don&#39;t check/create keyboard port i8042.noloop [HW] Disable the AUX Loopback command while probing for the AUX port i8042.nomux [HW] Don&#39;t check presence of an active multiplexing controller i8042.nopnp [HW] Don&#39;t use ACPIPnP / PnPBIOS to discover KBD/AUX controllers i8042.panicblink= [HW] Frequency with which keyboard LEDs should blink when kernel panics (default is 0.5 sec) i8042.reset [HW] Reset the controller during init and cleanup i8042.unlock [HW] Unlock (ignore) the keylock i810= [HW,DRM] i8k.ignore_dmi [HW] Continue probing hardware even if DMI data indicates that the driver is running on unsupported hardware. i8k.force [HW] Activate i8k driver even if SMM BIOS signature does not match list of supported models. i8k.power_status [HW] Report power status in /proc/i8k (disabled by default) i8k.restricted [HW] Allow controlling fans only if SYS_ADMIN capability is set. ibmmcascsi= [HW,MCA,SCSI] IBM MicroChannel SCSI adapter See Documentation/mca.txt. icn= [HW,ISDN] Format: &lt;io&gt;[,&lt;membase&gt;[,&lt;icn_id&gt;[,&lt;icn_id2&gt;]]] ide-core.nodma= [HW] (E)IDE subsystem Format: =0.0 to prevent dma on hda, =0.1 hdb =1.0 hdc .vlb_clock .pci_clock .noflush .nohpa .noprobe .nowerr .cdrom .chs .ignore_cable are additional options See Documentation/ide/ide.txt. ide-pci-generic.all-generic-ide [HW] (E)IDE subsystem Claim all unknown PCI IDE storage controllers. idle= [X86] Format: idle=poll, idle=mwait, idle=halt, idle=nomwait Poll forces a polling idle loop that can slightly improve the performance of waking up a idle CPU, but will use a lot of power and make the system run hot. Not recommended. idle=mwait: On systems which support MONITOR/MWAIT but the kernel chose to not use it because it doesn&#39;t save as much power as a normal idle loop, use the MONITOR/MWAIT idle loop anyways. Performance should be the same as idle=poll. idle=halt: Halt is forced to be used for CPU idle. In such case C2/C3 won&#39;t be used again. idle=nomwait: Disable mwait for CPU C-states ignore_loglevel [KNL] Ignore loglevel setting - this will print /all/ kernel messages to the console. Useful for debugging. ihash_entries= [KNL] Set number of hash buckets for inode cache. ima_audit= [IMA] Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 -- integrity auditing messages. (Default) 1 -- enable informational integrity auditing messages. ima_hash= [IMA] Format: &#123; &quot;sha1&quot; | &quot;md5&quot; &#125; default: &quot;sha1&quot; ima_tcb [IMA] Load a policy which meets the needs of the Trusted Computing Base. This means IMA will measure all programs exec&#39;d, files mmap&#39;d for exec, and all files opened for read by uid=0. in2000= [HW,SCSI] See header of drivers/scsi/in2000.c. init= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /sbin/init as init process. initcall_debug [KNL] Trace initcalls as they are executed. Useful for working out where the kernel is dying during startup. initcall_blacklist= [KNL] Do not execute a comma-separated list of initcall functions. Useful for debugging built-in modules and initcalls. initrd= [BOOT] Specify the location of the initial ramdisk inport.irq= [HW] Inport (ATI XL and Microsoft) busmouse driver Format: &lt;irq&gt; int_pln_enable [x86] Enable power limit notification interrupt intel_iommu= [DMAR] Intel IOMMU driver (DMAR) option on Enable intel iommu driver. off Disable intel iommu driver. igfx_off [Default Off] By default, gfx is mapped as normal device. If a gfx device has a dedicated DMAR unit, the DMAR unit is bypassed by not enabling DMAR with this option. In this case, gfx device will use physical address for DMA. pt64 [Default Off] Enable 64 bit pass through mode if the kernel has the capability. Also disables forcedac, unless that option follows this option. forcedac [x86_64] With this option iommu will not optimize to look for io virtual address below 32 bit forcing dual address cycle on pci bus for cards supporting greater than 32 bit addressing. The default is to look for translation below 32 bit and if not available then look in the higher range. Note that pt64 disables this option, so this must follow that option to be effective. strict [Default Off] With this option on every unmap_single operation will result in a hardware IOTLB flush operation as opposed to batching them for performance. sp_off [Default Off] By default, super page will be supported if Intel IOMMU has the capability. With this option, super page will not be supported. intel_idle.max_cstate= [KNL,HW,ACPI,X86] 0 disables intel_idle and fall back on acpi_idle. 1 to 6 specify maximum depth of C-state. intremap= [X86-64, Intel-IOMMU] on enable Interrupt Remapping (default) off disable Interrupt Remapping nosid disable Source ID checking no_x2apic_optout BIOS x2APIC opt-out request will be ignored inttest= [IA64] iomem= Disable strict checking of access to MMIO memory strict regions from userspace. relaxed iommu= [x86] off force noforce biomerge panic nopanic merge nomerge forcesac soft pt [x86, IA64] io7= [HW] IO7 for Marvel based alpha systems See comment before marvel_specify_io7 in arch/alpha/kernel/core_marvel.c. io_delay= [X86] I/O delay method 0x80 Standard port 0x80 based delay 0xed Alternate port 0xed based delay (needed on some systems) udelay Simple two microseconds delay none No delay ip= [IP_PNP] See Documentation/filesystems/nfs/nfsroot.txt. ip2= [HW] Set IO/IRQ pairs for up to 4 IntelliPort boards See comment before ip2_setup() in drivers/char/ip2/ip2base.c. ips= [HW,SCSI] Adaptec / IBM ServeRAID controller See header of drivers/scsi/ips.c. irqfixup [HW] When an interrupt is not handled search all handlers for it. Intended to get systems with badly broken firmware running. irqpoll [HW] When an interrupt is not handled search all handlers for it. Also check all handlers each timer interrupt. Intended to get systems with badly broken firmware running. isapnp= [ISAPNP] Format: &lt;RDP&gt;,&lt;reset&gt;,&lt;pci_scan&gt;,&lt;verbosity&gt; isolcpus= [KNL,SMP] Isolate CPUs from the general scheduler. Format: &lt;cpu number&gt;,...,&lt;cpu number&gt; or &lt;cpu number&gt;-&lt;cpu number&gt; (must be a positive range in ascending order) or a mixture &lt;cpu number&gt;,...,&lt;cpu number&gt;-&lt;cpu number&gt; This option can be used to specify one or more CPUs to isolate from the general SMP balancing and scheduling algorithms. You can move a process onto or off an &quot;isolated&quot; CPU via the CPU affinity syscalls or cpuset. &lt;cpu number&gt; begins at 0 and the maximum value is &quot;number of CPUs in system - 1&quot;. This option is the preferred way to isolate CPUs. The alternative -- manually setting the CPU mask of all tasks in the system -- can cause problems and suboptimal load balancer performance. iucv= [HW,NET] js= [HW,JOY] Analog joystick See Documentation/input/joystick.txt. keepinitrd [HW,ARM] kernelcore=nn[KMG] [KNL,X86,IA-64,PPC] This parameter specifies the amount of memory usable by the kernel for non-movable allocations. The requested amount is spread evenly throughout all nodes in the system. The remaining memory in each node is used for Movable pages. In the event, a node is too small to have both kernelcore and Movable pages, kernelcore pages will take priority and other nodes will have a larger number of Movable pages. The Movable zone is used for the allocation of pages that may be reclaimed or moved by the page migration subsystem. This means that HugeTLB pages may not be allocated from this zone. Note that allocations like PTEs-from-HighMem still use the HighMem zone if it exists, and the Normal zone if it does not. kgdboc= [HW] kgdb over consoles. Requires a tty driver that supports console polling. (only serial supported for now) Format: &lt;serial_device&gt;[,baud] kmac= [MIPS] korina ethernet MAC address. Configure the RouterBoard 532 series on-chip Ethernet adapter MAC address. kmemleak= [KNL] Boot-time kmemleak enable/disable Valid arguments: on, off Default: on kpti [X86-64] Enable kernel page table isolation. kstack=N [X86] Print N words from the kernel stack in oops dumps. kvm.ignore_msrs=[KVM] Ignore guest accesses to unhandled MSRs. Default is 0 (don&#39;t ignore, but inject #GP) kvm.oos_shadow= [KVM] Disable out-of-sync shadow paging. Default is 1 (enabled) kvm-amd.nested= [KVM,AMD] Allow nested virtualization in KVM/SVM. Default is 0 (off) kvm-amd.npt= [KVM,AMD] Disable nested paging (virtualized MMU) for all guests. Default is 1 (enabled) if in 64bit or 32bit-PAE mode kvm-intel.bypass_guest_pf= [KVM,Intel] Disables bypassing of guest page faults on Intel chips. Default is 1 (enabled) kvm-intel.ept= [KVM,Intel] Disable extended page tables (virtualized MMU) support on capable Intel chips. Default is 1 (enabled) kvm-intel.emulate_invalid_guest_state= [KVM,Intel] Enable emulation of invalid guest states Default is 0 (disabled) kvm-intel.flexpriority= [KVM,Intel] Disable FlexPriority feature (TPR shadow). Default is 1 (enabled) kvm-intel.unrestricted_guest= [KVM,Intel] Disable unrestricted guest feature (virtualized real and unpaged mode) on capable Intel chips. Default is 1 (enabled) kvm-intel.vmentry_l1d_flush=[KVM,Intel] Mitigation for L1 Terminal Fault CVE-2018-3620. Valid arguments: never, cond, always always: L1D cache flush on every VMENTER. cond: Flush L1D on VMENTER only when the code between VMEXIT and VMENTER can leak host memory. never: Disables the mitigation Default is cond (do L1 cache flush in specific instances) kvm-intel.vpid= [KVM,Intel] Disable Virtual Processor Identification feature (tagged TLBs) on capable Intel chips. Default is 1 (enabled) kstat_irq_nolock Disables sparse IRQ locking for accesses to /proc/stat. Use with caution. l1tf= [X86] Control mitigation of the L1TF vulnerability on affected CPUs The kernel PTE inversion protection is unconditionally enabled and cannot be disabled. full Provides all available mitigations for the L1TF vulnerability. Disables SMT and enables all mitigations in the hypervisors, i.e. unconditional L1D flush. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. full,force Same as &#39;full&#39;, but disables SMT and L1D flush runtime control. Implies the &#39;nosmt=force&#39; command line option. (i.e. sysfs control of SMT is disabled.) flush Leaves SMT enabled and enables the default hypervisor mitigation, i.e. conditional L1D flush. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. flush,nosmt Disables SMT and enables the default hypervisor mitigation. SMT control and L1D flush control via the sysfs interface is still possible after boot. Hypervisors will issue a warning when the first VM is started in a potentially insecure configuration, i.e. SMT enabled or L1D flush disabled. flush,nowarn Same as &#39;flush&#39;, but hypervisors will not warn when a VM is started in a potentially insecure configuration. off Disables hypervisor mitigations and doesn&#39;t emit any warnings. Default is &#39;flush&#39;. For details see: Documentation/admin-guide/hw-vuln/l1tf.rst l2cr= [PPC] l3cr= [PPC] lapic [X86-32,APIC] Enable the local APIC even if BIOS disabled it. lapic_timer_c2_ok [X86,APIC] trust the local apic timer in C2 power state. libata.dma= [LIBATA] DMA control libata.dma=0 Disable all PATA and SATA DMA libata.dma=1 PATA and SATA Disk DMA only libata.dma=2 ATAPI (CDROM) DMA only libata.dma=4 Compact Flash DMA only Combinations also work, so libata.dma=3 enables DMA for disks and CDROMs, but not CFs. libata.ignore_hpa= [LIBATA] Ignore HPA limit libata.ignore_hpa=0 keep BIOS limits (default) libata.ignore_hpa=1 ignore limits, using full disk libata.noacpi [LIBATA] Disables use of ACPI in libata suspend/resume when set. Format: &lt;int&gt; libata.force= [LIBATA] Force configurations. The format is comma separated list of &quot;[ID:]VAL&quot; where ID is PORT[:DEVICE]. PORT and DEVICE are decimal numbers matching port, link or device. Basically, it matches the ATA ID string printed on console by libata. If the whole ID part is omitted, the last PORT and DEVICE values are used. If ID hasn&#39;t been specified yet, the configuration applies to all ports, links and devices. If only DEVICE is omitted, the parameter applies to the port and all links and devices behind it. DEVICE number of 0 either selects the first device or the first fan-out link behind PMP device. It does not select the host link. DEVICE number of 15 selects the host link and device attached to it. The VAL specifies the configuration to force. As long as there&#39;s no ambiguity shortcut notation is allowed. For example, both 1.5 and 1.5G would work for 1.5Gbps. The following configurations can be forced. * Cable type: 40c, 80c, short40c, unk, ign or sata. Any ID with matching PORT is used. * SATA link speed limit: 1.5Gbps or 3.0Gbps. * Transfer mode: pio[0-7], mwdma[0-4] and udma[0-7]. udma[/][16,25,33,44,66,100,133] notation is also allowed. * [no]ncq: Turn on or off NCQ. * nohrst, nosrst, norst: suppress hard, soft and both resets. * rstonce: only attempt one reset during hot-unplug link recovery If there are multiple matching configurations changing the same attribute, the last one is used. lmb=debug [KNL] Enable lmb debug messages. load_ramdisk= [RAM] List of ramdisks to load from floppy See Documentation/blockdev/ramdisk.txt. lockd.nlm_grace_period=P [NFS] Assign grace period. Format: &lt;integer&gt; lockd.nlm_tcpport=N [NFS] Assign TCP port. Format: &lt;integer&gt; lockd.nlm_timeout=T [NFS] Assign timeout value. Format: &lt;integer&gt; lockd.nlm_udpport=M [NFS] Assign UDP port. Format: &lt;integer&gt; logibm.irq= [HW,MOUSE] Logitech Bus Mouse Driver Format: &lt;irq&gt; loglevel= All Kernel Messages with a loglevel smaller than the console loglevel will be printed to the console. It can also be changed with klogd or other programs. The loglevels are defined as follows: 0 (KERN_EMERG) system is unusable 1 (KERN_ALERT) action must be taken immediately 2 (KERN_CRIT) critical conditions 3 (KERN_ERR) error conditions 4 (KERN_WARNING) warning conditions 5 (KERN_NOTICE) normal but significant condition 6 (KERN_INFO) informational 7 (KERN_DEBUG) debug-level messages log_buf_len=n Sets the size of the printk ring buffer, in bytes. Format: &#123; n | nk | nM &#125; n must be a power of two. The default size is set in the kernel config file. logo.nologo [FB] Disables display of the built-in Linux logo. This may be used to provide more screen space for kernel log messages and is useful when debugging kernel boot problems. lp=0 [LP] Specify parallel ports to use, e.g, lp=port[,port...] lp=none,parport0 (lp0 not configured, lp1 uses lp=reset first parallel port). &#39;lp=0&#39; disables the lp=auto printer driver. &#39;lp=reset&#39; (which can be specified in addition to the ports) causes attached printers to be reset. Using lp=port1,port2,... specifies the parallel ports to associate lp devices with, starting with lp0. A port specification may be &#39;none&#39; to skip that lp device, or a parport name such as &#39;parport0&#39;. Specifying &#39;lp=auto&#39; instead of a port specification list means that device IDs from each port should be examined, to see if an IEEE 1284-compliant printer is attached; if so, the driver will manage that printer. See also header of drivers/char/lp.c. lpj=n [KNL] Sets loops_per_jiffy to given constant, thus avoiding time-consuming boot-time autodetection (up to 250 ms per CPU). 0 enables autodetection (default). To determine the correct value for your kernel, boot with normal autodetection and see what value is printed. Note that on SMP systems the preset will be applied to all CPUs, which is likely to cause problems if your CPUs need significantly divergent settings. An incorrect value will cause delays in the kernel to be wrong, leading to unpredictable I/O errors and other breakage. Although unlikely, in the extreme case this might damage your hardware. ltpc= [NET] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt; mac5380= [HW,SCSI] Format: &lt;can_queue&gt;,&lt;cmd_per_lun&gt;,&lt;sg_tablesize&gt;,&lt;hostid&gt;,&lt;use_tags&gt; machvec= [IA64] Force the use of a particular machine-vector (machvec) in a generic kernel. Example: machvec=hpzx1_swiotlb machtype= [Loongson] Share the same kernel image file between different yeeloong laptop. Example: machtype=lemote-yeeloong-2f-7inch max_addr=nn[KMG] [KNL,BOOT,ia64] All physical memory greater than or equal to this physical address is ignored. maxcpus= [SMP] Maximum number of processors that an SMP kernel should make use of. maxcpus=n : n &gt;= 0 limits the kernel to using &#39;n&#39; processors. n=0 is a special case, it is equivalent to &quot;nosmp&quot;, which also disables the IO APIC. max_loop= [LOOP] Maximum number of loopback devices that can be mounted Format: &lt;1-256&gt; max_luns= [SCSI] Maximum number of LUNs to probe. Should be between 1 and 2^32-1. max_report_luns= [SCSI] Maximum number of LUNs received. Should be between 1 and 16384. mcatest= [IA-64] mce [X86-32] Machine Check Exception mce=option [X86-64] See Documentation/x86/x86_64/boot-options.txt md= [HW] RAID subsystems devices and level See Documentation/md.txt. mdacon= [MDA] Format: &lt;first&gt;,&lt;last&gt; Specifies range of consoles to be captured by the MDA. mds= [X86,INTEL] Control mitigation for the Micro-architectural Data Sampling (MDS) vulnerability. Certain CPUs are vulnerable to an exploit against CPU internal buffers which can forward information to a disclosure gadget under certain conditions. In vulnerable processors, the speculatively forwarded data can be used in a cache side channel attack, to access data to which the attacker does not have direct access. This parameter controls the MDS mitigation. The options are: full - Enable MDS mitigation on vulnerable CPUs full,nosmt - Enable MDS mitigation and disable SMT on vulnerable CPUs off - Unconditionally disable MDS mitigation Not specifying this option is equivalent to mds=full. For details see: Documentation/admin-guide/hw-vuln/mds.rst mem=nn[KMG] [KNL,BOOT] Force usage of a specific amount of memory Amount of memory to be used when the kernel is not able to see the whole system memory or for test. [X86-32] Use together with memmap= to avoid physical address space collisions. Without memmap= PCI devices could be placed at addresses belonging to unused RAM. mem=nopentium [BUGS=X86-32] Disable usage of 4MB pages for kernel memory. memchunk=nn[KMG] [KNL,SH] Allow user to override the default size for per-device physically contiguous DMA buffers. memmap=exactmap [KNL,X86] Enable setting of an exact E820 memory map, as specified by the user. Such memmap=exactmap lines can be constructed based on BIOS output or other requirements. See the memmap=nn@ss option description. memmap=nn[KMG]@ss[KMG] [KNL] Force usage of a specific region of memory Region of memory to be used, from ss to ss+nn. memmap=nn[KMG]#ss[KMG] [KNL,ACPI] Mark specific memory as ACPI data. Region of memory to be used, from ss to ss+nn. memmap=nn[KMG]$ss[KMG] [KNL,ACPI] Mark specific memory as reserved. Region of memory to be used, from ss to ss+nn. Example: Exclude memory from 0x18690000-0x1869ffff memmap=64K$0x18690000 or memmap=0x10000$0x18690000 memory_corruption_check=0/1 [X86] Some BIOSes seem to corrupt the first 64k of memory when doing things like suspend/resume. Setting this option will scan the memory looking for corruption. Enabling this will both detect corruption and prevent the kernel from using the memory being corrupted. However, its intended as a diagnostic tool; if repeatable BIOS-originated corruption always affects the same memory, you can use memmap= to prevent the kernel from using that memory. memory_corruption_check_size=size [X86] By default it checks for corruption in the low 64k, making this memory unavailable for normal use. Use this parameter to scan for corruption in more or less memory. memory_corruption_check_period=seconds [X86] By default it checks for corruption every 60 seconds. Use this parameter to check at some other rate. 0 disables periodic checking. memtest= [KNL,X86] Enable memtest Format: &lt;integer&gt; default : 0 &lt;disable&gt; Specifies the number of memtest passes to be performed. Each pass selects another test pattern from a given set of patterns. Memtest fills the memory with this pattern, validates memory contents and reserves bad memory regions that are detected. meye.*= [HW] Set MotionEye Camera parameters See Documentation/video4linux/meye.txt. mfgpt_irq= [IA-32] Specify the IRQ to use for the Multi-Function General Purpose Timers on AMD Geode platforms. mfgptfix [X86-32] Fix MFGPT timers on AMD Geode platforms when the BIOS has incorrectly applied a workaround. TinyBIOS version 0.98 is known to be affected, 0.99 fixes the problem by letting the user disable the workaround. mga= [HW,DRM] min_addr=nn[KMG] [KNL,BOOT,ia64] All physical memory below this physical address is ignored. mini2440= [ARM,HW,KNL] Format:[0..2][b][c][t] Default: &quot;0tb&quot; MINI2440 configuration specification: 0 - The attached screen is the 3.5&quot; TFT 1 - The attached screen is the 7&quot; TFT 2 - The VGA Shield is attached (1024x768) Leaving out the screen size parameter will not load the TFT driver, and the framebuffer will be left unconfigured. b - Enable backlight. The TFT backlight pin will be linked to the kernel VESA blanking code and a GPIO LED. This parameter is not necessary when using the VGA shield. c - Enable the s3c camera interface. t - Reserved for enabling touchscreen support. The touchscreen support is not enabled in the mainstream kernel as of 2.6.30, a preliminary port can be found in the &quot;bleeding edge&quot; mini2440 support kernel at http://repo.or.cz/w/linux-2.6/mini2440.git mminit_loglevel= [KNL] When CONFIG_DEBUG_MEMORY_INIT is set, this parameter allows control of the logging verbosity for the additional memory initialisation checks. A value of 0 disables mminit logging and a level of 4 will log everything. Information is printed at KERN_DEBUG so loglevel=8 may also need to be specified. mousedev.tap_time= [MOUSE] Maximum time between finger touching and leaving touchpad surface for touch to be considered a tap and be reported as a left button click (for touchpads working in absolute mode only). Format: &lt;msecs&gt; mousedev.xres= [MOUSE] Horizontal screen resolution, used for devices reporting absolute coordinates, such as tablets mousedev.yres= [MOUSE] Vertical screen resolution, used for devices reporting absolute coordinates, such as tablets movablecore=nn[KMG] [KNL,X86,IA-64,PPC] This parameter is similar to kernelcore except it specifies the amount of memory used for migratable allocations. If both kernelcore and movablecore is specified, then kernelcore will be at *least* the specified value but may be more. If movablecore on its own is specified, the administrator must be careful that the amount of memory usable for all allocations is not too small. mpu401= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; MTD_Partition= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;,&lt;size&gt;,&lt;offset&gt; MTD_Region= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;[,&lt;base&gt;,&lt;size&gt;,&lt;buswidth&gt;,&lt;altbuswidth&gt;] mtdparts= [MTD] See drivers/mtd/cmdlinepart.c. onenand.bdry= [HW,MTD] Flex-OneNAND Boundary Configuration Format: [die0_boundary][,die0_lock][,die1_boundary][,die1_lock] boundary - index of last SLC block on Flex-OneNAND. The remaining blocks are configured as MLC blocks. lock - Configure if Flex-OneNAND boundary should be locked. Once locked, the boundary cannot be changed. 1 indicates lock status, 0 indicates unlock status. mtdset= [ARM] ARM/S3C2412 JIVE boot control See arch/arm/mach-s3c2412/mach-jive.c mtouchusb.raw_coordinates= [HW] Make the MicroTouch USB driver use raw coordinates (&#39;y&#39;, default) or cooked coordinates (&#39;n&#39;) mtrr_chunk_size=nn[KMG] [X86] used for mtrr cleanup. It is largest continuous chunk that could hold holes aka. UC entries. mtrr_gran_size=nn[KMG] [X86] Used for mtrr cleanup. It is granularity of mtrr block. Default is 1. Large value could prevent small alignment from using up MTRRs. mtrr_spare_reg_nr=n [X86] Format: &lt;integer&gt; Range: 0,7 : spare reg number Default : 1 Used for mtrr cleanup. It is spare mtrr entries number. Set to 2 or more if your graphical card needs more. n2= [NET] SDL Inc. RISCom/N2 synchronous serial card NCR_D700= [HW,SCSI] See header of drivers/scsi/NCR_D700.c. ncr5380= [HW,SCSI] ncr53c400= [HW,SCSI] ncr53c400a= [HW,SCSI] ncr53c406a= [HW,SCSI] ncr53c8xx= [HW,SCSI] netdev= [NET] Network devices parameters Format: &lt;irq&gt;,&lt;io&gt;,&lt;mem_start&gt;,&lt;mem_end&gt;,&lt;name&gt; Note that mem_start is often overloaded to mean something different and driver-specific. This usage is only documented in each driver source file if at all. nf_conntrack.acct= [NETFILTER] Enable connection tracking flow accounting 0 to disable accounting 1 to enable accounting Default value is 0. nfsaddrs= [NFS] Deprecated. Use ip= instead. See Documentation/filesystems/nfs/nfsroot.txt. nfsroot= [NFS] nfs root filesystem for disk-less boxes. See Documentation/filesystems/nfs/nfsroot.txt. nfsrootdebug [NFS] enable nfsroot debugging messages. See Documentation/filesystems/nfs/nfsroot.txt. nfs.callback_tcpport= [NFS] set the TCP port on which the NFSv4 callback channel should listen. nfs.cache_getent= [NFS] sets the pathname to the program which is used to update the NFS client cache entries. nfs.cache_getent_timeout= [NFS] sets the timeout after which an attempt to update a cache entry is deemed to have failed. nfs.idmap_cache_timeout= [NFS] set the maximum lifetime for idmapper cache entries. nfs.enable_ino64= [NFS] enable 64-bit inode numbers. If zero, the NFS client will fake up a 32-bit inode number for the readdir() and stat() syscalls instead of returning the full 64-bit number. The default is to return 64-bit inode numbers. nfs.max_session_slots= [NFSv4.1] Sets the maximum number of session slots the client will attempt to negotiate with the server. This limits the number of simultaneous RPC requests that the client can send to the NFSv4.1 server. Note that there is little point in setting this value higher than the max_tcp_slot_table_limit. nfs.nfs4_disable_idmapping= [NFSv4] When set to the default of &#39;1&#39;, this option ensures that both the RPC level authentication scheme and the NFS level operations agree to use numeric uids/gids if the mount is using the &#39;sec=sys&#39; security flavour. In effect it is disabling idmapping, which can make migration from legacy NFSv2/v3 systems to NFSv4 easier. Servers that do not support this mode of operation will be autodetected by the client, and it will fall back to using the idmapper. To turn off this behaviour, set the value to &#39;0&#39;. nfs.recover_lost_locks = [NFSv4] Attempt to recover locks that were lost due to a lease timeout on the server. Please note that doing this risks data corruption, since there are no guarantees that the file will remain unchanged after the locks are lost. If you want to enable the kernel legacy behaviour of attempting to recover these locks, then set this parameter to &#39;1&#39;. The default parameter value of &#39;0&#39; causes the kernel not to attempt recovery of lost locks. nfsd.nfs4_disable_idmapping= [NFSv4] Defaults to 0. When set to &#39;1&#39;, the NFSv4 server will return only numeric uids and gids to clients using auth_sys, and will accept numeric uids and gids from such clients. This is intended to ease migration from NFSv2/v3. nmi_debug= [KNL,AVR32,SH] Specify one or more actions to take when a NMI is triggered. Format: [state][,regs][,debounce][,die] nmi_watchdog= [KNL,BUGS=X86] Debugging features for SMP kernels Format: [panic,][nopanic,][num] Valid num: 0 0 - turn nmi_watchdog off When panic is specified, panic when an NMI watchdog timeout occurs (or &#39;nopanic&#39; to override the opposite default). This is useful when you use a panic=... timeout and need the box quickly up again. netpoll.carrier_timeout= [NET] Specifies amount of time (in seconds) that netpoll should wait for a carrier. By default netpoll waits 4 seconds. no387 [BUGS=X86-32] Tells the kernel to use the 387 maths emulation library even if a 387 maths coprocessor is present. no_console_suspend [HW] Never suspend the console Disable suspending of consoles during suspend and hibernate operations. Once disabled, debugging messages can reach various consoles while the rest of the system is being put to sleep (ie, while debugging driver suspend/resume hooks). This may not work reliably with all consoles, but is known to work with serial and VGA consoles. noaliencache [MM, NUMA, SLAB] Disables the allocation of alien caches in the slab allocator. Saves per-node memory, but will impact performance. noalign [KNL,ARM] noapic [SMP,APIC] Tells the kernel to not make use of any IOAPICs that may be present in the system. autogroup Enable scheduler automatic task group creation. nobats [PPC] Do not use BATs for mapping kernel lowmem on &quot;Classic&quot; PPC cores. nocache [ARM] noclflush [BUGS=X86] Don&#39;t use the CLFLUSH instruction nodelayacct [KNL] Disable per-task delay accounting nodisconnect [HW,SCSI,M68K] Disables SCSI disconnects. nodsp [SH] Disable hardware DSP at boot time. noefi [X86] Disable EFI runtime services support. noexec [IA-64] noexec [X86] On X86-32 available only on PAE configured kernels. noexec=on: enable non-executable mappings (default) noexec=off: disable non-executable mappings nosmep [X86] Disable SMEP (Supervisor Mode Execution Protection) even if it is supported by processor. noexec32 [X86-64] This affects only 32-bit executables. noexec32=on: enable non-executable mappings (default) read doesn&#39;t imply executable mappings noexec32=off: disable non-executable mappings read implies executable mappings nofpu [SH] Disable hardware FPU at boot time. nofxsr [BUGS=X86-32] Disables x86 floating point extended register save and restore. The kernel will only save legacy floating-point registers on task switch. nosmt [KNL,x86] Disable symmetric multithreading (SMT). nosmt=force: Force disable SMT, cannot be undone via the sysfs control file. nospectre_v1 [X86] Disable mitigations for Spectre Variant 1 (bounds check bypass). With this option data leaks are possible in the system. nospectre_v2 [X86] Disable all mitigations for the Spectre variant 2 (indirect branch prediction) vulnerability. System may allow data leaks with this option, which is equivalent to spectre_v2=off. nospec_store_bypass_disable [HW] Disable all mitigations for the Speculative Store Bypass vulnerability noxsave [BUGS=X86] Disables x86 extended register state save and restore using xsave. The kernel will fallback to enabling legacy floating-point and sse state. eagerfpu= [X86] on enable eager fpu restore off disable eager fpu restore auto selects the default scheme, which automatically enables eagerfpu restore for xsaveopt. nohlt [BUGS=ARM,SH] Tells the kernel that the sleep(SH) or wfi(ARM) instruction doesn&#39;t work correctly and not to use it. This is also useful when using JTAG debugger. no-hlt [BUGS=X86-32] Tells the kernel that the hlt instruction doesn&#39;t work correctly and not to use it. no_file_caps Tells the kernel not to honor file capabilities. The only way then for a file to be executed with privilege is to be setuid root or executed by root. nohalt [IA-64] Tells the kernel not to use the power saving function PAL_HALT_LIGHT when idle. This increases power-consumption. On the positive side, it reduces interrupt wake-up latency, which may improve performance in certain environments such as networked servers or real-time systems. nohz= [KNL] Boottime enable/disable dynamic ticks Valid arguments: on, off Default: on noiotrap [SH] Disables trapped I/O port accesses. noirqdebug [X86-32] Disables the code which attempts to detect and disable unhandled interrupt sources. no_timer_check [X86,APIC] Disables the code which tests for broken timer IRQ sources. noisapnp [ISAPNP] Disables ISA PnP code. noinitrd [RAM] Tells the kernel not to load any configured initial RAM disk. nointremap [X86-64, Intel-IOMMU] Do not enable interrupt remapping. [Deprecated - use intremap=off] nointroute [IA-64] nojitter [IA64] Disables jitter checking for ITC timers. nolapic [X86-32,APIC] Do not enable or use the local APIC. nolapic_timer [X86-32,APIC] Do not use the local APIC timer. noltlbs [PPC] Do not use large page/tlb entries for kernel lowmem mapping on PPC40x. nomca [IA-64] Disable machine check abort handling nomce [X86-32] Machine Check Exception nomfgpt [X86-32] Disable Multi-Function General Purpose Timer usage (for AMD Geode machines). norandmaps Don&#39;t use address space randomization. Equivalent to echo 0 &gt; /proc/sys/kernel/randomize_va_space noreplace-paravirt [X86-32,PV_OPS] Don&#39;t patch paravirt_ops noreplace-smp [X86-32,SMP] Don&#39;t replace SMP instructions with UP alternatives noresidual [PPC] Don&#39;t use residual data on PReP machines. nordrand [X86] Disable the direct use of the RDRAND instruction even if it is supported by the processor. RDRAND is still available to user space applications. noresume [SWSUSP] Disables resume and restores original swap space. no-scroll [VGA] Disables scrollback. This is required for the Braillex ib80-piezo Braille reader made by F.H. Papenmeier (Germany). nosbagart [IA-64] nosep [BUGS=X86-32] Disables x86 SYSENTER/SYSEXIT support. nosmp [SMP] Tells an SMP kernel to act as a UP kernel, and disable the IO APIC. legacy for &quot;maxcpus=0&quot;. nosoftlockup [KNL] Disable the soft-lockup detector. noswapaccount [KNL] Disable accounting of swap in memory resource controller. (See Documentation/cgroups/memory.txt) nosync [HW,M68K] Disables sync negotiation for all devices. notsc [BUGS=X86-32] Disable Time Stamp Counter nousb [USB] Disable the USB subsystem nowatchdog [KNL] Disable the lockup detector (NMI watchdog). nowb [ARM] nox2apic [X86-64,APIC] Do not enable x2APIC mode. nptcg= [IA64] Override max number of concurrent global TLB purges which is reported from either PAL_VM_SUMMARY or SAL PALO. nr_cpus= [SMP] Maximum number of processors that an SMP kernel could support. nr_cpus=n : n &gt;= 1 limits the kernel to supporting &#39;n&#39; processors. Later in runtime you can not use hotplug cpu feature to put more cpu back to online. just like you compile the kernel NR_CPUS=n nr_uarts= [SERIAL] maximum number of UARTs to be registered. numa_zonelist_order= [KNL, BOOT] Select zonelist order for NUMA. one of [&#39;zone&#39;, &#39;node&#39;, &#39;default&#39;] can be specified This can be set from sysctl after boot. See Documentation/sysctl/vm.txt for details. ohci1394_dma=early [HW] enable debugging via the ohci1394 driver. See Documentation/debugging-via-ohci1394.txt for more info. olpc_ec_timeout= [OLPC] ms delay when issuing EC commands Rather than timing out after 20 ms if an EC command is not properly ACKed, override the length of the timeout. We have interrupts disabled while waiting for the ACK, so if this is set too high interrupts *may* be lost! OMGZOMBIES BRRRAAAAAAIIIIINNNNNSSSSSSSS opl3= [HW,OSS] Format: &lt;io&gt; oprofile.timer= [HW] Use timer interrupt instead of performance counters oprofile.cpu_type= Force an oprofile cpu type This might be useful if you have an older oprofile userland or if you want common events. Format: &#123; arch_perfmon &#125; arch_perfmon: [X86] Force use of architectural perfmon on Intel CPUs instead of the CPU specific event set. osst= [HW,SCSI] SCSI Tape Driver Format: &lt;buffer_size&gt;,&lt;write_threshold&gt; See also Documentation/scsi/st.txt. panic= [KNL] Kernel behaviour on panic Format: &lt;timeout&gt; panic_on_warn [ X86 ] panic() instead of WARN(). Useful to cause kdump on a WARN(). parkbd.port= [HW] Parallel port number the keyboard adapter is connected to, default is 0. Format: &lt;parport#&gt; parkbd.mode= [HW] Parallel port keyboard adapter mode of operation, 0 for XT, 1 for AT (default is AT). Format: &lt;mode&gt; parport= [HW,PPT] Specify parallel ports. 0 disables. Format: &#123; 0 | auto | 0xBBB[,IRQ[,DMA]] &#125; Use &#39;auto&#39; to force the driver to use any IRQ/DMA settings detected (the default is to ignore detected IRQ/DMA settings because of possible conflicts). You can specify the base address, IRQ, and DMA settings; IRQ and DMA should be numbers, or &#39;auto&#39; (for using detected settings on that particular port), or &#39;nofifo&#39; (to avoid using a FIFO even if it is detected). Parallel ports are assigned in the order they are specified on the command line, starting with parport0. parport_init_mode= [HW,PPT] Configure VIA parallel port to operate in a specific mode. This is necessary on Pegasos computer where firmware has no options for setting up parallel port mode and sets it to spp. Currently this function knows 686a and 8231 chips. Format: [spp|ps2|epp|ecp|ecpepp] pas2= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma16&gt;,&lt;sb_io&gt;,&lt;sb_irq&gt;,&lt;sb_dma&gt;,&lt;sb_dma16&gt; pas16= [HW,SCSI] See header of drivers/scsi/pas16.c. pause_on_oops= Halt all CPUs after the first oops has been printed for the specified number of seconds. This is to be used if your oopses keep scrolling off the screen. pcbit= [HW,ISDN] pcd. [PARIDE] See header of drivers/block/paride/pcd.c. See also Documentation/blockdev/paride.txt. pci=option[,option...] [PCI] various PCI subsystem options: earlydump [X86] dump PCI config space before the kernel changes anything off [X86] don&#39;t probe for the PCI bus bios [X86-32] force use of PCI BIOS, don&#39;t access the hardware directly. Use this if your machine has a non-standard PCI host bridge. nobios [X86-32] disallow use of PCI BIOS, only direct hardware access methods are allowed. Use this if you experience crashes upon bootup and you suspect they are caused by the BIOS. conf1 [X86] Force use of PCI Configuration Mechanism 1. conf2 [X86] Force use of PCI Configuration Mechanism 2. noaer [PCIE] If the PCIEAER kernel config parameter is enabled, this kernel boot option can be used to disable the use of PCIE advanced error reporting. nodomains [PCI] Disable support for multiple PCI root domains (aka PCI segments, in ACPI-speak). nommconf [X86] Disable use of MMCONFIG for PCI Configuration check_enable_amd_mmconf [X86] check for and enable properly configured MMIO access to PCI config space on AMD family 10h CPU msi [MSI] If the PCI_MSI kernel config parameter is enabled, this kernel boot option can be used to enable the use of MSI interrupts system-wide. nomsi [MSI] If the PCI_MSI kernel config parameter is enabled, this kernel boot option can be used to disable the use of MSI interrupts system-wide. noioapicquirk [APIC] Disable all boot interrupt quirks. Safety option to keep boot IRQs enabled. This should never be necessary. ioapicreroute [APIC] Enable rerouting of boot IRQs to the primary IO-APIC for bridges that cannot disable boot IRQs. This fixes a source of spurious IRQs when the system masks IRQs. noioapicreroute [APIC] Disable workaround that uses the boot IRQ equivalent of an IRQ that connects to a chipset where boot IRQs cannot be disabled. The opposite of ioapicreroute. biosirq [X86-32] Use PCI BIOS calls to get the interrupt routing table. These calls are known to be buggy on several machines and they hang the machine when used, but on other computers it&#39;s the only way to get the interrupt routing table. Try this option if the kernel is unable to allocate IRQs or discover secondary PCI buses on your motherboard. rom [X86] Assign address space to expansion ROMs. Use with caution as certain devices share address decoders between ROMs and other resources. norom [X86] Do not assign address space to expansion ROMs that do not already have BIOS assigned address ranges. nobar [X86] Do not assign address space to the BARs that weren&#39;t assigned by the BIOS. irqmask=0xMMMM [X86] Set a bit mask of IRQs allowed to be assigned automatically to PCI devices. You can make the kernel exclude IRQs of your ISA cards this way. pirqaddr=0xAAAAA [X86] Specify the physical address of the PIRQ table (normally generated by the BIOS) if it is outside the F0000h-100000h range. lastbus=N [X86] Scan all buses thru bus #N. Can be useful if the kernel is unable to find your secondary buses and you want to tell it explicitly which ones they are. assign-busses [X86] Always assign all PCI bus numbers ourselves, overriding whatever the firmware may have done. usepirqmask [X86] Honor the possible IRQ mask stored in the BIOS $PIR table. This is needed on some systems with broken BIOSes, notably some HP Pavilion N5400 and Omnibook XE3 notebooks. This will have no effect if ACPI IRQ routing is enabled. noacpi [X86] Do not use ACPI for IRQ routing or for PCI scanning. use_crs [X86] Use PCI host bridge window information from ACPI. On BIOSes from 2008 or later, this is enabled by default. If you need to use this, please report a bug. nocrs [X86] Ignore PCI host bridge windows from ACPI. If you need to use this, please report a bug. routeirq Do IRQ routing for all PCI devices. This is normally done in pci_enable_device(), so this option is a temporary workaround for broken drivers that don&#39;t call it. skip_isa_align [X86] do not align io start addr, so can handle more pci cards firmware [ARM] Do not re-enumerate the bus but instead just use the configuration from the bootloader. This is currently used on IXP2000 systems where the bus has to be configured a certain way for adjunct CPUs. noearly [X86] Don&#39;t do any early type 1 scanning. This might help on some broken boards which machine check when some devices&#39; config space is read. But various workarounds are disabled and some IOMMU drivers will not work. bfsort Sort PCI devices into breadth-first order. This sorting is done to get a device order compatible with older (&lt;= 2.4) kernels. nobfsort Don&#39;t sort PCI devices into breadth-first order. pcie_bus_tune_off Disable PCIe MPS (Max Payload Size) tuning and use the BIOS-configured MPS defaults. pcie_bus_safe Set every device&#39;s MPS to the largest value supported by all devices below the root complex. pcie_bus_perf Set device MPS to the largest allowable MPS based on its parent bus. Also set MRRS (Max Read Request Size) to the largest supported value (no larger than the MPS that the device or bus can support) for best performance. pcie_bus_peer2peer Set every device&#39;s MPS to 128B, which every device is guaranteed to support. This configuration allows peer-to-peer DMA between any pair of devices, possibly at the cost of reduced performance. This also guarantees that hot-added devices will work. cbiosize=nn[KMG] The fixed amount of bus space which is reserved for the CardBus bridge&#39;s IO window. The default value is 256 bytes. cbmemsize=nn[KMG] The fixed amount of bus space which is reserved for the CardBus bridge&#39;s memory window. The default value is 64 megabytes. resource_alignment= Format: [&lt;order of align&gt;@][&lt;domain&gt;:]&lt;bus&gt;:&lt;slot&gt;.&lt;func&gt;[; ...] Specifies alignment and device to reassign aligned memory resources. If &lt;order of align&gt; is not specified, PAGE_SIZE is used as alignment. PCI-PCI bridge can be specified, if resource windows need to be expanded. ecrc= Enable/disable PCIe ECRC (transaction layer end-to-end CRC checking). bios: Use BIOS/firmware settings. This is the the default. off: Turn ECRC off on: Turn ECRC on. realloc= Enable/disable reallocating PCI bridge resources if allocations done by BIOS are too small to accommodate resources required by all child devices. off: Turn realloc off on: Turn realloc on. realloc same as realloc=on nosriov [HW] Disable SRIOV support in kernel. Please report a bug if you use this parameter. sriov [HW] Enable SRIOV support in kernel. noari do not use PCIe ARI. pcie_aspm= [PCIE] Forcibly enable or disable PCIe Active State Power Management. off Disable ASPM. force Enable ASPM even on devices that claim not to support it. WARNING: Forcing ASPM on may cause system lockups. pcie_hp= [PCIE] PCI Express Hotplug driver options: nomsi Do not use MSI for PCI Express Native Hotplug (this makes all PCIe ports use INTx for hotplug services). pcie_ports= [PCIE] PCIe ports handling: compat Treat PCIe ports as PCI-to-PCI bridges, disable the PCIe ports driver. pcmv= [HW,PCMCIA] BadgePAD 4 pd. [PARIDE] See Documentation/blockdev/paride.txt. pdcchassis= [PARISC,HW] Disable/Enable PDC Chassis Status codes at boot time. Format: &#123; 0 | 1 &#125; See arch/parisc/kernel/pdc_chassis.c percpu_alloc= Select which percpu first chunk allocator to use. Currently supported values are &quot;embed&quot; and &quot;page&quot;. Archs may support subset or none of the selections. See comments in mm/percpu.c for details on each allocator. This parameter is primarily for debugging and performance comparison. pf. [PARIDE] See Documentation/blockdev/paride.txt. pg. [PARIDE] See Documentation/blockdev/paride.txt. physefi [X86] Run EFI in physical mode rather than virtual mode. pirq= [SMP,APIC] Manual mp-table setup See Documentation/x86/i386/IO-APIC.txt. plip= [PPT,NET] Parallel port network link Format: &#123; parport&lt;nr&gt; | timid | 0 &#125; See also Documentation/parport.txt. pmtmr= [X86] Manual setup of pmtmr I/O Port. Override pmtimer IOPort with a hex value. e.g. pmtmr=0x508 pnp.debug [PNP] Enable PNP debug messages. This depends on the CONFIG_PNP_DEBUG_MESSAGES option. pnpacpi= [ACPI] &#123; off &#125; pnpbios= [ISAPNP] &#123; on | off | curr | res | no-curr | no-res &#125; pnp_reserve_irq= [ISAPNP] Exclude IRQs for the autoconfiguration pnp_reserve_dma= [ISAPNP] Exclude DMAs for the autoconfiguration pnp_reserve_io= [ISAPNP] Exclude I/O ports for the autoconfiguration Ranges are in pairs (I/O port base and size). pnp_reserve_mem= [ISAPNP] Exclude memory regions for the autoconfiguration. Ranges are in pairs (memory base and size). ports= [IP_VS_FTP] IPVS ftp helper module Default is 21. Up to 8 (IP_VS_APP_MAX_PORTS) ports may be specified. Format: &lt;port&gt;,&lt;port&gt;.... print-fatal-signals= [KNL] debug: print fatal signals print-fatal-signals=1: print segfault info to the kernel console. default: off. printk.always_kmsg_dump= Trigger kmsg_dump for cases other than kernel oops or panics Format: &lt;bool&gt; (1/Y/y=enable, 0/N/n=disable) default: disabled printk.time= Show timing data prefixed to each printk message line Format: &lt;bool&gt; (1/Y/y=enable, 0/N/n=disable) processor.max_cstate= [HW,ACPI] Limit processor to maximum C-state max_cstate=9 overrides any DMI blacklist limit. processor.nocst [HW,ACPI] Ignore the _CST method to determine C-states, instead using the legacy FADT method profile= [KNL] Enable kernel profiling via /proc/profile Format: [schedule,]&lt;number&gt; Param: &quot;schedule&quot; - profile schedule points. Param: &lt;number&gt; - step/bucket size as a power of 2 for statistical time based profiling. Param: &quot;sleep&quot; - profile D-state sleeping (millisecs). Requires CONFIG_SCHEDSTATS Param: &quot;kvm&quot; - profile VM exits. prompt_ramdisk= [RAM] List of RAM disks to prompt for floppy disk before loading. See Documentation/blockdev/ramdisk.txt. psmouse.proto= [HW,MOUSE] Highest PS2 mouse protocol extension to probe for; one of (bare|imps|exps|lifebook|any). psmouse.rate= [HW,MOUSE] Set desired mouse report rate, in reports per second. psmouse.resetafter= [HW,MOUSE] Try to reset the device after so many bad packets (0 = never). psmouse.resolution= [HW,MOUSE] Set desired mouse resolution, in dpi. psmouse.smartscroll= [HW,MOUSE] Controls Logitech smartscroll autorepeat. 0 = disabled, 1 = enabled (default). pss= [HW,OSS] Personal Sound System (ECHO ESC614) Format: &lt;io&gt;,&lt;mss_io&gt;,&lt;mss_irq&gt;,&lt;mss_dma&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; pstore.backend= Specify the name of the pstore backend to use pt. [PARIDE] See Documentation/blockdev/paride.txt. pti= [X86_64] Control Page Table Isolation of user and kernel address spaces. Disabling this feature removes hardening, but improves performance of system calls and interrupts. on - unconditionally enable off - unconditionally disable auto - kernel detects whether your CPU model is vulnerable to issues that PTI mitigates Not specifying this option is equivalent to pti=auto. nopti [X86_64] Equivalent to pti=off pty.legacy_count= [KNL] Number of legacy pty&#39;s. Overwrites compiled-in default number. quiet [KNL] Disable most log messages quirk_i82576_sriov [RHEL6: HW, PCI] Quirk for defaulting to old Flash Memory Space for pre-production SRIOV NIC hardware. If you require this on production hardware, please contact your hardware vendor for a BIOS update. r128= [HW,DRM] raid= [HW,RAID] See Documentation/md.txt. ramdisk_blocksize= [RAM] See Documentation/blockdev/ramdisk.txt. ramdisk_size= [RAM] Sizes of RAM disks in kilobytes See Documentation/blockdev/ramdisk.txt. rcupdate.blimit= [KNL,BOOT] Set maximum number of finished RCU callbacks to process in one batch. rcupdate.qhimark= [KNL,BOOT] Set threshold of queued RCU callbacks over which batch limiting is disabled. rcupdate.qlowmark= [KNL,BOOT] Set threshold of queued RCU callbacks below which batch limiting is re-enabled. rdinit= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /init from the ramdisk, used for early userspace startup. See initrd. reboot= [BUGS=X86-32,BUGS=ARM,BUGS=IA-64] Rebooting mode Format: &lt;reboot_mode&gt;[,&lt;reboot_mode2&gt;[,...]] See arch/*/kernel/reboot.c or arch/*/kernel/process.c relax_domain_level= [KNL, SMP] Set scheduler&#39;s default relax_domain_level. See Documentation/cgroups/cpusets.txt. reserve= [KNL,BUGS] Force the kernel to ignore some iomem area reservetop= [X86-32] Format: nn[KMG] Reserves a hole at the top of the kernel virtual address space. reset_devices [KNL] Force drivers to reset the underlying device during initialization. resume= [SWSUSP] Specify the partition device for software suspend resume_offset= [SWSUSP] Specify the offset from the beginning of the partition given by &quot;resume=&quot; at which the swap header is located, in &lt;PAGE_SIZE&gt; units (needed only for swap files). See Documentation/power/swsusp-and-swap-files.txt retain_initrd [RAM] Keep initrd memory after extraction rhash_entries= [KNL,NET] Set number of hash buckets for route cache riscom8= [HW,SERIAL] Format: &lt;io_board1&gt;[,&lt;io_board2&gt;[,...&lt;io_boardN&gt;]] ro [KNL] Mount root device read-only on boot root= [KNL] Root filesystem rootdelay= [KNL] Delay (in seconds) to pause before attempting to mount the root filesystem rootflags= [KNL] Set root filesystem mount option string rootfstype= [KNL] Set root filesystem type rootwait [KNL] Wait (indefinitely) for root device to show up. Useful for devices that are detected asynchronously (e.g. USB and MMC devices). root_plug.vendor_id= [ROOTPLUG] Override the default vendor ID root_plug.product_id= [ROOTPLUG] Override the default product ID root_plug.debug= [ROOTPLUG] Enable debugging output rw [KNL] Mount root device read-write on boot S [KNL] Run init in single mode sa1100ir [NET] See drivers/net/irda/sa1100_ir.c. sbni= [NET] Granch SBNI12 leased line adapter sched_debug [KNL] Enables verbose scheduler debug messages. sc1200wdt= [HW,WDT] SC1200 WDT (watchdog) driver Format: &lt;io&gt;[,&lt;timeout&gt;[,&lt;isapnp&gt;]] scsi_debug_*= [SCSI] See drivers/scsi/scsi_debug.c. scsi_default_dev_flags= [SCSI] SCSI default device flags Format: &lt;integer&gt; scsi_dev_flags= [SCSI] Black/white list entry for vendor and model Format: &lt;vendor&gt;:&lt;model&gt;:&lt;flags&gt; (flags are integer value) scsi_logging_level= [SCSI] a bit mask of logging levels See drivers/scsi/scsi_logging.h for bits. Also settable via sysctl at dev.scsi.logging_level (/proc/sys/dev/scsi/logging_level). There is also a nice &#39;scsi_logging_level&#39; script in the S390-tools package, available for download at http://www-128.ibm.com/developerworks/linux/linux390/s390-tools-1.5.4.html scsi_mod.scan= [SCSI] sync (default) scans SCSI busses as they are discovered. async scans them in kernel threads, allowing boot to proceed. none ignores them, expecting user space to do the scan. security= [SECURITY] Choose a security module to enable at boot. If this boot parameter is not specified, only the first security module asking for security registration will be loaded. An invalid security module name will be treated as if no module has been chosen. selinux= [SELINUX] Disable or enable SELinux at boot time. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- disable. 1 -- enable. Default value is set via kernel config option. If enabled at boot time, /selinux/disable can be used later to disable prior to initial policy load. serialnumber [BUGS=X86-32] shapers= [NET] Maximal number of shapers. show_msr= [x86] show boot-time MSR settings Format: &#123; &lt;integer&gt; &#125; Show boot-time (BIOS-initialized) MSR settings. The parameter means the number of CPUs to show, for example 1 means boot CPU only. sim710= [SCSI,HW] See header of drivers/scsi/sim710.c. simeth= [IA-64] simscsi= slram= [HW,MTD] slub_debug[=options[,slabs]] [MM, SLUB] Enabling slub_debug allows one to determine the culprit if slab objects become corrupted. Enabling slub_debug can create guard zones around objects and may poison objects when not in use. Also tracks the last alloc / free. For more information see Documentation/vm/slub.txt. slub_max_order= [MM, SLUB] Determines the maximum allowed order for slabs. A high setting may cause OOMs due to memory fragmentation. For more information see Documentation/vm/slub.txt. slub_min_objects= [MM, SLUB] The minimum number of objects per slab. SLUB will increase the slab order up to slub_max_order to generate a sufficiently large slab able to contain the number of objects indicated. The higher the number of objects the smaller the overhead of tracking slabs and the less frequently locks need to be acquired. For more information see Documentation/vm/slub.txt. slub_min_order= [MM, SLUB] Determines the mininum page order for slabs. Must be lower than slub_max_order. For more information see Documentation/vm/slub.txt. slub_nomerge [MM, SLUB] Disable merging of slabs with similar size. May be necessary if there is some reason to distinguish allocs to different slabs. Debug options disable merging on their own. For more information see Documentation/vm/slub.txt. smart2= [HW] Format: &lt;io1&gt;[,&lt;io2&gt;[,...,&lt;io8&gt;]] smbios_26_uuid [X86] Display UUID in SMBIOS 2.6 format smp-alt-boot [X86-32,SMP] On a hotplug CPU system, only attempt to substitute SMP alternatives once at boot. smsc-ircc2.nopnp [HW] Don&#39;t use PNP to discover SMC devices smsc-ircc2.ircc_cfg= [HW] Device configuration I/O port smsc-ircc2.ircc_sir= [HW] SIR base I/O port smsc-ircc2.ircc_fir= [HW] FIR base I/O port smsc-ircc2.ircc_irq= [HW] IRQ line smsc-ircc2.ircc_dma= [HW] DMA channel smsc-ircc2.ircc_transceiver= [HW] Transceiver type: 0: Toshiba Satellite 1800 (GP data pin select) 1: Fast pin select (default) 2: ATC IRMode snd-ad1816a= [HW,ALSA] snd-ad1848= [HW,ALSA] snd-ali5451= [HW,ALSA] snd-als100= [HW,ALSA] snd-als4000= [HW,ALSA] snd-azt2320= [HW,ALSA] snd-cmi8330= [HW,ALSA] snd-cmipci= [HW,ALSA] snd-cs4231= [HW,ALSA] snd-cs4232= [HW,ALSA] snd-cs4236= [HW,ALSA] snd-cs4281= [HW,ALSA] snd-cs46xx= [HW,ALSA] snd-dt019x= [HW,ALSA] snd-dummy= [HW,ALSA] snd-emu10k1= [HW,ALSA] snd-ens1370= [HW,ALSA] snd-ens1371= [HW,ALSA] snd-es968= [HW,ALSA] snd-es1688= [HW,ALSA] snd-es18xx= [HW,ALSA] snd-es1938= [HW,ALSA] snd-es1968= [HW,ALSA] snd-fm801= [HW,ALSA] snd-gusclassic= [HW,ALSA] snd-gusextreme= [HW,ALSA] snd-gusmax= [HW,ALSA] snd-hdsp= [HW,ALSA] snd-ice1712= [HW,ALSA] snd-intel8x0= [HW,ALSA] snd-interwave= [HW,ALSA] snd-interwave-stb= [HW,ALSA] snd-korg1212= [HW,ALSA] snd-maestro3= [HW,ALSA] snd-mpu401= [HW,ALSA] snd-mtpav= [HW,ALSA] snd-nm256= [HW,ALSA] snd-opl3sa2= [HW,ALSA] snd-opti92x-ad1848= [HW,ALSA] snd-opti92x-cs4231= [HW,ALSA] snd-opti93x= [HW,ALSA] snd-pmac= [HW,ALSA] snd-rme32= [HW,ALSA] snd-rme96= [HW,ALSA] snd-rme9652= [HW,ALSA] snd-sb8= [HW,ALSA] snd-sb16= [HW,ALSA] snd-sbawe= [HW,ALSA] snd-serial= [HW,ALSA] snd-sgalaxy= [HW,ALSA] snd-sonicvibes= [HW,ALSA] snd-sun-amd7930= [HW,ALSA] snd-sun-cs4231= [HW,ALSA] snd-trident= [HW,ALSA] snd-usb-audio= [HW,ALSA,USB] snd-via82xx= [HW,ALSA] snd-virmidi= [HW,ALSA] snd-wavefront= [HW,ALSA] snd-ymfpci= [HW,ALSA] softirq_2ms_loop [KNL] Set softirq handling to 2ms maximum. Default is existing RHEL6 behaviour. softlockup_panic= [KNL] Should the soft-lockup detector generate panics. softlockup_all_cpu_backtrace= [KNL] Should the soft-lockup detector generate backtraces on all cpus. Format: &lt;integer&gt; sonypi.*= [HW] Sony Programmable I/O Control Device driver See Documentation/sonypi.txt specialix= [HW,SERIAL] Specialix multi-serial port adapter See Documentation/serial/specialix.txt. spectre_v2= [X86] Control mitigation of Spectre variant 2 (indirect branch speculation) vulnerability. on - unconditionally enable off - unconditionally disable auto - kernel detects whether your CPU model is vulnerable Selecting &#39;on&#39; will, and &#39;auto&#39; may, choose a mitigation method at run time according to the CPU, the available microcode, the setting of the CONFIG_RETPOLINE configuration option, and the compiler with which the kernel was built. Specific mitigations can also be selected manually: retpoline - replace indirect branches in kernel with retpolines retpoline,ibrs_user - replace indirect branches with retpolines and use IBRS to protect userland ibrs - use IBRS to protect kernel ibrs_always - use IBRS to protect both kernel and userland Not specifying this option is equivalent to spectre_v2=auto. spec_store_bypass_disable= [HW] Control Speculative Store Bypass (SSB) Disable mitigation (Speculative Store Bypass vulnerability) Certain CPUs are vulnerable to an exploit against a a common industry wide performance optimization known as &quot;Speculative Store Bypass&quot; in which recent stores to the same memory location may not be observed by later loads during speculative execution. The idea is that such stores are unlikely and that they can be detected prior to instruction retirement at the end of a particular speculation execution window. In vulnerable processors, the speculatively forwarded store can be used in a cache side channel attack, for example to read memory to which the attacker does not directly have access (e.g. inside sandboxed code). This parameter controls whether the Speculative Store Bypass optimization is used. on - Unconditionally disable Speculative Store Bypass off - Unconditionally enable Speculative Store Bypass auto - Kernel detects whether the CPU model contains an implementation of Speculative Store Bypass and picks the most appropriate mitigation. If the CPU is not vulnerable, &quot;off&quot; is selected. If the CPU is vulnerable the default mitigation is architecture and Kconfig dependent. See below. prctl - Control Speculative Store Bypass per thread via prctl. Speculative Store Bypass is enabled for a process by default. The state of the control is inherited on fork. seccomp - Same as &quot;prctl&quot; above, but all seccomp threads will disable SSB unless they explicitly opt out. Not specifying this option is equivalent to spec_store_bypass_disable=auto. Default mitigations: X86: If CONFIG_SECCOMP=y &quot;seccomp&quot;, otherwise &quot;prctl&quot; spia_io_base= [HW,MTD] spia_fio_base= spia_pedr= spia_peddr= srbds= [X86,INTEL] Control the Special Register Buffer Data Sampling (SRBDS) mitigation. Certain CPUs are vulnerable to an MDS-like exploit which can leak bits from the random number generator. By default, this issue is mitigated by microcode. However, the microcode fix can cause the RDRAND and RDSEED instructions to become much slower. Among other effects, this will result in reduced throughput from /dev/urandom. The microcode mitigation can be disabled with the following option: off: Disable mitigation and remove performance impact to RDRAND and RDSEED sscape= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; st= [HW,SCSI] SCSI tape parameters (buffers, etc.) See Documentation/scsi/st.txt. stack_guard_gap= [MM] override the default stack gap protection. The value is in page units and it defines how many pages prior to (for stacks growing down) resp. after (for stacks growing up) the main stack are reserved for no other mapping. Default value is 256 pages. stacktrace [FTRACE] Enabled the stack tracer on boot up. sti= [PARISC,HW] Format: &lt;num&gt; Set the STI (builtin display/keyboard on the HP-PARISC machines) console (graphic card) which should be used as the initial boot-console. See also comment in drivers/video/console/sticore.c. sti_font= [HW] See comment in drivers/video/console/sticore.c. stifb= [HW] Format: bpp:&lt;bpp1&gt;[:&lt;bpp2&gt;[:&lt;bpp3&gt;...]] sunrpc.min_resvport= sunrpc.max_resvport= [NFS,SUNRPC] SunRPC servers often require that client requests originate from a privileged port (i.e. a port in the range 0 &lt; portnr &lt; 1024). An administrator who wishes to reserve some of these ports for other uses may adjust the range that the kernel&#39;s sunrpc client considers to be privileged using these two parameters to set the minimum and maximum port values. sunrpc.pool_mode= [NFS] Control how the NFS server code allocates CPUs to service thread pools. Depending on how many NICs you have and where their interrupts are bound, this option will affect which CPUs will do NFS serving. Note: this parameter cannot be changed while the NFS server is running. auto the server chooses an appropriate mode automatically using heuristics global a single global pool contains all CPUs percpu one pool for each CPU pernode one pool for each NUMA node (equivalent to global on non-NUMA machines) sunrpc.tcp_slot_table_entries= sunrpc.udp_slot_table_entries= [NFS,SUNRPC] Sets the upper limit on the number of simultaneous RPC calls that can be sent from the client to a server. Increasing these values may allow you to improve throughput, but will also increase the amount of memory reserved for use by the client. swiotlb= [IA-64] Number of I/O TLB slabs switches= [HW,M68k] sym53c416= [HW,SCSI] See header of drivers/scsi/sym53c416.c. sysrq_always_enabled [KNL] Ignore sysrq setting - this boot parameter will neutralize any effect of /proc/sys/kernel/sysrq. Useful for debugging. t128= [HW,SCSI] See header of drivers/scsi/t128.c. tdfx= [HW,DRM] test_suspend= [SUSPEND] Specify &quot;mem&quot; (for Suspend-to-RAM) or &quot;standby&quot; (for standby suspend) as the system sleep state to briefly enter during system startup. The system is woken from this state using a wakeup-capable RTC alarm. thash_entries= [KNL,NET] Set number of hash buckets for TCP connection thermal.act= [HW,ACPI] -1: disable all active trip points in all thermal zones &lt;degrees C&gt;: override all lowest active trip points thermal.crt= [HW,ACPI] -1: disable all critical trip points in all thermal zones &lt;degrees C&gt;: override all critical trip points thermal.nocrt= [HW,ACPI] Set to disable actions on ACPI thermal zone critical and hot trip points. thermal.off= [HW,ACPI] 1: disable ACPI thermal control thermal.psv= [HW,ACPI] -1: disable all passive trip points &lt;degrees C&gt;: override all passive trip points to this value thermal.tzp= [HW,ACPI] Specify global default ACPI thermal zone polling rate &lt;deci-seconds&gt;: poll all this frequency 0: no polling (default) tmscsim= [HW,SCSI] See comment before function dc390_setup() in drivers/scsi/tmscsim.c. topology= [S390] Format: &#123;off | on&#125; Specify if the kernel should make use of the cpu topology informations if the hardware supports these. The scheduler will make use of these informations and e.g. base its process migration decisions on it. Default is on. tp720= [HW,PS2] tpm_suspend_pcr=[HW,TPM] Format: integer pcr id Specify that at suspend time, the tpm driver should extend the specified pcr with zeros, as a workaround for some chips which fail to flush the last written pcr on TPM_SaveState. This will guarantee that all the other pcrs are saved. trace_buf_size=nn[KMG] [FTRACE] will set tracing buffer size. trace_event=[event-list] [FTRACE] Set and start specified trace events in order to facilitate early boot debugging. See also Documentation/trace/events.txt trix= [HW,OSS] MediaTrix AudioTrix Pro Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;sb_io&gt;,&lt;sb_irq&gt;,&lt;sb_dma&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; tsc= Disable clocksource stability checks for TSC. Format: &lt;string&gt; [x86] reliable: mark tsc clocksource as reliable, this disables clocksource verification at runtime, as well as the stability checks done at bootup. Used to enable high-resolution timer mode on older hardware, and in virtualized environment. tsc_init_debug [RHEL] Output additional information about the TSC during system boot. tsx_async_abort= [X86,INTEL] Control mitigation for the TSX Async Abort (TAA) vulnerability. Similar to Micro-architectural Data Sampling (MDS) certain CPUs that support Transactional Synchronization Extensions (TSX) are vulnerable to an exploit against CPU internal buffers which can forward information to a disclosure gadget under certain conditions. In vulnerable processors, the speculatively forwarded data can be used in a cache side channel attack, to access data to which the attacker does not have direct access. This parameter controls the TAA mitigation. The options are: full - Enable TAA mitigation on vulnerable CPUs if TSX is enabled. full,nosmt - Enable TAA mitigation and disable SMT on vulnerable CPUs. If TSX is disabled, SMT is not disabled because CPU is not vulnerable to cross-thread TAA attacks. off - Unconditionally disable TAA mitigation Not specifying this option is equivalent to tsx_async_abort=full. On CPUs which are MDS affected and deploy MDS mitigation, TAA mitigation is not required and doesn&#39;t provide any additional mitigation. For details see: Documentation/admin-guide/hw-vuln/tsx_async_abort.rst turbografx.map[2|3]= [HW,JOY] TurboGraFX parallel port interface Format: &lt;port#&gt;,&lt;js1&gt;,&lt;js2&gt;,&lt;js3&gt;,&lt;js4&gt;,&lt;js5&gt;,&lt;js6&gt;,&lt;js7&gt; See also Documentation/input/joystick-parport.txt u14-34f= [HW,SCSI] UltraStor 14F/34F SCSI host adapter See header of drivers/scsi/u14-34f.c. uart401= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; uart6850= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; uhci-hcd.ignore_oc= [USB] Ignore overcurrent events (default N). Some badly-designed motherboards generate lots of bogus events, for ports that aren&#39;t wired to anything. Set this parameter to avoid log spamming. Note that genuine overcurrent events won&#39;t be reported either. unknown_nmi_panic [X86] Set unknown_nmi_panic=1 early on boot. usbcore.autosuspend= [USB] The autosuspend time delay (in seconds) used for newly-detected USB devices (default 2). This is the time required before an idle device will be autosuspended. Devices for which the delay is set to a negative value won&#39;t be autosuspended at all. usbcore.usbfs_snoop= [USB] Set to log all usbfs traffic (default 0 = off). usbcore.blinkenlights= [USB] Set to cycle leds on hubs (default 0 = off). usbcore.old_scheme_first= [USB] Start with the old device initialization scheme (default 0 = off). usbcore.usbfs_memory_mb= [USB] Memory limit (in MB) for buffers allocated by usbfs (default = 16, 0 = max = 2047). usbcore.use_both_schemes= [USB] Try the other device initialization scheme if the first one fails (default 1 = enabled). usbcore.initial_descriptor_timeout= [USB] Specifies timeout for the initial 64-byte USB_REQ_GET_DESCRIPTOR request in milliseconds (default 5000 = 5.0 seconds). usbhid.mousepoll= [USBHID] The interval which mice are to be polled at. usb-storage.delay_use= [UMS] The delay in seconds before a new device is scanned for Logical Units (default 5). usb-storage.quirks= [UMS] A list of quirks entries to supplement or override the built-in unusual_devs list. List entries are separated by commas. Each entry has the form VID:PID:Flags where VID and PID are Vendor and Product ID values (4-digit hex numbers) and Flags is a set of characters, each corresponding to a common usb-storage quirk flag as follows: a = SANE_SENSE (collect more than 18 bytes of sense data); b = BAD_SENSE (don&#39;t collect more than 18 bytes of sense data); c = FIX_CAPACITY (decrease the reported device capacity by one sector); h = CAPACITY_HEURISTICS (decrease the reported device capacity by one sector if the number is odd); i = IGNORE_DEVICE (don&#39;t bind to this device); l = NOT_LOCKABLE (don&#39;t try to lock and unlock ejectable media); m = MAX_SECTORS_64 (don&#39;t transfer more than 64 sectors = 32 KB at a time); o = CAPACITY_OK (accept the capacity reported by the device); r = IGNORE_RESIDUE (the device reports bogus residue values); s = SINGLE_LUN (the device has only one Logical Unit); w = NO_WP_DETECT (don&#39;t test whether the medium is write-protected). Example: quirks=0419:aaf5:rl,0421:0433:rc userpte= [X86] Flags controlling user PTE allocations. nohigh = do not allocate PTE pages in HIGHMEM regardless of setting of CONFIG_HIGHPTE. vdso= [X86,SH] vdso=2: enable compat VDSO (default with COMPAT_VDSO) vdso=1: enable VDSO (default) vdso=0: disable VDSO mapping vdso32= [X86] vdso32=2: enable compat VDSO (default with COMPAT_VDSO) vdso32=1: enable 32-bit VDSO (default) vdso32=0: disable 32-bit VDSO mapping vector= [IA-64,SMP] vector=percpu: enable percpu vector domain video= [FB] Frame buffer configuration See Documentation/fb/modedb.txt. vga= [BOOT,X86-32] Select a particular video mode See Documentation/x86/boot.txt and Documentation/svga.txt. Use vga=ask for menu. This is actually a boot loader parameter; the value is passed to the kernel using a special protocol. vmalloc=nn[KMG] [KNL,BOOT] Forces the vmalloc area to have an exact size of &lt;nn&gt;. This can be used to increase the minimum size (128MB on x86). It can also be used to decrease the size and leave more room for directly mapped kernel RAM. vmhalt= [KNL,S390] Perform z/VM CP command after system halt. Format: &lt;command&gt; vmpanic= [KNL,S390] Perform z/VM CP command after kernel panic. Format: &lt;command&gt; vmpoff= [KNL,S390] Perform z/VM CP command after power off. Format: &lt;command&gt; vt.default_blu= [VT] Format: &lt;blue0&gt;,&lt;blue1&gt;,&lt;blue2&gt;,...,&lt;blue15&gt; Change the default blue palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_grn= [VT] Format: &lt;green0&gt;,&lt;green1&gt;,&lt;green2&gt;,...,&lt;green15&gt; Change the default green palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_red= [VT] Format: &lt;red0&gt;,&lt;red1&gt;,&lt;red2&gt;,...,&lt;red15&gt; Change the default red palette of the console. This is a 16-member array composed of values ranging from 0-255. vt.default_utf8= [VT] Format=&lt;0|1&gt; Set system-wide default UTF-8 mode for all tty&#39;s. Default is 1, i.e. UTF-8 mode is enabled for all newly opened terminals. waveartist= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt; wd33c93= [HW,SCSI] See header of drivers/scsi/wd33c93.c. wd7000= [HW,SCSI] See header of drivers/scsi/wd7000.c. wdt= [WDT] Watchdog See Documentation/watchdog/wdt.txt. x2apic_phys [X86-64,APIC] Use x2apic physical mode instead of default x2apic cluster mode on platforms supporting x2apic. xd= [HW,XT] Original XT pre-IDE (RLL encoded) disks. xd_geo= See header of drivers/block/xd.c. xen_emul_unplug= [HW,X86,XEN] Unplug Xen emulated devices Format: [unplug0,][unplug1] ide-disks -- unplug primary master IDE devices aux-ide-disks -- unplug non-primary-master IDE devices nics -- unplug network devices all -- unplug all emulated devices (NICs and IDE disks) unnecessary -- unplugging emulated devices is unnecessary even if the host did not respond to the unplug protocol never -- do not unplug even if version check succeeds xirc2ps_cs= [NET,PCMCIA] Format: &lt;irq&gt;,&lt;irq_mask&gt;,&lt;io&gt;,&lt;full_duplex&gt;,&lt;do_sound&gt;,&lt;lockup_hack&gt;[,&lt;irq2&gt;[,&lt;irq3&gt;[,&lt;irq4&gt;]]] TODO: Add documentation for ALSA options. Add more DRM drivers.","categories":[{"name":"内核文档","slug":"内核文档","permalink":"http://www.oostech.com/categories/%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/"}],"tags":[]},{"title":"RHEL5 内核参数 Kernel-2.6.18-419.el5_kernel-parameters","slug":"Kernel-2.6.18-419.el5_kernel-parameters","date":"2021-03-06T16:00:00.000Z","updated":"2021-03-06T16:00:00.000Z","comments":false,"path":"2021/03/07/Kernel-2.6.18-419.el5_kernel-parameters/","link":"","permalink":"http://www.oostech.com/2021/03/07/Kernel-2.6.18-419.el5_kernel-parameters/","excerpt":"","text":"Kernel Parameters ~~~~~~~~~~~~~~~~~ The following is a consolidated list of the kernel parameters as implemented(mostly) by the __setup() macro and sorted into English Dictionary order(defined as ignoring all punctuation and sorting digits before letters in acase insensitive manner), and with descriptions where known. Module parameters for loadable modules are specified only as theparameter name with optional ‘=’ and value as appropriate, such as: modprobe usbcore blinkenlights=1 Module parameters for modules that are built into the kernel imageare specified on the kernel command line with the module name plus‘.’ plus parameter name, with ‘=’ and value if appropriate, such as: usbcore.blinkenlights=1 This document may not be entirely up to date and comprehensive. The command“modinfo -p ${modulename}” shows a current list of all parameters of a loadablemodule. Loadable modules, after being loaded into the running kernel, alsoreveal their parameters in /sys/module/${modulename}/parameters/. Some of theseparameters may be changed at runtime by the command“echo -n ${value} &gt; /sys/module/${modulename}/parameters/${parm}”. The parameters listed below are only valid if certain kernel build options wereenabled and if respective hardware is present. The text in square brackets atthe beginning of each description states the restrictions within which aparameter is applicable: ACPI ACPI support is enabled. ALSA ALSA sound support is enabled. APIC APIC support is enabled. APM Advanced Power Management support is enabled. AX25 Appropriate AX.25 support is enabled. CD Appropriate CD support is enabled. DRM Direct Rendering Management support is enabled. EDD BIOS Enhanced Disk Drive Services (EDD) is enabled EFI EFI Partitioning (GPT) is enabled EIDE EIDE/ATAPI support is enabled. FB The frame buffer device is enabled. HW Appropriate hardware is enabled. IA-32 IA-32 aka i386 architecture is enabled. IA-64 IA-64 architecture is enabled. IOSCHED More than one I/O scheduler is enabled. IP_PNP IP DHCP, BOOTP, or RARP is enabled. ISAPNP ISA PnP code is enabled. ISDN Appropriate ISDN support is enabled. JOY Appropriate joystick support is enabled. LP Printer support is enabled. LOOP Loopback device support is enabled. M68k M68k architecture is enabled. These options have more detailed description inside of Documentation/m68k/kernel-options.txt. MCA MCA bus support is enabled. MDA MDA console support is enabled. MOUSE Appropriate mouse support is enabled. MSI Message Signaled Interrupts (PCI). MTD MTD support is enabled. NET Appropriate network support is enabled. NUMA NUMA support is enabled. GENERIC_TIME The generic timeofday code is enabled. NFS Appropriate NFS support is enabled. OSS OSS sound support is enabled. PARIDE The ParIDE subsystem is enabled. PARISC The PA-RISC architecture is enabled. PCI PCI bus support is enabled. PCMCIA The PCMCIA subsystem is enabled. PNP Plug &amp; Play support is enabled. PPC PowerPC architecture is enabled. PPT Parallel port support is enabled. PS2 Appropriate PS/2 support is enabled. RAM RAM disk support is enabled. S390 S390 architecture is enabled. SCSI Appropriate SCSI support is enabled. A lot of drivers has their options described inside of Documentation/scsi/. SELINUX SELinux support is enabled. SERIAL Serial support is enabled. SMP The kernel is an SMP kernel. SPARC Sparc architecture is enabled. SWSUSP Software suspend is enabled. TS Appropriate touchscreen support is enabled. USB USB support is enabled. USBHID USB Human Interface Device support is enabled. V4L Video For Linux support is enabled. VGA The VGA console has been enabled. VT Virtual terminal support is enabled. WDT Watchdog support is enabled. XT IBM PC/XT MFM hard disk support is enabled. X86-64 X86-64 architecture is enabled. More X86-64 boot options can be found in Documentation/x86_64/boot-options.txt . In addition, the following text indicates that the option: BUGS= Relates to possible processor bugs on the said processor. KNL Is a kernel start-up parameter. BOOT Is a boot loader parameter. Parameters denoted with BOOT are actually interpreted by the bootloader, and have no meaning to the kernel directly.Do not modify the syntax of boot loader parameters without extremeneed or coordination with &lt;Documentation/i386/boot.txt&gt;. Note that ALL kernel parameters listed below are CASE SENSITIVE, and thata trailing = on the name of any parameter states that that parameter willbe entered as an environment variable, whereas its absence indicates thatit will appear as a kernel argument readable via /proc/cmdline by programsrunning once the system is up. 53c7xx= [HW,SCSI] Amiga SCSI controllers See header of drivers/scsi/53c7xx.c. See also Documentation/scsi/ncr53c7xx.txt. acpi= [HW,ACPI] Advanced Configuration and Power Interface Format: &#123; force | off | ht | strict | noirq &#125; force -- enable ACPI if default was off off -- disable ACPI if default was on noirq -- do not use ACPI for IRQ routing ht -- run only enough ACPI to enable Hyper Threading strict -- Be less tolerant of platforms that are not strictly ACPI specification compliant. See also Documentation/pm.txt, pci=noacpi acpi_sleep= [HW,ACPI] Sleep options Format: &#123; s3_bios, s3_mode &#125; See Documentation/power/video.txt acpi_sci= [HW,ACPI] ACPI System Control Interrupt trigger mode Format: &#123; level | edge | high | low &#125; acpi_irq_balance [HW,ACPI] ACPI will balance active IRQs default in APIC mode acpi_irq_nobalance [HW,ACPI] ACPI will not move active IRQs (default) default in PIC mode acpi_irq_pci= [HW,ACPI] If irq_balance, clear listed IRQs for use by PCI Format: &lt;irq&gt;,&lt;irq&gt;... acpi_irq_isa= [HW,ACPI] If irq_balance, mark listed IRQs used by ISA Format: &lt;irq&gt;,&lt;irq&gt;... acpi_os_name= [HW,ACPI] Tell ACPI BIOS the name of the OS Format: To spoof as Windows 98: =&quot;Microsoft Windows&quot; acpi_osi= [HW,ACPI] empty param disables _OSI acpi_serialize [HW,ACPI] force serialization of AML methods acpi_skip_timer_override [HW,ACPI] Recognize and ignore IRQ0/pin2 Interrupt Override. For broken nForce2 BIOS resulting in XT-PIC timer. acpi_dbg_layer= [HW,ACPI] Format: &lt;int&gt; Each bit of the &lt;int&gt; indicates an ACPI debug layer, 1: enable, 0: disable. It is useful for boot time debugging. After system has booted up, it can be set via /proc/acpi/debug_layer. acpi_dbg_level= [HW,ACPI] Format: &lt;int&gt; Each bit of the &lt;int&gt; indicates an ACPI debug level, 1: enable, 0: disable. It is useful for boot time debugging. After system has booted up, it can be set via /proc/acpi/debug_level. acpi_fake_ecdt [HW,ACPI] Workaround failure due to BIOS lacking ECDT acpi_generic_hotkey [HW,ACPI] Allow consolidated generic hotkey driver to override platform specific driver. See also Documentation/acpi-hotkey.txt. acpi_pm_good [IA-32,X86-64] Override the pmtimer bug detection: force the kernel to assume that this machine&#39;s pmtimer latches its value and always returns good values. enable_timer_pin_1 [i386,x86-64] Enable PIN 1 of APIC timer Can be useful to work around chipset bugs (in particular on some ATI chipsets). The kernel tries to set a reasonable default. disable_timer_pin_1 [i386,x86-64] Disable PIN 1 of APIC timer Can be useful to work around chipset bugs. ad1816= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt; See also Documentation/sound/oss/AD1816. ad1848= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;type&gt; adlib= [HW,OSS] Format: &lt;io&gt; advansys= [HW,SCSI] See header of drivers/scsi/advansys.c. advwdt= [HW,WDT] Advantech WDT Format: &lt;iostart&gt;,&lt;iostop&gt; aedsp16= [HW,OSS] Audio Excel DSP 16 Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;mss_io&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; See also header of sound/oss/aedsp16.c. aha152x= [HW,SCSI] See Documentation/scsi/aha152x.txt. aha1542= [HW,SCSI] Format: &lt;portbase&gt;[,&lt;buson&gt;,&lt;busoff&gt;[,&lt;dmaspeed&gt;]] aic7xxx= [HW,SCSI] See Documentation/scsi/aic7xxx.txt. aic79xx= [HW,SCSI] See Documentation/scsi/aic79xx.txt. amijoy.map= [HW,JOY] Amiga joystick support Map of devices attached to JOY0DAT and JOY1DAT Format: &lt;a&gt;,&lt;b&gt; See also Documentation/kernel/input/joystick.txt analog.map= [HW,JOY] Analog joystick and gamepad support Specifies type or capabilities of an analog joystick connected to one of 16 gameports Format: &lt;type1&gt;,&lt;type2&gt;,..&lt;type16&gt; apc= [HW,SPARC] Power management functions (SPARCstation-4/5 + deriv.) Format: noidle Disable APC CPU standby support. SPARCstation-Fox does not play well with APC CPU idle - disable it if you have APC and your system crashes randomly. apic= [APIC,i386] Change the output verbosity whilst booting Format: &#123; quiet (default) | verbose | debug &#125; Change the amount of debugging information output when initialising the APIC and IO-APIC components. apm= [APM] Advanced Power Management See header of arch/i386/kernel/apm.c. applicom= [HW] Format: &lt;mem&gt;,&lt;irq&gt; arcrimi= [HW,NET] ARCnet - &quot;RIM I&quot; (entirely mem-mapped) cards Format: &lt;io&gt;,&lt;irq&gt;,&lt;nodeID&gt; ataflop= [HW,M68k] atarimouse= [HW,MOUSE] Atari Mouse atascsi= [HW,SCSI] Atari SCSI atkbd.extra= [HW] Enable extra LEDs and keys on IBM RapidAccess, EzKey and similar keyboards atkbd.reset= [HW] Reset keyboard during initialization atkbd.set= [HW] Select keyboard code set Format: &lt;int&gt; (2 = AT (default), 3 = PS/2) atkbd.scroll= [HW] Enable scroll wheel on MS Office and similar keyboards atkbd.softraw= [HW] Choose between synthetic and real raw mode Format: &lt;bool&gt; (0 = real, 1 = synthetic (default)) atkbd.softrepeat= [HW] Use software keyboard repeat autotest [IA64] awe= [HW,OSS] AWE32/SB32/AWE64 wave table synth Format: &lt;io&gt;,&lt;memsize&gt;,&lt;isapnp&gt; aztcd= [HW,CD] Aztech CD268 CDROM driver Format: &lt;io&gt;,0x79 (?) baycom_epp= [HW,AX25] Format: &lt;io&gt;,&lt;mode&gt; baycom_par= [HW,AX25] BayCom Parallel Port AX.25 Modem Format: &lt;io&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_par.c. baycom_ser_fdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Full Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt;[,&lt;baud&gt;] See header of drivers/net/hamradio/baycom_ser_fdx.c. baycom_ser_hdx= [HW,AX25] BayCom Serial Port AX.25 Modem (Half Duplex Mode) Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt; See header of drivers/net/hamradio/baycom_ser_hdx.c. blkmtd_device= [HW,MTD] blkmtd_erasesz= blkmtd_ro= blkmtd_bs= blkmtd_count= bttv.card= [HW,V4L] bttv (bt848 + bt878 based grabber cards) bttv.radio= Most important insmod options are available as kernel args too. bttv.pll= See Documentation/video4linux/bttv/Insmod-options bttv.tuner= and Documentation/video4linux/bttv/CARDLIST BusLogic= [HW,SCSI] See drivers/scsi/BusLogic.c, comment before function BusLogic_ParseDriverOptions(). c101= [NET] Moxa C101 synchronous serial card cachesize= [BUGS=IA-32] Override level 2 CPU cache size detection. Sometimes CPU hardware bugs make them report the cache size incorrectly. The kernel will attempt work arounds to fix known problems, but for some CPUs it is not possible to determine what the correct size should be. This option provides an override for these situations. cdu31a= [HW,CD] Format: &lt;io&gt;,&lt;irq&gt;[,PAS] See header of drivers/cdrom/cdu31a.c. chandev= [HW,NET] Generic channel device initialisation checkreqprot [SELINUX] Set initial checkreqprot flag value. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- check protection applied by kernel (includes any implied execute protection). 1 -- check protection requested by application. Default value is set via a kernel config option. Value can be changed at runtime via /selinux/checkreqprot. clock= [BUGS=IA-32, HW] gettimeofday clocksource override. [Deprecated] Forces specified clocksource (if avaliable) to be used when calculating gettimeofday(). If specified clocksource is not avalible, it defaults to PIT. Format: &#123; pit | tsc | cyclone | pmtmr &#125; disable_8254_timer enable_8254_timer [IA32/X86_64] Disable/Enable interrupt 0 timer routing over the 8254 in addition to over the IO-APIC. The kernel tries to set a sensible default. hpet= [IA-32,HPET] option to disable HPET and use PIT. Format: disable cm206= [HW,CD] Format: &#123; auto | [&lt;io&gt;,][&lt;irq&gt;] &#125; com20020= [HW,NET] ARCnet - COM20020 chipset Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;nodeID&gt;[,&lt;backplane&gt;[,&lt;ckp&gt;[,&lt;timeout&gt;]]]]] com90io= [HW,NET] ARCnet - COM90xx chipset (IO-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;] com90xx= [HW,NET] ARCnet - COM90xx chipset (memory-mapped buffers) Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;memstart&gt;]] condev= [HW,S390] console device conmode= console= [KNL] Output console device and options. tty&lt;n&gt; Use the virtual console device &lt;n&gt;. ttyS&lt;n&gt;[,options] ttyUSB0[,options] Use the specified serial port. The options are of the form &quot;bbbbpnf&quot;, where &quot;bbbb&quot; is the baud rate, &quot;p&quot; is parity (&quot;n&quot;, &quot;o&quot;, or &quot;e&quot;), &quot;n&quot; is number of bits, and &quot;f&quot; is flow control (&quot;r&quot; for RTS or omit it). Default is &quot;9600n8&quot;. See Documentation/serial-console.txt for more information. See Documentation/networking/netconsole.txt for an alternative. uart,io,&lt;addr&gt;[,options] uart,mmio,&lt;addr&gt;[,options] Start an early, polled-mode console on the 8250/16550 UART at the specified I/O port or MMIO address, switching to the matching ttyS device later. The options are the same as for ttyS, above. cpcihp_generic= [HW,PCI] Generic port I/O CompactPCI driver Format: &lt;first_slot&gt;,&lt;last_slot&gt;,&lt;port&gt;,&lt;enum_bit&gt;[,&lt;debug&gt;] cpia_pp= [HW,PPT] Format: &#123; parport&lt;nr&gt; | auto | none &#125; crashkernel=nn[KMG]@ss[KMG] [KNL] Reserve a chunk of physical memory to hold a kernel to switch to with kexec on panic. cs4232= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;mpuio&gt;,&lt;mpuirq&gt; cs89x0_dma= [HW,NET] Format: &lt;dma&gt; cs89x0_media= [HW,NET] Format: &#123; rj45 | aui | bnc &#125; cyclades= [HW,SERIAL] Cyclades multi-serial port adapter. dasd= [HW,NET] See header of drivers/s390/block/dasd_devmap.c. db9.dev[2|3]= [HW,JOY] Multisystem joystick support via parallel port (one device per port) Format: &lt;port#&gt;,&lt;type&gt; See also Documentation/input/joystick-parport.txt debug [KNL] Enable kernel debugging (events log level). debug_locks_verbose= [KNL] verbose self-tests Format=&lt;0|1&gt; Print debugging info while doing the locking API self-tests. We default to 0 (no extra messages), setting it to 1 will print _a lot_ more information - normally only useful to kernel developers. decnet= [HW,NET] Format: &lt;area&gt;[,&lt;node&gt;] See also Documentation/networking/decnet.txt. dhash_entries= [KNL] Set number of hash buckets for dentry cache. digi= [HW,SERIAL] IO parameters + enable/disable command. digiepca= [HW,SERIAL] See drivers/char/README.epca and Documentation/digiepca.txt. dmascc= [HW,AX25,SERIAL] AX.25 Z80SCC driver with DMA support available. Format: &lt;io_dev0&gt;[,&lt;io_dev1&gt;[,..&lt;io_dev32&gt;]] dmasound= [HW,OSS] Sound subsystem buffers dscc4.setup= [NET] dtc3181e= [HW,SCSI] earlyprintk= [IA-32,X86-64] earlyprintk=vga earlyprintk=serial[,ttySn[,baudrate]] Append &quot;,keep&quot; to not disable it when the real console takes over. Only vga or serial at a time, not both. Currently only ttyS0 and ttyS1 are supported. Interaction with the standard serial driver is not very good. The VGA output is eventually overwritten by the real console. eata= [HW,SCSI] ec_intr= [HW,ACPI] ACPI Embedded Controller interrupt mode Format: &lt;int&gt; 0: polling mode non-0: interrupt mode (default) eda= [HW,PS2] edb= [HW,PS2] edd= [EDD] Format: &#123;&quot;of[f]&quot; | &quot;sk[ipmbr]&quot;&#125; See comment in arch/i386/boot/edd.S eicon= [HW,ISDN] Format: &lt;id&gt;,&lt;membase&gt;,&lt;irq&gt; eisa_irq_edge= [PARISC,HW] See header of drivers/parisc/eisa.c. elanfreq= [IA-32] See comment before function elanfreq_setup() in arch/i386/kernel/cpu/cpufreq/elanfreq.c. elevator= [IOSCHED] Format: &#123;&quot;anticipatory&quot; | &quot;cfq&quot; | &quot;deadline&quot; | &quot;noop&quot;&#125; See Documentation/block/as-iosched.txt and Documentation/block/deadline-iosched.txt for details. elfcorehdr= [IA-32, X86_64] Specifies physical address of start of kernel core image elf header. Generally kexec loader will pass this option to capture kernel. See Documentation/kdump/kdump.txt for details. enforcing [SELINUX] Set initial enforcing status. Format: &#123;&quot;0&quot; | &quot;1&quot;&#125; See security/selinux/Kconfig help text. 0 -- permissive (log only, no denials). 1 -- enforcing (deny and log). Default value is 0. Value can be changed at runtime via /selinux/enforce. es1370= [HW,OSS] Format: &lt;lineout&gt;[,&lt;micbias&gt;] See also header of sound/oss/es1370.c. es1371= [HW,OSS] Format: &lt;spdif&gt;,[&lt;nomix&gt;,[&lt;amplifier&gt;]] See also header of sound/oss/es1371.c. ether= [HW,NET] Ethernet cards parameters This option is obsoleted by the &quot;netdev=&quot; option, which has equivalent usage. See its documentation for details. eurwdt= [HW,WDT] Eurotech CPU-1220/1410 onboard watchdog. Format: &lt;io&gt;[,&lt;irq&gt;] fd_mcs= [HW,SCSI] See header of drivers/scsi/fd_mcs.c. fdomain= [HW,SCSI] See header of drivers/scsi/fdomain.c. floppy= [HW] See Documentation/floppy.txt. ftape= [HW] Floppy Tape subsystem debugging options. See Documentation/ftape.txt. gamecon.map[2|3]= [HW,JOY] Multisystem joystick and NES/SNES/PSX pad support via parallel port (up to 5 devices per port) Format: &lt;port#&gt;,&lt;pad1&gt;,&lt;pad2&gt;,&lt;pad3&gt;,&lt;pad4&gt;,&lt;pad5&gt; See also Documentation/input/joystick-parport.txt gamma= [HW,DRM] gdth= [HW,SCSI] See header of drivers/scsi/gdth.c. gpt [EFI] Forces disk with valid GPT signature but invalid Protective MBR to be treated as GPT. gscd= [HW,CD] Format: &lt;io&gt; gt96100eth= [NET] MIPS GT96100 Advanced Communication Controller gus= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma16&gt; gvp11= [HW,SCSI] hashdist= [KNL,NUMA] Large hashes allocated during boot are distributed across NUMA nodes. Defaults on for IA-64, off otherwise. Format: 0 | 1 (for off | on) hcl= [IA-64] SGI&#39;s Hardware Graph compatibility layer hd= [EIDE] (E)IDE hard drive subsystem geometry Format: &lt;cyl&gt;,&lt;head&gt;,&lt;sect&gt; hd?= [HW] (E)IDE subsystem hd?lun= See Documentation/ide.txt. highmem=nn[KMG] [KNL,BOOT] forces the highmem zone to have an exact size of &lt;nn&gt;. This works even on boxes that have no highmem otherwise. This also works to reduce highmem size on bigger boxes. hisax= [HW,ISDN] See Documentation/isdn/README.HiSax. hugepages= [HW,IA-32,IA-64] Maximal number of HugeTLB pages. noirqbalance [IA-32,SMP,KNL] Disable kernel irq balancing i8042.direct [HW] Put keyboard port into non-translated mode i8042.dumbkbd [HW] Pretend that controlled can only read data from keyboard and can not control its state (Don&#39;t attempt to blink the leds) i8042.noaux [HW] Don&#39;t check for auxiliary (== mouse) port i8042.nokbd [HW] Don&#39;t check/create keyboard port i8042.nomux [HW] Don&#39;t check presence of an active multiplexing controller i8042.nopnp [HW] Don&#39;t use ACPIPnP / PnPBIOS to discover KBD/AUX controllers i8042.panicblink= [HW] Frequency with which keyboard LEDs should blink when kernel panics (default is 0.5 sec) i8042.reset [HW] Reset the controller during init and cleanup i8042.unlock [HW] Unlock (ignore) the keylock i810= [HW,DRM] i8k.ignore_dmi [HW] Continue probing hardware even if DMI data indicates that the driver is running on unsupported hardware. i8k.force [HW] Activate i8k driver even if SMM BIOS signature does not match list of supported models. i8k.power_status [HW] Report power status in /proc/i8k (disabled by default) i8k.restricted [HW] Allow controlling fans only if SYS_ADMIN capability is set. ibmmcascsi= [HW,MCA,SCSI] IBM MicroChannel SCSI adapter See Documentation/mca.txt. icn= [HW,ISDN] Format: &lt;io&gt;[,&lt;membase&gt;[,&lt;icn_id&gt;[,&lt;icn_id2&gt;]]] ide= [HW] (E)IDE subsystem Format: ide=nodma or ide=doubler or ide=reverse See Documentation/ide.txt. ide?= [HW] (E)IDE subsystem Format: ide?=noprobe or chipset specific parameters. See Documentation/ide.txt. idebus= [HW] (E)IDE subsystem - VLB/PCI bus speed See Documentation/ide.txt. idle= [HW] Format: idle=poll or idle=halt ihash_entries= [KNL] Set number of hash buckets for inode cache. in2000= [HW,SCSI] See header of drivers/scsi/in2000.c. init= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /sbin/init as init process. initcall_debug [KNL] Trace initcalls as they are executed. Useful for working out where the kernel is dying during startup. initrd= [BOOT] Specify the location of the initial ramdisk inport.irq= [HW] Inport (ATI XL and Microsoft) busmouse driver Format: &lt;irq&gt; combined_mode= [HW] control which driver uses IDE ports in combined mode: legacy IDE driver, libata, or both (in the libata case, libata.atapi_enabled=1 may be useful as well). Note that using the ide or libata options may affect your device naming (e.g. by changing hdc to sdb). Format: combined (default), ide, or libata inttest= [IA64] io7= [HW] IO7 for Marvel based alpha systems See comment before marvel_specify_io7 in arch/alpha/kernel/core_marvel.c. ip= [IP_PNP] See Documentation/nfsroot.txt. ip2= [HW] Set IO/IRQ pairs for up to 4 IntelliPort boards See comment before ip2_setup() in drivers/char/ip2.c. ips= [HW,SCSI] Adaptec / IBM ServeRAID controller See header of drivers/scsi/ips.c. ports= [IP_VS_FTP] IPVS ftp helper module Default is 21. Up to 8 (IP_VS_APP_MAX_PORTS) ports may be specified. Format: &lt;port&gt;,&lt;port&gt;.... irqfixup [HW] When an interrupt is not handled search all handlers for it. Intended to get systems with badly broken firmware running. irqpoll [HW] When an interrupt is not handled search all handlers for it. Also check all handlers each timer interrupt. Intended to get systems with badly broken firmware running. isapnp= [ISAPNP] Format: &lt;RDP&gt;,&lt;reset&gt;,&lt;pci_scan&gt;,&lt;verbosity&gt; isolcpus= [KNL,SMP] Isolate CPUs from the general scheduler. Format: &lt;cpu number&gt;,...,&lt;cpu number&gt; This option can be used to specify one or more CPUs to isolate from the general SMP balancing and scheduling algorithms. The only way to move a process onto or off an &quot;isolated&quot; CPU is via the CPU affinity syscalls. &lt;cpu number&gt; begins at 0 and the maximum value is &quot;number of CPUs in system - 1&quot;. This option is the preferred way to isolate CPUs. The alternative -- manually setting the CPU mask of all tasks in the system -- can cause problems and suboptimal load balancer performance. isp16= [HW,CD] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;setup&gt; iucv= [HW,NET] js= [HW,JOY] Analog joystick See Documentation/input/joystick.txt. keepinitrd [HW,ARM] kstack=N [IA-32,X86-64] Print N words from the kernel stack in oops dumps. l2cr= [PPC] lapic [IA-32,APIC] Enable the local APIC even if BIOS disabled it. lasi= [HW,SCSI] PARISC LASI driver for the 53c700 chip Format: addr:&lt;io&gt;,irq:&lt;irq&gt; llsc*= [IA64] See function print_params() in arch/ia64/sn/kernel/llsc4.c. load_ramdisk= [RAM] List of ramdisks to load from floppy See Documentation/ramdisk.txt. lockd.nlm_grace_period=P [NFS] Assign grace period. Format: &lt;integer&gt; lockd.nlm_tcpport=N [NFS] Assign TCP port. Format: &lt;integer&gt; lockd.nlm_timeout=T [NFS] Assign timeout value. Format: &lt;integer&gt; lockd.nlm_udpport=M [NFS] Assign UDP port. Format: &lt;integer&gt; logibm.irq= [HW,MOUSE] Logitech Bus Mouse Driver Format: &lt;irq&gt; loglevel= All Kernel Messages with a loglevel smaller than the console loglevel will be printed to the console. It can also be changed with klogd or other programs. The loglevels are defined as follows: 0 (KERN_EMERG) system is unusable 1 (KERN_ALERT) action must be taken immediately 2 (KERN_CRIT) critical conditions 3 (KERN_ERR) error conditions 4 (KERN_WARNING) warning conditions 5 (KERN_NOTICE) normal but significant condition 6 (KERN_INFO) informational 7 (KERN_DEBUG) debug-level messages log_buf_len=n Sets the size of the printk ring buffer, in bytes. Format: &#123; n | nk | nM &#125; n must be a power of two. The default size is set in the kernel config file. lp=0 [LP] Specify parallel ports to use, e.g, lp=port[,port...] lp=none,parport0 (lp0 not configured, lp1 uses lp=reset first parallel port). &#39;lp=0&#39; disables the lp=auto printer driver. &#39;lp=reset&#39; (which can be specified in addition to the ports) causes attached printers to be reset. Using lp=port1,port2,... specifies the parallel ports to associate lp devices with, starting with lp0. A port specification may be &#39;none&#39; to skip that lp device, or a parport name such as &#39;parport0&#39;. Specifying &#39;lp=auto&#39; instead of a port specification list means that device IDs from each port should be examined, to see if an IEEE 1284-compliant printer is attached; if so, the driver will manage that printer. See also header of drivers/char/lp.c. lpj=n [KNL] Sets loops_per_jiffy to given constant, thus avoiding time-consuming boot-time autodetection (up to 250 ms per CPU). 0 enables autodetection (default). To determine the correct value for your kernel, boot with normal autodetection and see what value is printed. Note that on SMP systems the preset will be applied to all CPUs, which is likely to cause problems if your CPUs need significantly divergent settings. An incorrect value will cause delays in the kernel to be wrong, leading to unpredictable I/O errors and other breakage. Although unlikely, in the extreme case this might damage your hardware. ltpc= [NET] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt; mac5380= [HW,SCSI] Format: &lt;can_queue&gt;,&lt;cmd_per_lun&gt;,&lt;sg_tablesize&gt;,&lt;hostid&gt;,&lt;use_tags&gt; mac53c9x= [HW,SCSI] Format: &lt;num_esps&gt;,&lt;disconnect&gt;,&lt;nosync&gt;,&lt;can_queue&gt;,&lt;cmd_per_lun&gt;,&lt;sg_tablesize&gt;,&lt;hostid&gt;,&lt;use_tags&gt; machvec= [IA64] Force the use of a particular machine-vector (machvec) in a generic kernel. Example: machvec=hpzx1_swiotlb mad16= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma16&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt;,&lt;joystick&gt; maui= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; max_loop= [LOOP] Maximum number of loopback devices that can be mounted Format: &lt;1-256&gt; maxcpus= [SMP] Maximum number of processors that an SMP kernel should make use of max_addr=[KMG] [KNL,BOOT,ia64] All physical memory greater than or equal to this physical address is ignored. max_luns= [SCSI] Maximum number of LUNs to probe. Should be between 1 and 2^32-1. max_report_luns= [SCSI] Maximum number of LUNs received. Should be between 1 and 16384. mca-pentium [BUGS=IA-32] mcatest= [IA-64] mcd= [HW,CD] Format: &lt;port&gt;,&lt;irq&gt;,&lt;mitsumi_bug_93_wait&gt; mcdx= [HW,CD] mce [IA-32] Machine Check Exception md= [HW] RAID subsystems devices and level See Documentation/md.txt. mdacon= [MDA] Format: &lt;first&gt;,&lt;last&gt; Specifies range of consoles to be captured by the MDA. mem=nn[KMG] [KNL,BOOT] Force usage of a specific amount of memory Amount of memory to be used when the kernel is not able to see the whole system memory or for test. [IA-32] Use together with memmap= to avoid physical address space collisions. Without memmap= PCI devices could be placed at addresses belonging to unused RAM. mem=nopentium [BUGS=IA-32] Disable usage of 4MB pages for kernel memory. memmap=exactmap [KNL,IA-32,X86_64] Enable setting of an exact E820 memory map, as specified by the user. Such memmap=exactmap lines can be constructed based on BIOS output or other requirements. See the memmap=nn@ss option description. memmap=nn[KMG]@ss[KMG] [KNL] Force usage of a specific region of memory Region of memory to be used, from ss to ss+nn. memmap=nn[KMG]#ss[KMG] [KNL,ACPI] Mark specific memory as ACPI data. Region of memory to be used, from ss to ss+nn. memmap=nn[KMG]$ss[KMG] [KNL,ACPI] Mark specific memory as reserved. Region of memory to be used, from ss to ss+nn. meye.*= [HW] Set MotionEye Camera parameters See Documentation/video4linux/meye.txt. mga= [HW,DRM] migration_cost= [KNL,SMP] debug: override scheduler migration costs Format: &lt;level-1-usecs&gt;,&lt;level-2-usecs&gt;,... This debugging option can be used to override the default scheduler migration cost matrix. The numbers are indexed by &#39;CPU domain distance&#39;. E.g. migration_cost=1000,2000,3000 on an SMT NUMA box will set up an intra-core migration cost of 1 msec, an inter-core migration cost of 2 msecs, and an inter-node migration cost of 3 msecs. WARNING: using the wrong values here can break scheduler performance, so it&#39;s only for scheduler development purposes, not production environments. migration_debug= [KNL,SMP] migration cost auto-detect verbosity Format=&lt;0|1|2&gt; If a system&#39;s migration matrix reported at bootup seems erroneous then this option can be used to increase verbosity of the detection process. We default to 0 (no extra messages), 1 will print some more information, and 2 will be really verbose (probably only useful if you also have a serial console attached to the system). migration_factor= [KNL,SMP] multiply/divide migration costs by a factor Format=&lt;percent&gt; This debug option can be used to proportionally increase or decrease the auto-detected migration costs for all entries of the migration matrix. E.g. migration_factor=150 will increase migration costs by 50%. (and thus the scheduler will be less eager migrating cache-hot tasks) migration_factor=80 will decrease migration costs by 20%. (thus the scheduler will be more eager to migrate tasks) WARNING: using the wrong values here can break scheduler performance, so it&#39;s only for scheduler development purposes, not production environments. mousedev.tap_time= [MOUSE] Maximum time between finger touching and leaving touchpad surface for touch to be considered a tap and be reported as a left button click (for touchpads working in absolute mode only). Format: &lt;msecs&gt; mousedev.xres= [MOUSE] Horizontal screen resolution, used for devices reporting absolute coordinates, such as tablets mousedev.yres= [MOUSE] Vertical screen resolution, used for devices reporting absolute coordinates, such as tablets mpu401= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; MTD_Partition= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;,&lt;size&gt;,&lt;offset&gt; MTD_Region= [MTD] Format: &lt;name&gt;,&lt;region-number&gt;[,&lt;base&gt;,&lt;size&gt;,&lt;buswidth&gt;,&lt;altbuswidth&gt;] mtdparts= [MTD] See drivers/mtd/cmdline.c. mtouchusb.raw_coordinates= [HW] Make the MicroTouch USB driver use raw coordinates (&#39;y&#39;, default) or cooked coordinates (&#39;n&#39;) n2= [NET] SDL Inc. RISCom/N2 synchronous serial card NCR_D700= [HW,SCSI] See header of drivers/scsi/NCR_D700.c. ncr5380= [HW,SCSI] ncr53c400= [HW,SCSI] ncr53c400a= [HW,SCSI] ncr53c406a= [HW,SCSI] ncr53c8xx= [HW,SCSI] netdev= [NET] Network devices parameters Format: &lt;irq&gt;,&lt;io&gt;,&lt;mem_start&gt;,&lt;mem_end&gt;,&lt;name&gt; Note that mem_start is often overloaded to mean something different and driver-specific. This usage is only documented in each driver source file if at all. nfsaddrs= [NFS] See Documentation/nfsroot.txt. nfsroot= [NFS] nfs root filesystem for disk-less boxes. See Documentation/nfsroot.txt. nfs.callback_tcpport= [NFS] set the TCP port on which the NFSv4 callback channel should listen. nfs.idmap_cache_timeout= [NFS] set the maximum lifetime for idmapper cache entries. nmi_watchdog= [KNL,BUGS=IA-32] Debugging features for SMP kernels no387 [BUGS=IA-32] Tells the kernel to use the 387 maths emulation library even if a 387 maths coprocessor is present. noalign [KNL,ARM] noapic [SMP,APIC] Tells the kernel to not make use of any IOAPICs that may be present in the system. noasync [HW,M68K] Disables async and sync negotiation for all devices. nobats [PPC] Do not use BATs for mapping kernel lowmem on &quot;Classic&quot; PPC cores. nocache [ARM] nodelayacct [KNL] Disable per-task delay accounting nodisconnect [HW,SCSI,M68K] Disables SCSI disconnects. noexec [IA-64] noexec [IA-32,X86-64] noexec=on: enable non-executable mappings (default) noexec=off: disable nn-executable mappings nofxsr [BUGS=IA-32] Disables x86 floating point extended register save and restore. The kernel will only save legacy floating-point registers on task switch. nohlt [BUGS=ARM] no-hlt [BUGS=IA-32] Tells the kernel that the hlt instruction doesn&#39;t work correctly and not to use it. nohalt [IA-64] Tells the kernel not to use the power saving function PAL_HALT_LIGHT when idle. This increases power-consumption. On the positive side, it reduces interrupt wake-up latency, which may improve performance in certain environments such as networked servers or real-time systems. noirqdebug [IA-32] Disables the code which attempts to detect and disable unhandled interrupt sources. noisapnp [ISAPNP] Disables ISA PnP code. noinitrd [RAM] Tells the kernel not to load any configured initial RAM disk. nointroute [IA-64] nolapic [IA-32,APIC] Do not enable or use the local APIC. noltlbs [PPC] Do not use large page/tlb entries for kernel lowmem mapping on PPC40x. nomca [IA-64] Disable machine check abort handling nomce [IA-32] Machine Check Exception noresidual [PPC] Don&#39;t use residual data on PReP machines. noresume [SWSUSP] Disables resume and restores original swap space. no-scroll [VGA] Disables scrollback. This is required for the Braillex ib80-piezo Braille reader made by F.H. Papenmeier (Germany). nosbagart [IA-64] nosep [BUGS=IA-32] Disables x86 SYSENTER/SYSEXIT support. nosmp [SMP] Tells an SMP kernel to act as a UP kernel. nosync [HW,M68K] Disables sync negotiation for all devices. notsc [BUGS=IA-32] Disable Time Stamp Counter nousb [USB] Disable the USB subsystem nowb [ARM] nr_uarts= [SERIAL] maximum number of UARTs to be registered. opl3= [HW,OSS] Format: &lt;io&gt; opl3sa= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; opl3sa2= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;mss_io&gt;,&lt;mpu_io&gt;,&lt;ymode&gt;,&lt;loopback&gt;[,&lt;isapnp&gt;,&lt;multiple] oprofile.timer= [HW] Use timer interrupt instead of performance counters optcd= [HW,CD] Format: &lt;io&gt; osst= [HW,SCSI] SCSI Tape Driver Format: &lt;buffer_size&gt;,&lt;write_threshold&gt; See also Documentation/scsi/st.txt. panic= [KNL] Kernel behaviour on panic Format: &lt;timeout&gt; parkbd.port= [HW] Parallel port number the keyboard adapter is connected to, default is 0. Format: &lt;parport#&gt; parkbd.mode= [HW] Parallel port keyboard adapter mode of operation, 0 for XT, 1 for AT (default is AT). Format: &lt;mode&gt; parport= [HW,PPT] Specify parallel ports. 0 disables. Format: &#123; 0 | auto | 0xBBB[,IRQ[,DMA]] &#125; Use &#39;auto&#39; to force the driver to use any IRQ/DMA settings detected (the default is to ignore detected IRQ/DMA settings because of possible conflicts). You can specify the base address, IRQ, and DMA settings; IRQ and DMA should be numbers, or &#39;auto&#39; (for using detected settings on that particular port), or &#39;nofifo&#39; (to avoid using a FIFO even if it is detected). Parallel ports are assigned in the order they are specified on the command line, starting with parport0. parport_init_mode= [HW,PPT] Configure VIA parallel port to operate in a specific mode. This is necessary on Pegasos computer where firmware has no options for setting up parallel port mode and sets it to spp. Currently this function knows 686a and 8231 chips. Format: [spp|ps2|epp|ecp|ecpepp] pas2= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma16&gt;,&lt;sb_io&gt;,&lt;sb_irq&gt;,&lt;sb_dma&gt;,&lt;sb_dma16&gt; pas16= [HW,SCSI] See header of drivers/scsi/pas16.c. pause_on_oops= Halt all CPUs after the first oops has been printed for the specified number of seconds. This is to be used if your oopses keep scrolling off the screen. pcbit= [HW,ISDN] pcd. [PARIDE] See header of drivers/block/paride/pcd.c. See also Documentation/paride.txt. pci=option[,option...] [PCI] various PCI subsystem options: off [IA-32] don&#39;t probe for the PCI bus bios [IA-32] force use of PCI BIOS, don&#39;t access the hardware directly. Use this if your machine has a non-standard PCI host bridge. nobios [IA-32] disallow use of PCI BIOS, only direct hardware access methods are allowed. Use this if you experience crashes upon bootup and you suspect they are caused by the BIOS. conf1 [IA-32] Force use of PCI Configuration Mechanism 1. conf2 [IA-32] Force use of PCI Configuration Mechanism 2. nommconf [IA-32,X86_64] Disable use of MMCONFIG for PCI Configuration nomsi [MSI] If the PCI_MSI kernel config parameter is enabled, this kernel boot option can be used to disable the use of MSI interrupts system-wide. nosort [IA-32] Don&#39;t sort PCI devices according to order given by the PCI BIOS. This sorting is done to get a device order compatible with older kernels. biosirq [IA-32] Use PCI BIOS calls to get the interrupt routing table. These calls are known to be buggy on several machines and they hang the machine when used, but on other computers it&#39;s the only way to get the interrupt routing table. Try this option if the kernel is unable to allocate IRQs or discover secondary PCI buses on your motherboard. rom [IA-32] Assign address space to expansion ROMs. Use with caution as certain devices share address decoders between ROMs and other resources. irqmask=0xMMMM [IA-32] Set a bit mask of IRQs allowed to be assigned automatically to PCI devices. You can make the kernel exclude IRQs of your ISA cards this way. pirqaddr=0xAAAAA [IA-32] Specify the physical address of the PIRQ table (normally generated by the BIOS) if it is outside the F0000h-100000h range. lastbus=N [IA-32] Scan all buses thru bus #N. Can be useful if the kernel is unable to find your secondary buses and you want to tell it explicitly which ones they are. assign-busses [IA-32] Always assign all PCI bus numbers ourselves, overriding whatever the firmware may have done. usepirqmask [IA-32] Honor the possible IRQ mask stored in the BIOS $PIR table. This is needed on some systems with broken BIOSes, notably some HP Pavilion N5400 and Omnibook XE3 notebooks. This will have no effect if ACPI IRQ routing is enabled. noacpi [IA-32] Do not use ACPI for IRQ routing or for PCI scanning. routeirq Do IRQ routing for all PCI devices. This is normally done in pci_enable_device(), so this option is a temporary workaround for broken drivers that don&#39;t call it. firmware [ARM] Do not re-enumerate the bus but instead just use the configuration from the bootloader. This is currently used on IXP2000 systems where the bus has to be configured a certain way for adjunct CPUs. pcmv= [HW,PCMCIA] BadgePAD 4 pd. [PARIDE] See Documentation/paride.txt. pdcchassis= [PARISC,HW] Disable/Enable PDC Chassis Status codes at boot time. Format: &#123; 0 | 1 &#125; See arch/parisc/kernel/pdc_chassis.c pf. [PARIDE] See Documentation/paride.txt. pg. [PARIDE] See Documentation/paride.txt. pirq= [SMP,APIC] Manual mp-table setup See Documentation/i386/IO-APIC.txt. plip= [PPT,NET] Parallel port network link Format: &#123; parport&lt;nr&gt; | timid | 0 &#125; See also Documentation/parport.txt. pnpacpi= [ACPI] &#123; off &#125; pnpbios= [ISAPNP] &#123; on | off | curr | res | no-curr | no-res &#125; pnp_reserve_irq= [ISAPNP] Exclude IRQs for the autoconfiguration pnp_reserve_dma= [ISAPNP] Exclude DMAs for the autoconfiguration pnp_reserve_io= [ISAPNP] Exclude I/O ports for the autoconfiguration Ranges are in pairs (I/O port base and size). pnp_reserve_mem= [ISAPNP] Exclude memory regions for the autoconfiguration. Ranges are in pairs (memory base and size). profile= [KNL] Enable kernel profiling via /proc/profile Format: [schedule,]&lt;number&gt; Param: &quot;schedule&quot; - profile schedule points. Param: &lt;number&gt; - step/bucket size as a power of 2 for statistical time based profiling. processor.max_cstate= [HW,ACPI] Limit processor to maximum C-state max_cstate=9 overrides any DMI blacklist limit. processor.nocst [HW,ACPI] Ignore the _CST method to determine C-states, instead using the legacy FADT method prompt_ramdisk= [RAM] List of RAM disks to prompt for floppy disk before loading. See Documentation/ramdisk.txt. psmouse.proto= [HW,MOUSE] Highest PS2 mouse protocol extension to probe for; one of (bare|imps|exps|lifebook|any). psmouse.rate= [HW,MOUSE] Set desired mouse report rate, in reports per second. psmouse.resetafter= [HW,MOUSE] Try to reset the device after so many bad packets (0 = never). psmouse.resolution= [HW,MOUSE] Set desired mouse resolution, in dpi. psmouse.smartscroll= [HW,MOUSE] Controls Logitech smartscroll autorepeat. 0 = disabled, 1 = enabled (default). pss= [HW,OSS] Personal Sound System (ECHO ESC614) Format: &lt;io&gt;,&lt;mss_io&gt;,&lt;mss_irq&gt;,&lt;mss_dma&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; pt. [PARIDE] See Documentation/paride.txt. quiet= [KNL] Disable log messages r128= [HW,DRM] raid= [HW,RAID] See Documentation/md.txt. ramdisk= [RAM] Sizes of RAM disks in kilobytes [deprecated] See Documentation/ramdisk.txt. ramdisk_blocksize= [RAM] See Documentation/ramdisk.txt. ramdisk_size= [RAM] Sizes of RAM disks in kilobytes New name for the ramdisk parameter. See Documentation/ramdisk.txt. rcu.blimit= [KNL,BOOT] Set maximum number of finished RCU callbacks to process in one batch. rcu.qhimark= [KNL,BOOT] Set threshold of queued RCU callbacks over which batch limiting is disabled. rcu.qlowmark= [KNL,BOOT] Set threshold of queued RCU callbacks below which batch limiting is re-enabled. rcu.rsinterval= [KNL,BOOT,SMP] Set the number of additional RCU callbacks to queued before forcing reschedule on all cpus. rdinit= [KNL] Format: &lt;full_path&gt; Run specified binary instead of /init from the ramdisk, used for early userspace startup. See initrd. reboot= [BUGS=IA-32,BUGS=ARM,BUGS=IA-64] Rebooting mode Format: &lt;reboot_mode&gt;[,&lt;reboot_mode2&gt;[,...]] See arch/*/kernel/reboot.c. reserve= [KNL,BUGS] Force the kernel to ignore some iomem area resume= [SWSUSP] Specify the partition device for software suspend rhash_entries= [KNL,NET] Set number of hash buckets for route cache riscom8= [HW,SERIAL] Format: &lt;io_board1&gt;[,&lt;io_board2&gt;[,...&lt;io_boardN&gt;]] ro [KNL] Mount root device read-only on boot root= [KNL] Root filesystem rootdelay= [KNL] Delay (in seconds) to pause before attempting to mount the root filesystem rootflags= [KNL] Set root filesystem mount option string rootfstype= [KNL] Set root filesystem type rw [KNL] Mount root device read-write on boot S [KNL] Run init in single mode sa1100ir [NET] See drivers/net/irda/sa1100_ir.c. sb= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt; sbni= [NET] Granch SBNI12 leased line adapter sbpcd= [HW,CD] Soundblaster CD adapter Format: &lt;io&gt;,&lt;type&gt; See a comment before function sbpcd_setup() in drivers/cdrom/sbpcd.c. sc1200wdt= [HW,WDT] SC1200 WDT (watchdog) driver Format: &lt;io&gt;[,&lt;timeout&gt;[,&lt;isapnp&gt;]] scsi_debug_*= [SCSI] See drivers/scsi/scsi_debug.c. scsi_default_dev_flags= [SCSI] SCSI default device flags Format: &lt;integer&gt; scsi_dev_flags= [SCSI] Black/white list entry for vendor and model Format: &lt;vendor&gt;:&lt;model&gt;:&lt;flags&gt; (flags are integer value) scsi_logging= [SCSI] selinux [SELINUX] Disable or enable SELinux at boot time. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; See security/selinux/Kconfig help text. 0 -- disable. 1 -- enable. Default value is set via kernel config option. If enabled at boot time, /selinux/disable can be used later to disable prior to initial policy load. selinux_compat_net = [SELINUX] Set initial selinux_compat_net flag value. Format: &#123; &quot;0&quot; | &quot;1&quot; &#125; 0 -- use new secmark-based packet controls 1 -- use legacy packet controls Default value is 0 (preferred). Value can be changed at runtime via /selinux/compat_net. serialnumber [BUGS=IA-32] sg_def_reserved_size= [SCSI] sgalaxy= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;sgbase&gt; shapers= [NET] Maximal number of shapers. sim710= [SCSI,HW] See header of drivers/scsi/sim710.c. simeth= [IA-64] simscsi= sjcd= [HW,CD] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt; See header of drivers/cdrom/sjcd.c. slram= [HW,MTD] smart2= [HW] Format: &lt;io1&gt;[,&lt;io2&gt;[,...,&lt;io8&gt;]] snd-ad1816a= [HW,ALSA] snd-ad1848= [HW,ALSA] snd-ali5451= [HW,ALSA] snd-als100= [HW,ALSA] snd-als4000= [HW,ALSA] snd-azt2320= [HW,ALSA] snd-cmi8330= [HW,ALSA] snd-cmipci= [HW,ALSA] snd-cs4231= [HW,ALSA] snd-cs4232= [HW,ALSA] snd-cs4236= [HW,ALSA] snd-cs4281= [HW,ALSA] snd-cs46xx= [HW,ALSA] snd-dt019x= [HW,ALSA] snd-dummy= [HW,ALSA] snd-emu10k1= [HW,ALSA] snd-ens1370= [HW,ALSA] snd-ens1371= [HW,ALSA] snd-es968= [HW,ALSA] snd-es1688= [HW,ALSA] snd-es18xx= [HW,ALSA] snd-es1938= [HW,ALSA] snd-es1968= [HW,ALSA] snd-fm801= [HW,ALSA] snd-gusclassic= [HW,ALSA] snd-gusextreme= [HW,ALSA] snd-gusmax= [HW,ALSA] snd-hdsp= [HW,ALSA] snd-ice1712= [HW,ALSA] snd-intel8x0= [HW,ALSA] snd-interwave= [HW,ALSA] snd-interwave-stb= [HW,ALSA] snd-korg1212= [HW,ALSA] snd-maestro3= [HW,ALSA] snd-mpu401= [HW,ALSA] snd-mtpav= [HW,ALSA] snd-nm256= [HW,ALSA] snd-opl3sa2= [HW,ALSA] snd-opti92x-ad1848= [HW,ALSA] snd-opti92x-cs4231= [HW,ALSA] snd-opti93x= [HW,ALSA] snd-pmac= [HW,ALSA] snd-rme32= [HW,ALSA] snd-rme96= [HW,ALSA] snd-rme9652= [HW,ALSA] snd-sb8= [HW,ALSA] snd-sb16= [HW,ALSA] snd-sbawe= [HW,ALSA] snd-serial= [HW,ALSA] snd-sgalaxy= [HW,ALSA] snd-sonicvibes= [HW,ALSA] snd-sun-amd7930= [HW,ALSA] snd-sun-cs4231= [HW,ALSA] snd-trident= [HW,ALSA] snd-usb-audio= [HW,ALSA,USB] snd-via82xx= [HW,ALSA] snd-virmidi= [HW,ALSA] snd-wavefront= [HW,ALSA] snd-ymfpci= [HW,ALSA] sonicvibes= [HW,OSS] Format: &lt;reverb&gt; sonycd535= [HW,CD] Format: &lt;io&gt;[,&lt;irq&gt;] sonypi.*= [HW] Sony Programmable I/O Control Device driver See Documentation/sonypi.txt specialix= [HW,SERIAL] Specialix multi-serial port adapter See Documentation/specialix.txt. spia_io_base= [HW,MTD] spia_fio_base= spia_pedr= spia_peddr= sscape= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; st= [HW,SCSI] SCSI tape parameters (buffers, etc.) See Documentation/scsi/st.txt. st0x= [HW,SCSI] See header of drivers/scsi/seagate.c. sti= [PARISC,HW] Format: &lt;num&gt; Set the STI (builtin display/keyboard on the HP-PARISC machines) console (graphic card) which should be used as the initial boot-console. See also comment in drivers/video/console/sticore.c. sti_font= [HW] See comment in drivers/video/console/sticore.c. stifb= [HW] Format: bpp:&lt;bpp1&gt;[:&lt;bpp2&gt;[:&lt;bpp3&gt;...]] swiotlb= [IA-64] Number of I/O TLB slabs switches= [HW,M68k] sym53c416= [HW,SCSI] See header of drivers/scsi/sym53c416.c. t128= [HW,SCSI] See header of drivers/scsi/t128.c. tdfx= [HW,DRM] thash_entries= [KNL,NET] Set number of hash buckets for TCP connection time Show timing data prefixed to each printk message line clocksource= [GENERIC_TIME] Override the default clocksource Override the default clocksource and use the clocksource with the name specified. tipar.timeout= [HW,PPT] Set communications timeout in tenths of a second (default 15). tipar.delay= [HW,PPT] Set inter-bit delay in microseconds (default 10). tmc8xx= [HW,SCSI] See header of drivers/scsi/seagate.c. tmscsim= [HW,SCSI] See comment before function dc390_setup() in drivers/scsi/tmscsim.c. tp720= [HW,PS2] trix= [HW,OSS] MediaTrix AudioTrix Pro Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;sb_io&gt;,&lt;sb_irq&gt;,&lt;sb_dma&gt;,&lt;mpu_io&gt;,&lt;mpu_irq&gt; tsdev.xres= [TS] Horizontal screen resolution. tsdev.yres= [TS] Vertical screen resolution. turbografx.map[2|3]= [HW,JOY] TurboGraFX parallel port interface Format: &lt;port#&gt;,&lt;js1&gt;,&lt;js2&gt;,&lt;js3&gt;,&lt;js4&gt;,&lt;js5&gt;,&lt;js6&gt;,&lt;js7&gt; See also Documentation/input/joystick-parport.txt u14-34f= [HW,SCSI] UltraStor 14F/34F SCSI host adapter See header of drivers/scsi/u14-34f.c. uart401= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; uart6850= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt; usbhid.mousepoll= [USBHID] The interval which mice are to be polled at. vdso= [IA-32] vdso=1: enable VDSO (default) vdso=0: disable VDSO mapping video= [FB] Frame buffer configuration See Documentation/fb/modedb.txt. vga= [BOOT,IA-32] Select a particular video mode See Documentation/i386/boot.txt and Documentation/svga.txt. Use vga=ask for menu. This is actually a boot loader parameter; the value is passed to the kernel using a special protocol. vmalloc=nn[KMG] [KNL,BOOT] Forces the vmalloc area to have an exact size of &lt;nn&gt;. This can be used to increase the minimum size (128MB on x86). It can also be used to decrease the size and leave more room for directly mapped kernel RAM. vmhalt= [KNL,S390] Perform z/VM CP command after system halt. Format: &lt;command&gt; vmpanic= [KNL,S390] Perform z/VM CP command after kernel panic. Format: &lt;command&gt; vmpoff= [KNL,S390] Perform z/VM CP command after power off. Format: &lt;command&gt; waveartist= [HW,OSS] Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt; wd33c93= [HW,SCSI] See header of drivers/scsi/wd33c93.c. wd7000= [HW,SCSI] See header of drivers/scsi/wd7000.c. wdt= [WDT] Watchdog See Documentation/watchdog/watchdog.txt. xd= [HW,XT] Original XT pre-IDE (RLL encoded) disks. xd_geo= See header of drivers/block/xd.c. xirc2ps_cs= [NET,PCMCIA] Format: &lt;irq&gt;,&lt;irq_mask&gt;,&lt;io&gt;,&lt;full_duplex&gt;,&lt;do_sound&gt;,&lt;lockup_hack&gt;[,&lt;irq2&gt;[,&lt;irq3&gt;[,&lt;irq4&gt;]]] norandmaps Don&#39;t use address space randomization Equivalent to echo 0 &gt; /proc/sys/kernel/randomize_va_space TODO: Add documentation for ALSA options. Add more DRM drivers.","categories":[{"name":"内核文档","slug":"内核文档","permalink":"http://www.oostech.com/categories/%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/"}],"tags":[]},{"title":"Linux 内核源码的分布 内核版本 5.12.1 发布时间 2021-03-1","slug":"kernel_oostech_classify_5121","date":"2021-02-28T16:00:00.000Z","updated":"2021-02-28T16:00:00.000Z","comments":false,"path":"2021/03/01/kernel_oostech_classify_5121/","link":"","permalink":"http://www.oostech.com/2021/03/01/kernel_oostech_classify_5121/","excerpt":"","text":"1 背景大家或许想了解，Linux 内核代码里面存在着这么多文件夹，他们都是些什么文件夹呢？ 而这些文件夹里面有多少代码量呢？ 看完这两张简单的图片，或许可以解开大家的困惑。 2 内核版本2.1 内核版本 mainline: 5.12-rc1 发布时间 2021-03-01- 通过文件夹的大小分类 单位是:KB - 通过 .c, .h .S 源码文件的代码行数分类，单位是:千行 K lines","categories":[{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux 实用小代码，操作 CF9 寄存器来重启系统","slug":"code_oostech_reset_os_via_cf9","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/code_oostech_reset_os_via_cf9/","link":"","permalink":"http://www.oostech.com/2021/02/28/code_oostech_reset_os_via_cf9/","excerpt":"","text":"Intel 的 PCH 中有一个CF9的寄存器 我们可以通过在桥片上面的Reset Control Register （0xcf9）写入对应的值来做操作1 大概流程 使能对应的端口 请求reset 热重启(向 IO Port CF9 写 0x06) 冷重启(向 IO Port CF9 写 0x0E) 实际执行reset 2 参考代码如下12345678910111213141516&#x2F;** This is a PCH CF9 Reset Control Register reset example.* Wrote by Sam Lee*&#x2F;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys&#x2F;io.h&gt;int main(int argc, char *argv[])&#123; printf(&quot;## Samlee reset OS directly via CF9 \\n&quot;); ioperm(0xcf9, 1, 1); outb(0x02, 0xcf9); usleep(50); outb(0x06, 0xcf9); return 0; &#x2F;* never arrive*&#x2F;&#125; 3 更多关于CF9 的信息，可以参考 Intel 的 PCH 的datasheet","categories":[{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"IPMI 实用小代码，发送 Get Device ID","slug":"ipmi_oostech_getdeviceID_source_code","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/ipmi_oostech_getdeviceID_source_code/","link":"","permalink":"http://www.oostech.com/2021/02/28/ipmi_oostech_getdeviceID_source_code/","excerpt":"","text":"1. Get Device ID 是什么？ 它是我们在 IPMI 里面常用到的一个命令。 它的NetFn 是 0x06 CMD 是 0x01， 在IPMI 世界里，我们常用它来判断BMC工作是否正常。 下面这段代码就演示了我们如何来发送Get Device ID2. Get Device ID 实现的大概流程 打开 ipmi 设备 （设备是由ipmi驱动所建立，是一个char设备） 生成需要发送的ipmi信息 通过ioctl发送信息 （ioctl 的实现是通过ipmi驱动提供） 通过ioctl读取返回信息 （ioctl 的实现是通过ipmi驱动提供） 打印输出3. 具体的代码实现12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788#include &lt;stdio.h&gt;#include &lt;strings.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;sys&#x2F;types.h&gt;#include &lt;sys&#x2F;stat.h&gt;#include &lt;fcntl.h&gt;#include &lt;linux&#x2F;ipmi.h&gt;#include &lt;linux&#x2F;ipmi_msgdefs.h&gt;#include&lt;sys&#x2F;ioctl.h&gt;char *devnode &#x3D; &quot;&#x2F;dev&#x2F;ipmi0&quot;;int main(int argc, char *argv[])&#123; int i, fd, ret &#x3D; 0; unsigned char data[1024]; struct ipmi_req req; struct ipmi_recv recv; struct ipmi_system_interface_addr addr, addr1; &#x2F;* open the ipmi device *&#x2F; if ((fd &#x3D; open(devnode, O_RDWR)) &lt; 0)&#123; fprintf(stderr, &quot;Can&#39;t open ipmi device: %s\\n&quot;, devnode); exit (1); &#125;; &#x2F;* format required stuff*&#x2F; addr.addr_type &#x3D; IPMI_SYSTEM_INTERFACE_ADDR_TYPE; addr.channel &#x3D; IPMI_BMC_CHANNEL; addr.lun &#x3D; 0; req.addr &#x3D; (unsigned char *)&amp;addr; req.addr_len &#x3D; sizeof (addr); req.msg.netfn &#x3D; IPMI_NETFN_APP_REQUEST; req.msg.cmd &#x3D; IPMI_GET_DEVICE_ID_CMD; req.msg.data_len &#x3D; 0; req.msg.data &#x3D; NULL; req.msgid++; &#x2F;* use ioctl to send command*&#x2F; ret &#x3D; ioctl(fd, IPMICTL_SEND_COMMAND, (char *)&amp;req); if (ret !&#x3D; 0)&#123; perror(&quot;Error in ioctl IPMICTL_SEND_COMMAND: &quot;); &#125; printf(&quot;Please standby for 3 seconds \\n&quot;); sleep (3); &#x2F;* receive the command response *&#x2F; recv.msg.data &#x3D; data; recv.msg.data_len &#x3D; sizeof (data); recv.addr &#x3D; (unsigned char *)&amp;addr1; recv.addr_len &#x3D; sizeof (addr1); ret &#x3D; ioctl(fd, IPMICTL_RECEIVE_MSG_TRUNC, &amp;recv); if (ret !&#x3D; 0) &#123; perror(&quot;Error in ioctl IPMICTL_RECEIVE_MSG_TRUNC: &quot;); &#125; else &#123; &#x2F;* * Print the packet *&#x2F; printf(&quot;Packet:\\t\\trecv_type &#x3D; %d; msgid &#x3D; %d\\n&quot;, recv.recv_type, recv.msgid); printf(&quot;Address:\\t&quot;); printf(&quot;addr_type&#x3D;0x%x&quot;, addr1.addr_type); printf(&quot;; channel&#x3D;0x%x&quot;, (int)addr1.channel); printf(&quot;; lun&#x3D;0x%x&quot;, (int)addr1.lun); printf(&quot;\\n&quot;); printf(&quot;Msg:\\t\\t&quot;); printf(&quot;netfn&#x3D;0x%x&quot;, recv.msg.netfn); printf(&quot;; cmd&#x3D;0x%x&quot;, recv.msg.cmd); printf(&quot;; data_len&#x3D;%d&quot;, recv.msg.data_len); printf(&quot;\\n&quot;); printf(&quot;Data:\\t\\t&quot;); for (i &#x3D; 0; i &lt; recv.msg.data_len; i++) printf(&quot;%x, &quot;, (int)recv.msg.data[i]); printf(&quot;\\n&quot;); &#125; close(fd); return(0);&#125; 4. 编译后执行 编译1(samBuildServer1)# gcc -g ipmi_getDeviceID.c -o ipmiGetDeviceID 运行123456(samTestServer1) # .&#x2F;ipmiGetDeviceIDPlease standby for 3 secondsPacket: recv_type &#x3D; 1; msgid &#x3D; 2Address: addr_type&#x3D;0xc; channel&#x3D;0xf; lun&#x3D;0x0Msg: netfn&#x3D;0x7; cmd&#x3D;0x1; data_len&#x3D;16Data: 0, 20, 81, 2, a, 2, df, a2, 2, 0, 0, 1, 0, 31, a, a, 如需了解更多，我们可以参考 IPMI 规范","categories":[{"name":"IPMI 技巧(原创)","slug":"IPMI-技巧-原创","permalink":"http://www.oostech.com/categories/IPMI-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"如何在 kubernetes 环境建立一个sectets","slug":"cloud_oostech_create_a_secrets","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/cloud_oostech_create_a_secrets/","link":"","permalink":"http://www.oostech.com/2021/02/28/cloud_oostech_create_a_secrets/","excerpt":"","text":"如何在 kubernetes 环境建立一个sectets1 使用kubectl命令行1.1 建立用户,密码文件12# echo -n &#39;admin&#39; &gt; .&#x2F;username.txt# echo -n &#39;123456&#39; &gt; .&#x2F;password.txt 1.2 使用kubectl命令建立一个secret12# kubectl create secret generic db-user-pass --from-file&#x3D;.&#x2F;username.txt --from-file&#x3D;.&#x2F;password.txtsecret&#x2F;db-user-pass created 1.3 查看并且查看secret1234567891011121314151617# kubectl get secretsNAME TYPE DATA AGEdb-user-pass Opaque 2 2m4sdefault-token-qbz2d kubernetes.io&#x2F;service-account-token 3 6d19h# kubectl describe secrets db-user-passName: db-user-passNamespace: defaultLabels: &lt;none&gt;Annotations: &lt;none&gt;Type: OpaqueData&#x3D;&#x3D;&#x3D;&#x3D;password.txt: 6 bytesusername.txt: 5 bytes 2 手动建立2.1 生成base64的加密信息1234# echo -n &#39;admin&#39; | base64YWRtaW4&#x3D;# echo -n &#39;123456&#39; | base64MTIzNDU2 2.2 建议secret的yaml12345678910# vim secret.yaml# cat secret.yamlapiVersion: v1kind: Secretmetadata: name: mysecrettype: Opaquedata: username: YWRtaW4&#x3D; password: MTIzNDU2 2.3 导入yaml文件12# kubectl apply -f secret.yamlsecret&#x2F;mysecret created 2.4 获取并且describe详细的信息.12345678910111213141516# kubectl get secretsNAME TYPE DATA AGEdb-user-pass Opaque 2 15mdefault-token-qbz2d kubernetes.io&#x2F;service-account-token 3 6d19hmysecret Opaque 2 13s# kubectl describe secrets mysecretName: mysecretNamespace: defaultLabels: &lt;none&gt;Annotations:Type: OpaqueData&#x3D;&#x3D;&#x3D;&#x3D;password: 6 bytesusername: 5 bytes","categories":[{"name":"云原生 容器(原创)","slug":"云原生-容器-原创","permalink":"http://www.oostech.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F-%E5%AE%B9%E5%99%A8-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"如何通过 kubeadm手工搭建一个 kubernetes 测试学习的集群","slug":"cloud_oostech_setup_k8s_test_env","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/cloud_oostech_setup_k8s_test_env/","link":"","permalink":"http://www.oostech.com/2021/02/28/cloud_oostech_setup_k8s_test_env/","excerpt":"","text":"通过kubeadm手工部署kubenetes测试学习集群1 环境KVM 虚拟机(基于CentOS7.7,并注意/etc/resolv.conf不要超过3个,并且禁用swap swapoff -a -v)两台 master IP 190.190.190.144 node IP 190.190.190.145 2 部署的简要步骤2.1 安装用到的软件包2.2 节点的配置2.3 初始化集群的master节点2.4 导入集群的网络2.5 将node节点加入集群3 部署的详细步骤3.1 安装用到的软件包3.1.1 [master和node节点] 配置”kubelet”, “kubeadm”, “kubectl” 依赖的repo123456789cat &lt;&lt;EOF &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo[kubernetes]name&#x3D;Kubernetesbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;enabled&#x3D;1gpgcheck&#x3D;1repo_gpgcheck&#x3D;1gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpgEOF 3.1.2 [master和node节点] 安装用到的软件包. “docker” 的repo是”extras”1# yum install -y yum-utils device-mapper-persistent-data lvm2 docker kubelet kubeadm kubectl 3.2 节点的配置3.2.1 [master和node节点] 设置主机名,配置hosts,设置sysctl,停掉SELINUX和firewalld,使能daemons3.2.1.1 设置主机名[master节点] 1# hostnamectl set-hostname vm40master144 [node节点] 1# hostnamectl set-hostname vm40node145 3.2.1.2 [master和node节点] 配置hosts1# echo -e &quot;190.190.190.144 vm40master144\\n190.190.190.145 vm40node145&quot; &gt;&gt;&#x2F;etc&#x2F;hosts 3.2.1.3 [master和node节点] 设置sysctl1# echo -e &quot;net.ipv4.ip_forward&#x3D;1\\nnet.bridge.bridge-nf-call-ip6tables&#x3D;1\\nnet.bridge.bridge-nf-call-iptables&#x3D;1\\nnet.bridge.bridge-nf-call-arptables&#x3D;1&quot; &gt;&gt;&#x2F;etc&#x2F;sysctl.conf &amp;&amp; sysctl -p 3.2.1.4 [master和node节点] 停掉SELINUX1# sed -i &#39;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;permissive&#x2F;g&#39; &#x2F;etc&#x2F;sysconfig&#x2F;selinux &amp;&amp; setenforce 0 3.2.1.5 [master和node节点] 停掉firewalld1# systemctl disable firewalld --now 3.2.1.6 [master和node节点] 使能daemons1# systemctl enable kubelet --now &amp;&amp; systemctl enable docker --now 3.3 [master节点] 初始化集群的master节点 (pod-network-cidr必须加,service-cidr可选,ignore-preflight-errors可选all忽略所有错误,注意把执行完成后的”kubeadm join xxx”记录下来。12# kubeadm init --pod-network-cidr&#x3D;220.220.220.0&#x2F;24# cp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf ~&#x2F;.kube&#x2F;config 注意: kubeadm的安装过程不涉及网络插件(CNI)的初始化,因此kubeadm初步安装完成的集群不具备网络功能,任何Pod包括自带的CoreDNS都无法正常工作. 而网络插件的安装往往对kubeadm init命令的参数有一定的要求. 例如,安装flannel插件时需要指定类似–pod-network-cidr=220.220.220.0/24, 详情可参考pod-network 3.3.1 [master节点-可选]部署完毕,可以执行下面的命令让其他用户也可以使用(如果直接用root,可以只执行下面mkdir, cp admin.conf的动作)123# mkdir -p $HOME&#x2F;.kube# sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config# sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config 3.4 [master节点] 导入集群的网络kube-flannel.yml (如将文件放在/opt目录, 可以直接wget)1# kubectl apply -f &#x2F;opt&#x2F;kube-flannel.yml 3.5 [node节点] 将node节点加入集群(join的信息在步骤3.3)1# kubeadm join 190.190.190.144:6443 --token mcwpl9.c8235qnndhnbc7jc --discovery-token-ca-cert-hash sha256:83dcb922fca5b4d045808beca203069fa13cdd4ef3092db8f2f58864e1ccedfc 3.6 到此,部署结束(如安装失败,可以使用reset,再init一次, 参考附录信息).4 附录 [master节点- 要使用]12# kubeadm reset# kubeadm init --pod-network-cidr&#x3D;10.244.0.0&#x2F;16 [node节点-token 是有时间限制的,如果超时,重新生成]123# kubeadm reset# kubeadm join 190.190.190.144:6443 --token mcwpl9.c8235qnndhnbc7jc --discovery-token-ca-cert-hash sha256:83dcb922fca5b4d045808beca203069fa13cdd4ef3092db8f2f58864e1ccedfc# kubeadm token create","categories":[{"name":"云原生 容器(原创)","slug":"云原生-容器-原创","permalink":"http://www.oostech.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F-%E5%AE%B9%E5%99%A8-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux 内核源码的分布 内核版本 5.11.2 发布时间\t2021-02-26","slug":"kernel_oostech_classify_5112","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/kernel_oostech_classify_5112/","link":"","permalink":"http://www.oostech.com/2021/02/28/kernel_oostech_classify_5112/","excerpt":"","text":"1 背景大家或许想了解，Linux 内核代码里面存在着这么多文件夹，他们都是些什么文件夹呢？ 而这些文件夹里面有多少代码量呢？ 看完这两张简单的图片，或许可以解开大家的困惑。 2 内核版本2.1 内核版本 stable: 5.11.2 发布时间 2021-02-26- 通过文件夹的大小分类 单位是KB - 通过 .c, .h .S 等源码文件的代码行数分类，单位是 千行 K lines","categories":[{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux 代码分析，为什么parted不能建立 ext3，ext4，xfs文件系统","slug":"code_oostech_parted_cannot_create_xfs_filesystem","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/code_oostech_parted_cannot_create_xfs_filesystem/","link":"","permalink":"http://www.oostech.com/2021/02/28/code_oostech_parted_cannot_create_xfs_filesystem/","excerpt":"","text":"Linux 代码分析，为什么parted不能建立 ext3，ext4，xfs文件系统1 环境 Red Hat Enterprise Linux 6 parted-2.1-29.el6.x86_64 2 问题 我们可以通过 parted mkfs 来直接建立文件系统，可以支持的系统为 ext2 , fat16, fat32, linux-swap; 但是我们为什么不能建立 ext3, ext4, xfs 呢 ? 3 执行的流程简介 当 mkfs partition fs-type 参数被使用的时候，函数 do_mkpartfs 会被调用 然后 do_mkpartfs 调用 ped_file_system_create 函数来建立文件系统 之后，对应文件系统的函数 create 会被调用 4. 函数 create 具体实现NULL 代表其回调函数并没被实现 41 具体的实现状态 ext2 文件系统， 其中create是有实现的123456static PedFileSystemOps _ext2_ops &#x3D; &#123; probe: _ext2_probe,...... create: _ext2_create,......&#125;; fat16 文件系统， 其中create是有实现的123456static PedFileSystemOps fat16_ops &#x3D; &#123; probe: fat_probe_fat16,...... create: fat_create_fat16,......&#125;; fat32 文件系统， 其中create是有实现的123456static PedFileSystemOps fat32_ops &#x3D; &#123; probe: fat_probe_fat32,...... create: fat_create_fat32,......&#125;; linux-swap 文件系统， 其中create是有实现的123456789101112131415161718static PedFileSystemOps _swap_v0_ops &#x3D; &#123; probe: _swap_v0_probe, ....... create: swap_create, ......&#125;;static PedFileSystemOps _swap_v1_ops &#x3D; &#123; probe: _swap_v1_probe, ....... create: swap_create, ......&#125;;static PedFileSystemOps _swap_swsusp_ops &#x3D; &#123; probe: _swap_swsusp_probe,....... create: swap_create,......&#125;; xfs 文件系统，我们看到，其中的实现是 NULL123456static PedFileSystemOps xfs_ops &#x3D; &#123; probe: xfs_probe,...... create: NULL,......&#125;; ext3 文件系统，我们看到，其中的实现是 NULL123456static PedFileSystemOps _ext3_ops &#x3D; &#123; probe: _ext3_probe,...... create: NULL,......&#125;; ext4 文件系统，我们看到，其中的实现是 NULL123456static PedFileSystemOps _ext4_ops &#x3D; &#123; probe: _ext4_probe,...... create: NULL,......&#125;; 附录： 来自代码中的描述，所以后续创建文件系统还是建议使用其对应工具。1NOTE: &#96;parted&#96; file system manipulation code is not as robust as what you&#39;ll find in dedicated, file-system-specific packages like e2fsprogs. We recommend you use only to manipulate partition tables, whenever possible. Support for performing most operations on most types of file systems will be removed in an upcoming release.","categories":[{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux小玩意之 gnome桌面显示的 \"Software Updates Available\" 来自那里?","slug":"linux_oostech_gnome_software_service","date":"2021-02-27T16:00:00.000Z","updated":"2021-02-27T16:00:00.000Z","comments":false,"path":"2021/02/28/linux_oostech_gnome_software_service/","link":"","permalink":"http://www.oostech.com/2021/02/28/linux_oostech_gnome_software_service/","excerpt":"","text":"在gnome桌面显示的 “Software Updates Available” 来自那里?1. 消息来自哪里? 其实gnome里面有个小应用, 叫”gnome-software” 它来给我们发了这个通知, 里面有段这样的信息.12title &#x3D; _(&quot;Software Updates Available&quot;);body &#x3D; _(&quot;Important OS and application updates are ready to be installed&quot;); 2. “gnome-software”又是怎么跑起来的? 我们可以通过xdg的配置,配置应用跟随桌面环境自动启动. 例如 gnome，kde，xfce，lxde 等都可以支持xdg标准. 应用安装好后, 将配置文件放在”/etc/xdg/autostart/“下面. 比如这里的”gnome-software”, 对应的配置文件”gnome-software-service.desktop”123456[Desktop Entry]Type&#x3D;ApplicationName&#x3D;GNOME SoftwareExec&#x3D;&#x2F;usr&#x2F;bin&#x2F;gnome-software --gapplication-serviceOnlyShowIn&#x3D;GNOME;Unity;NoDisplay&#x3D;true 3. 消息怎么输出,根源在那里? 这个小应用以”yum.repos.d”作为参考, 通过一系列函数,定时器对当前系统安装的包的metadata信息与repos检测到的作对比. 下列的一些函数被调用了.123456gs_update_monitor_init (GsUpdateMonitor *monitor)g_timeout_add_seconds (60, check_updates_on_startup_cb, monitor);check_updates_on_startup_cb (gpointer data)restart_updates_check (monitor);check_updates (monitor);g_timeout_add_seconds (3600, check_hourly_cb,monitor); 4. 用什么样的区间作检查呢? 通过GsUpdateMonitor结构, 里面有检查区间成员; 开机之后,通过调用g_timeout_add_seconds (60, check_updates_on_startup_cb, monitor), 60秒做第一次检查; 之后每个小时,之后每天123guint check_startup_id;guint check_hourly_id;guint check_daily_id;","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux小玩意之 在RHEL8 上配置vsftp 服务","slug":"linux_oostech_setup_vsftp_on_rhel8","date":"2021-02-26T16:00:00.000Z","updated":"2021-02-26T16:00:00.000Z","comments":false,"path":"2021/02/27/linux_oostech_setup_vsftp_on_rhel8/","link":"","permalink":"http://www.oostech.com/2021/02/27/linux_oostech_setup_vsftp_on_rhel8/","excerpt":"","text":"1 环境 Red Hat Enterprise Linux release 8.2 (Ootpa) vsftpd-3.0.3-32.el8.x86_64 2 配置步骤2.1 建立ftp 用户并更新密码1# useradd -d &#x2F;mnt&#x2F;oostech_ftp -s &#x2F;bin&#x2F;nologin oostechftp &amp;&amp; echo &#39;samlee:oostechftp&#39; | chpasswd 2.2 给目录修改权限1# chown -R oostechftp:oostechftp &#x2F;mnt&#x2F;oostech_ftp 2.3 修改 vsftp 的pam 配置123# cat &#x2F;etc&#x2F;pam.d&#x2F;vsftpd#%PAM-1.0#auth required pam_shells.so 2.4 建立vsftp 配置文件（可以先将原来的备份，然后新建一份/etc/vsftpd/vsftpd.conf）1234567891011121314anonymous_enable&#x3D;NOftpd_banner&#x3D;Welcome to oosTech 文件共享 FTPlocal_enable&#x3D;YESwrite_enable&#x3D;YESlocal_umask&#x3D;022virtual_use_local_privs&#x3D;YESguest_enable&#x3D;YESguest_username&#x3D;oostechftplocal_root&#x3D;&#x2F;mnt&#x2F;oostech_ftpchroot_local_user&#x3D;YESchroot_list_enable&#x3D;YESlisten&#x3D;YESpam_service_name&#x3D;vsftpdallow_writeable_chroot&#x3D;YES 附录 1 关于 550 Permission denied 错误 错误信息1234ftp&gt; put Makefilelocal: Makefile remote: Makefile227 Entering Passive Mode (150,150,150,30,190,88).550 Permission denied. 修复 （必须在 /etc/vsftpd/vsftpd.conf 配上）1virtual_use_local_privs&#x3D;YES 验证1234567ftp&gt; put Makefilelocal: Makefile remote: Makefile227 Entering Passive Mode (150,150,150,30,127,153).150 Ok to send data.226 Transfer complete.849 bytes sent in 0.00203 secs (417.61 Kbytes&#x2F;sec)ftp&gt;","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"使用podman制作基于fedora31的hexchat镜像,并运行容器封装的hexchat","slug":"cloud_oostech_creat_hxchat_image","date":"2021-02-26T16:00:00.000Z","updated":"2021-02-26T16:00:00.000Z","comments":false,"path":"2021/02/27/cloud_oostech_creat_hxchat_image/","link":"","permalink":"http://www.oostech.com/2021/02/27/cloud_oostech_creat_hxchat_image/","excerpt":"","text":"使用podman制作基于fedora31的hexchat镜像,并运行容器封装的hexchat1 环境 Red Hat Enterprise Linux Server release 7.7 (Maipo) podman version 1.4.4 openssh-8.1p1-1.fc31.x86_64 HexChat 2.14.2 2 编写用于生成fedora31的hexchat镜像的Dockerfile2.1 建立一个独立的文件夹1# mkdir -p &#x2F;containerImages&#x2F;hexchat 2.2 进入此文件夹并且编写Dockerfile (也可以将RUN用&amp;&amp;连接起来，这样层数会少一些)123456789101112FROM fedoraMAINTAINER Sam.Lee 1382358xxxx@139.comRUN yum install -y hexchat iproute openssh-server atk bzip2 cairo expat fontconfig freetype fribidi gdk-pixbuf2 graphite2 harfbuzz keyutils libattr libblkid libcanberra libcap libcom_err libffi libgcc libgcrypt libgpg-error libmodman libmount libnotify libogg libpng libproxy libselinux libstdc++ libtdb libthai libtool libuuid libX11 libXau libXcomposite libXcursor libXdamage libXext libXfixes libXi libXinerama libXrandr libXrender lz4 nss pcre pixman systemd xz zlib xorg-x11-font-utils xorg-x11-drv-qxl xorg-x11-xkb-utils xorg-x11-server-common xorg-x11-xauth xorg-x11-utils xorg-x11-drv-intel xorg-x11-xbitmaps xorg-x11-apps xorg-x11-server-Xorg xorg-x11-drv-ati xorg-x11-drv-nouveau xorg-x11-drv-vmware xorg-x11-drv-wacom-serial-support xorg-x11-fonts-misc xorg-x11-drv-libinput xorg-x11-xinit xorg-x11-drv-evdev xorg-x11-drv-openchrome xorg-x11-drv-wacom xorg-x11-drv-fbdev xorg-x11-drv-vesa xorg-x11-server-utilsRUN echo &#39;root:A@b8f0c69&#39; | chpasswdRUN useradd fedorawhexchat &amp;&amp; echo &#39;fedorawhexchat:fedorawhexchat&#39; | chpasswdRUN sed -i &#39;s&#x2F;\\#PermitRootLogin prohibit-password&#x2F;PermitRootLogin yes&#x2F;&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_configRUN sed &#39;s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g&#39; -i &#x2F;etc&#x2F;pam.d&#x2F;sshdRUN ssh-keygen -AENV NOTVISIBLE &quot;in users profile&quot;RUN echo &quot;export VISIBLE&#x3D;now&quot; &gt;&gt; &#x2F;etc&#x2F;profileEXPOSE 22CMD [&quot;&#x2F;usr&#x2F;sbin&#x2F;sshd&quot;, &quot;-D&quot;] 3 通过podman生成hexchat镜像,并打上对应的标签 (因为要下包,会受网络影响,大约需要20分钟)1# podman build -f Dockerfile . -t 192.168.122.1:5000&#x2F;fedorawhexchat:v1 4 检查容器里面用户的uid/guid12# podman run --rm 192.168.122.1:5000&#x2F;fedorawhexchat:v1 cat &#x2F;etc&#x2F;passwd |grep fedorawhexchatfedorawhexchat:x:1000:1000::&#x2F;home&#x2F;fedorawhexchat:&#x2F;bin&#x2F;bash 5 建立一个volume给容器做持久存储,并且设置好对应uid/guid5.1 建立volume1# podman volume create samlee-hexchat-volume 5.2 找到volume的mount point1# podman volume inspect samlee-hexchat-volume |grep mountPoint 5.3 设置好对应uid/guid1# chown -R 1000:1000 &#x2F;var&#x2F;lib&#x2F;containers&#x2F;storage&#x2F;volumes&#x2F;samlee-hexchat-volume 6 运行容器并且挂载volume1# podman run --rm -d -p 53721:22 --mount &#39;type&#x3D;volume,source&#x3D;samlee-hexchat-volume,dst&#x3D;&#x2F;home&#x2F;fedorawhexchat&#x2F;&#39; --restart&#x3D;always --name fedorawhexchat 192.168.122.1:5000&#x2F;fedorawhexchat:v1 7 通过ssh启动容器中封装的”hexchat” (可用命令,脚本,应用封装,或者做ssh免秘钥执行) 直接命令1# ssh -X -p 53721 fedorawhexchat@0.0.0.0 hexchat 自动输入密码1# sshpass -p fedorawhexchat ssh -X -p 53721 fedorawhexchat@0.0.0.0 hexchat 脚本 “myhexchat.sh” (加上while也可以作为循环调用)12#!&#x2F;bin&#x2F;shsshpass -p fedorawhexchat ssh -X -p 53721 fedorawhexchat@0.0.0.0 hexchat expect 脚本 “myautohexchat.sh” (自动输入密码并执行)1234567891011121314151617181920212223#!&#x2F;bin&#x2F;sh&#x2F;usr&#x2F;bin&#x2F;expect -c &#39;set timeout 15spawn ssh -X -p 53721 fedorawhexchat@0.0.0.0 hexchatexpect &#123; &quot;*password:*&quot; &#123; send &quot;fedorawhexchat\\r&quot; sleep 1 interact &#125; &quot;*(yes&#x2F;no)*&quot; &#123; send &quot;yes\\r&quot; send &quot;fedorawhexchat\\r&quot; sleep 1 interact &#125; &quot;*No route to host*&quot; &#123; send [exec echo &quot;Can not execute hexchat&quot;] &#125; &#125;&#39; 应用封装 比如标准C库的system函数; Java的Process和Runtime; python的os模块的system或者popen方法都行.","categories":[{"name":"云原生 容器(原创)","slug":"云原生-容器-原创","permalink":"http://www.oostech.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F-%E5%AE%B9%E5%99%A8-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Red Hat Enterprise Linux 8 的新玩意 第6篇 module 的简介及操作示例","slug":"linux_oostech_RHEL8_module_introduction","date":"2021-02-19T16:00:00.000Z","updated":"2021-02-19T16:00:00.000Z","comments":false,"path":"2021/02/20/linux_oostech_RHEL8_module_introduction/","link":"","permalink":"http://www.oostech.com/2021/02/20/linux_oostech_RHEL8_module_introduction/","excerpt":"","text":"1 概述这个文档介绍了在RHEL8.x ，CentOS8.x 上面, 如何对AppStream 软件仓库中的模块进行查询，安装，等操作。适用于Linux 系统的管理人员，维护人员等。 2 软件包介绍从RHEL8,CentOS8 开始，软件包分为两个主要的仓库，BaseOS 和 AppStream。 BaseOS提供了OS 的基础软件包，例如grub2， kernel，lib 等等。这个仓库里面的软件包是以RPM 格式直接提供的。 AppStream提供了用户应用程序，例如http, python, php, gcc 等等。这个仓库里面软件包则是通过两种格式提供，一个是RPM 格式，而另外一个就是module 了。这可能会问，为什么会使用这样的方式来管理呢？ 主要是这样的： 这样可以同时提供多个版本用户应用程序，具有更多灵活性 这样可以方便使用到最新的用户应用程序，便于随时根据需要随时升降级 应用升级，降级不会影响到基础软件包（如通过BaseOS提供的内容） 这样可以把一系列相关的用户应用RPM通过module形式打包起来，通过module来是管理这一系列的应用，减少复杂性。3 AppStraem 中的软件包的打包方式介绍 独立的RPM 格式这个也就是我们所熟知的传统的RPM包的格式了。 Modules 模块的形式Modules 这种方式呢，其实就是把一系列强相关的RPM组合成一个逻辑上的模块单元。 例如httpd 模块（包含了httpd，httpd-devel，mod_http,mod_ss等一系列的RPM）。它这个里面呢，所有的RPM都是同时编译，测试，以及发布的。 所以通过这样的方式，就具有了更好的兼容性，稳定性，以及灵活性。 4 module 的详细介绍module 里面，包含了两个重要的概念， 一个是module的stream， 另外一个就是module的profiles了。 下面我们来仔细看一下 Streams它通过版本来进行管理的，可以理解为module 的版本，比如1.0， 2.0 等等(可以参考下面的例子 Stream的信息)。 可以理解为它是AppStream里面的一个子repo。 最小的单元一系列RPM被放入一个对应的版本的module stream里面。跟着module stream一起发布，更新。 而不同的版本的module stream 可以独立接收到更新。而我们则可以根据需要，通过命令来进行对module stream 启用和禁用或者默认。 启用则说明我们可以使用到这个module stream里面对应的RPM包；相对而言，如果禁用，我们就是无法使用这个module stream里面对应的RPM包了。这样会出现一种现象，比如我的AppStream源里面明明有其中一个版本的RPM， 但是我却无法使用它。这就是因为这个RPM版本对应的module stream被禁用了，因为这个版本的RPM是这个straem的一员，自然也就没法使用它了。而同一个module，同一时间只能有一个启用的stream。而默认情况下，会有一个默认其中的stream， 这样可以不用做任何的动作的情况下就可以使用到默认 stream的RPM包了。同样，module stream 也会与RPM类似有依赖关系。比如下面这个例子，我们可以看到httpd 这个module有两个stream， 2.4和1.0 两个版本。其中 2.4 是启用的stream ，并且是default的。 12345Red Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)Name Stream Profiles Summaryhttpd 2.4 [d][e] common [d], devel, minimal Apache HTTP Serverhttpd 1.0 common [d], devel, minimal Apache HTTP ServerHint: [d]efault, [e]nabled, [x]disabled, [i]nstalled Profiles它是用过目的来进行管理的，可以理解为module的使用描述。 它描述了对应的使用范围的以及一系列的RPM包，类似development，minimal， 等等；不同的profile里面会包含不用数量的RPM包。比如development profile里面则会包含devel RPM包； 而minimal profile里面则不会包含devel 的RPM包。 所以这样客户更方便我们来根据需要来选择对应的profile 来安装对应module，这样我们安装了我们需要的RPM了。同样，我们也可以有default的profile，这样默认情况下，我们不需要做任何就可以在安装时，使用default的profile了。比如下面这个例子，我们可以看到http的这个module有三个profile，common，devel和minimal。 而common则是default的profile。 12345Red Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)Name Stream Profiles Summaryhttpd 2.4 [d][e] common [d], devel, minimal Apache HTTP Serverhttpd 2.0 common [d], devel, minimal Apache HTTP ServerHint: [d]efault, [e]nabled, [x]disabled, [i]nstalled 5 module 的操作示例5.1 显示当前系统中可用的 module1# yum module list 示例。 我们可以看到当前系统所有可用的module，它们的stream信息（d=default，e=enabled）。profile信息，描述的等等。 12345678Red Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)Name Stream Profiles Summarycontainer-tools rhel8 [d][e] common [d] Common tools and dependencies for container runtimescontainer-tools 1.0 common [d] Common tools and dependencies for container runtimescontainer-tools 2.0 common [d] Common tools and dependencies for container runtimesgo-toolset rhel8 [d][e] common [d] Goidm client [d] common [d] RHEL IdM long term support client...... 5.2 显示module详细信息，可以查看模块描述，profile，提供的RPM包等等。1# yum module info module-name 示例。可以看到stream版本，profile，里面包含的包，以及版本的等等。 12345678910111213141516171819202122232425Name : httpdStream : 2.4 [d][e][a]Version : 8000020190405071959Context : 55190bc5Architecture : x86_64Profiles : common [d], devel, minimalDefault profiles : commonRepo : rhel-8-for-x86_64-appstream-rpmsSummary : Apache HTTP ServerDescription : Apache httpd is a powerful, efficient, and extensible HTTP server.Requires : platform:[el8]Artifacts : httpd-0:2.4.37-11.module+el8.0.0+2969+90015743.src : httpd-0:2.4.37-11.module+el8.0.0+2969+90015743.x86_64 : httpd-debuginfo-0:2.4.37-11.module+el8.0.0+2969+90015743.x86_64 : httpd-debugsource-0:2.4.37-11.module+el8.0.0+2969+90015743.x86_64 : httpd-devel-0:2.4.37-11.module+el8.0.0+2969+90015743.x86_64 : httpd-filesystem-0:2.4.37-11.module+el8.0.0+2969+90015743.noarch : httpd-manual-0:2.4.37-11.module+el8.0.0+2969+90015743.noarch : httpd-tools-0:2.4.37-11.module+el8.0.0+2969+90015743.x86_64 : httpd-tools-debuginfo-0:2.4.37-11.module+el8.0.0+2969+90015743.x86_64 : mod_http2-0:1.11.3-2.module+el8.0.0+2969+90015743.src : mod_http2-0:1.11.3-2.module+el8.0.0+2969+90015743.x86_64 : mod_http2-debuginfo-0:1.11.3-2.module+el8.0.0+2969+90015743.x86_64 : mod_http2-debugsource-0:1.11.3-2.module+el8.0.0+2969+90015743.x86_64...... 5.3 显示对应的profile里面的包含那些具体的包。1# yum module info --profile module-name 示例 实现了module的版本，还有其中不同的profile包含了什么包。 1234567891011121314# yum module info --profile httpdName : httpd:2.4:820190206142837:9edba152:x86_64common : httpd : httpd-filesystem : httpd-tools : mod_http2 : mod_ssldevel : httpd : httpd-devel : httpd-filesystem : httpd-toolsminimal : httpd..... 5.4 显示当前module状态，比如里面的enabled，disable等状态。1# yum module list module-name 示例 模块的信息，Stream的信息，default，profile信息等。（注意，如果不在enabled状态，是yum whatprovides 是无法看到对应的rpm的） 1234567# yum module list phpRed Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)Name Stream Profiles Summaryphp 7.2 [d] common [d], devel, minimal PHP scripting languagephp 7.3 common [d], devel, minimal PHP scripting languagephp 7.4 common [d], devel, minimal PHP scripting languageHint: [d]efault, [e]nabled, [x]disabled, [i]nstalled 5.5 查找那个模块提供了RPM1# yum module provides package 示例 我们查找那个podman RPM 的详细信息 1234567891011121314151617181920# yum module provides podmanpodman-1.0.0-2.git921f98f.module+el8+2784+9a0c1dfe.x86_64Module : container-tools:1.0:820190220135513:20125149:x86_64Profiles : commonRepo : rhel-8-for-x86_64-appstream-rpmsSummary : Common tools and dependencies for container runtimes......podman-1.6.4-23.module+el8.3.0+8377+eff33c85.x86_64Module : container-tools:2.0:8030020201008133618:830d479e:x86_64Profiles : commonRepo : rhel-8-for-x86_64-appstream-rpmsSummary : Common tools and dependencies for container runtimes......podman-1.9.3-2.module+el8.2.1+6867+366c07d6.x86_64Module : container-tools:rhel8:8020120200601155013:ffd2803a:x86_64Profiles : commonRepo : rhel-8-for-x86_64-appstream-rpmsSummary : Common tools and dependencies for container runtimes 5.6 禁用一个对应的module stream1# yum module disable module-name:stream 示例 禁用stream 版本rhel8 的 “container-tools” 1234567891011121314# yum module disable container-tools:rhel8Only module name is required. Ignoring unneeded information in argument: &#39;container-tools:rhel8&#39;Dependencies resolved.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Package Architecture Version Repository Size&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Disabling module profiles: container-tools&#x2F;commonDisabling modules: container-toolsTransaction Summary&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Is this ok [y&#x2F;N]: yComplete! 5.7 启用一个对应的module stream1# yum module enable module-name:stream 示例 启用 stream 版本 2.0 的 “container-tools” （注意，需要先要将原来其中的其他stearm 禁用掉。） 1234567891011# yum module enable container-tools:2.0Dependencies resolved.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Package Architecture Version Repository Size&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Enabling module streams: container-tools 2.0Transaction Summary&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Is this ok [y&#x2F;N]: yComplete! 5.8 安装一个指定的模块1# yum module install module-name 示例 (安装默认的container-tools module stream,如果要安装其他stream则需要将它enable才能安装) 12345678910111213141516171819# yum module install container-toolsLast metadata expiration check: 2:41:25 ago on Sun 08 Nov 2020 09:10:32 AM CST.Dependencies resolved.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Package Arch Version Repository Size&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Upgrading: buildah x86_64 1.15.1-2.module+el8.3.0+8221+97165c3f rhel-8-for-x86_64-appstream-rpms 8.0 M conmon x86_64 2:2.0.20-2.module+el8.3.0+8221+97165c3f rhel-8-for-x86_64-appstream-rpms 49 k.....Transaction Summary&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Install 8 PackagesUpgrade 12 PackagesInstalled:...... toolbox-0.0.8-1.module+el8.3.0+8221+97165c3f.noarchComplete! 5.9 删除一个指定的模块1# yum module remove --all module-name:stream 示例 这样就可以删除之前安装的container-tools的默认的stream 版本了。 1234567891011# yum module remove container-tools:rhel8Dependencies resolved.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Package Architecture Version Repository Size&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Removed: cockpit-podman-18.1-2.module+el8.3.0+8221+97165c3f.noarch crun-0.14.1-2.module+el8.3.0+8221+97165c3f.x86_64.....Complete! 到此，RHEL8.x CentOS8.x 的module 简介及操作示例就介绍完毕了。","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"手动安装 kpatch 编译环境","slug":"linux_oostech_kpatch_install","date":"2021-02-18T16:00:00.000Z","updated":"2021-02-18T16:00:00.000Z","comments":false,"path":"2021/02/19/linux_oostech_kpatch_install/","link":"","permalink":"http://www.oostech.com/2021/02/19/linux_oostech_kpatch_install/","excerpt":"","text":"手动安装 kpatch 编译环境 1. 环境 Red Hat Enterprise Linux 7.6 3.10.0-957.el7.x86_64 ccache-3.3.4-1.el7.x86_64.rpm2. 安装编译依赖的rpm 包1# yum install gcc kernel-devel-$(uname -r) elfutils elfutils-devel pesign yum-utils zlib-devel binutils-devel newt-devel python-devel perl-ExtUtils-Embed audit-libs-devel numactl-devel pciutils-devel bison ncurses-devel gcc-plugin-devel kernel-debuginfo kernel-debuginfo-common gcc-plugin-devel patchutils 3. 创建 ccache， 可以优化编译的速度 （可选步骤，但是建议安装） (ccache represents “compiler cache” which is a tool for the gcc compiler used to compile the same program over and over again with little downtime, While it may take a few seconds longer to compile a program the first time with ccache, subsequent compiles will be much, much faster.)3.1 安装ccache rpm 包1# yum install https:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;7&#x2F;x86_64&#x2F;Packages&#x2F;c&#x2F;ccache-3.3.4-1.el7.x86_64.rpm 3.2 设置最大可用的cache 大小1# ccache --max-size&#x3D;8G 3.3 修改 gcc 别名，这样在调用gcc的时候就可以使用ccache了123# vi &#x2F;etc&#x2F;profile.d&#x2F;gcc.shalias gcc&#x3D;&quot;ccache gcc&quot;# source &#x2F;etc&#x2F;profile.d&#x2F;gcc.sh 4. 下载kpatch 源代码1# git clone https:&#x2F;&#x2F;github.com&#x2F;dynup&#x2F;kpatch.git 5. 编译安装kpatch源代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283# make -j2 &amp;&amp; make installmake -C kpatch-buildmake -C kpatchmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch&#39;make[1]: Nothing to be done for &#96;all&#39;.make[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch&#39;make -C kmodmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch-build&#39;gcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o create-diff-object.o create-diff-object.cmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#39;make -C core cleanmake[2]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#39;rm -f -Rf .*.o.cmd .*.ko.cmd .tmp_versions *.o *.ko *.mod.c \\Module.symversmake[2]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#39;make -C coremake[2]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#39;make -C &#x2F;lib&#x2F;modules&#x2F;3.10.0-957.el7.x86_64&#x2F;build M&#x3D;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core kpatch.kogcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o kpatch-elf.o kpatch-elf.cgcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o lookup.o lookup.cgcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o insn&#x2F;insn.o insn&#x2F;insn.cgcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o insn&#x2F;inat.o insn&#x2F;inat.cgcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o create-klp-module.o create-klp-module.cmake[3]: Entering directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39;make[3]: warning: jobserver unavailable: using -j1. Add &#96;+&#39; to parent make rule.gcc -MMD -MP -I..&#x2F;kmod&#x2F;patch -Iinsn -Wall -Wsign-compare -g -Werror -c -o create-kpatch-module.o create-kpatch-module.c CC [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#x2F;core.ogcc create-diff-object.o kpatch-elf.o lookup.o insn&#x2F;insn.o insn&#x2F;inat.o -lelf -o create-diff-objectgcc create-klp-module.o kpatch-elf.o -lelf -o create-klp-modulegcc create-kpatch-module.o kpatch-elf.o -lelf -o create-kpatch-modulemake[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch-build&#39;make -C manmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;man&#39;gzip -c -9 kpatch.1 &gt; kpatch.1.gzgzip -c -9 kpatch-build.1 &gt; kpatch-build.1.gzmake[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;man&#39;make -C contribmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;contrib&#39;make[1]: Nothing to be done for &#96;all&#39;.make[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;contrib&#39; CC [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#x2F;shadow.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#x2F;kpatch.o MODPOST 1 modules CC &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#x2F;kpatch.mod.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#x2F;kpatch.komake[3]: Leaving directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39;make[2]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#x2F;core&#39;make[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#39;make -C kpatch-build installmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch-build&#39;&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;libexec&#x2F;kpatch&#x2F;usr&#x2F;bin&#x2F;install create-diff-object create-klp-module create-kpatch-module kpatch-gcc &#x2F;usr&#x2F;local&#x2F;libexec&#x2F;kpatch&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;bin&#x2F;usr&#x2F;bin&#x2F;install kpatch-build &#x2F;usr&#x2F;local&#x2F;binmake[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch-build&#39;make -C kpatch installmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch&#39;&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;usr&#x2F;bin&#x2F;install kpatch &#x2F;usr&#x2F;local&#x2F;sbinmake[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kpatch&#39;make -C kmod installmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#39;&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;lib&#x2F;kpatch&#x2F;3.10.0-957.el7.x86_64&#x2F;usr&#x2F;bin&#x2F;install -m 644 core&#x2F;kpatch.ko &#x2F;usr&#x2F;local&#x2F;lib&#x2F;kpatch&#x2F;3.10.0-957.el7.x86_64&#x2F;usr&#x2F;bin&#x2F;install -m 644 core&#x2F;Module.symvers &#x2F;usr&#x2F;local&#x2F;lib&#x2F;kpatch&#x2F;3.10.0-957.el7.x86_64&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;share&#x2F;kpatch&#x2F;patch&#x2F;usr&#x2F;bin&#x2F;install -m 644 patch&#x2F;* &#x2F;usr&#x2F;local&#x2F;share&#x2F;kpatch&#x2F;patchmake[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;kmod&#39;make -C man installmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;man&#39;&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;share&#x2F;man&#x2F;man1&#x2F;usr&#x2F;bin&#x2F;install -m 644 kpatch.1.gz &#x2F;usr&#x2F;local&#x2F;share&#x2F;man&#x2F;man1&#x2F;usr&#x2F;bin&#x2F;install -m 644 kpatch-build.1.gz &#x2F;usr&#x2F;local&#x2F;share&#x2F;man&#x2F;man1make[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;man&#39;make -C contrib installmake[1]: Entering directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;contrib&#39;&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;usr&#x2F;local&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;usr&#x2F;bin&#x2F;install -m 0644 kpatch.service &#x2F;usr&#x2F;local&#x2F;lib&#x2F;systemd&#x2F;systemsed -i &#39;s~PREFIX~&#x2F;usr&#x2F;local~&#39; &#x2F;usr&#x2F;local&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;kpatch.service&#x2F;usr&#x2F;bin&#x2F;install -d &#x2F;etc&#x2F;init&#x2F;usr&#x2F;bin&#x2F;install -m 0644 kpatch.conf &#x2F;etc&#x2F;initsed -i &#39;s~PREFIX~&#x2F;usr&#x2F;local~&#39; &#x2F;etc&#x2F;init&#x2F;kpatch.confmake[1]: Leaving directory &#96;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;contrib&#39; 6. 检查ccache是否正常工作123456789101112131415# ccache -scache directory &#x2F;root&#x2F;.ccacheprimary config &#x2F;root&#x2F;.ccache&#x2F;ccache.confsecondary config (readonly) &#x2F;etc&#x2F;ccache.confcache hit (direct) 0cache hit (preprocessed) 0cache miss 2cache hit rate 0.00 %called for link 2called for preprocessing 16no input file 75cleanups performed 0files in cache 4cache size 733.2 kBmax cache size 5.0 GB 7. 编译生成kpatch模块 我已经提前修改了内核代码，所以就可以直接生成kpatch了1234567891011121314151617181920212223242526272829303132333435363738# ccache make -j2patch &lt; patchpatching file testmod_drv.cKCFLAGS&#x3D;&quot;-ffunction-sections -fdata-sections&quot; &#x2F;usr&#x2F;bin&#x2F;make -C &#x2F;lib&#x2F;modules&#x2F;3.10.0-957.el7.x86_64&#x2F;build M&#x3D;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod testmod.komake[1]: Entering directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39; CC [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod_drv.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.o MODPOST 1 modules CC &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.mod.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.komake[1]: Leaving directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39;strip --keep-file-symbols -d testmod_drv.ocp testmod_drv.o testmod_drv.o.patchedpatch -R &lt; patchpatching file testmod_drv.cKCFLAGS&#x3D;&quot;-ffunction-sections -fdata-sections&quot; &#x2F;usr&#x2F;bin&#x2F;make -C &#x2F;lib&#x2F;modules&#x2F;3.10.0-957.el7.x86_64&#x2F;build M&#x3D;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod testmod.komake[1]: Entering directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39; CC [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod_drv.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.o MODPOST 1 modules CC &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.mod.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.komake[1]: Leaving directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39;strip --keep-file-symbols -d testmod_drv.ocp testmod_drv.o testmod_drv.o.orig&#x2F;usr&#x2F;bin&#x2F;make -C &#x2F;lib&#x2F;modules&#x2F;3.10.0-957.el7.x86_64&#x2F;build M&#x3D;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod cleanmake[1]: Entering directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39; CLEAN &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;.tmp_versions CLEAN &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;Module.symversmake[1]: Leaving directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39;&#x2F;usr&#x2F;bin&#x2F;make -C &#x2F;lib&#x2F;modules&#x2F;3.10.0-957.el7.x86_64&#x2F;build M&#x3D;&#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod testmod.komake[1]: Entering directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39; CC [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod_drv.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.o MODPOST 1 modules CC &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.mod.o LD [M] &#x2F;mnt&#x2F;kpatchDemoSam&#x2F;kpatch&#x2F;test&#x2F;testmod&#x2F;testmod.komake[1]: Leaving directory &#96;&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-957.el7.x86_64&#39; 8. 安装测试生成的kpatch模块8.1 确认已经生成12# ls *.kotestmod.ko 8.2 安装kpatch模块123# kpatch install testmod.koinstalling testmod.ko (3.10.0-957.el7.x86_64)Created symlink from &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;kpatch.service to &#x2F;usr&#x2F;local&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;kpatch.service. 8.3 确认模块已经安装完毕12345[root@vm2rhel76 (i_am_vm2_rhel76) testmod]# kpatch listLoaded patch modules:Installed patch modules:testmod (3.10.0-957.el7.x86_64) 8.4 卸载kpatch模块12# kpatch uninstall testmod.kouninstalling testmod.ko (3.10.0-957.el7.x86_64)","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"K8S 的 kubectl 常用命令","slug":"cloud_oostech_kubectl_cheatsheet","date":"2021-02-18T16:00:00.000Z","updated":"2021-02-18T16:00:00.000Z","comments":false,"path":"2021/02/19/cloud_oostech_kubectl_cheatsheet/","link":"","permalink":"http://www.oostech.com/2021/02/19/cloud_oostech_kubectl_cheatsheet/","excerpt":"","text":"1 查询节点信息 简单的输出1# kubectl get node 使用describe 显示更多信息1# kubectl describe node vm40ckamaster144 输出yaml格式的详细信息1# kubectl get node --output yaml 编辑(可以添加 node-role.kubernetes.io/node: “” 到 label)1# kubectl edit node vm40ckanode145 输出集群的信息1# kubectl config view 2 输出集群信息1# kubectl cluster-info 3 查询所有的namespace1# kubectl get pod --all-namespaces 4 查看指定namespace的pod 状态1# kubectl get pod -n default 5 查看pod的详细信息1# kubectl describe pod coredns-f9fd979d6-x4z5k -n kube-system 6 编辑pod的状态1# kubectl edit pod coredns-f9fd979d6-x4z5k -n kube-system 7 输出pod 的完整信息1# kubectl get pods busybox -o wide 8 看deployment 的信息1# kubectl get deployment -n kube-system 9 检查deployment 的详细信息1# kubectl describe deployment -n kube-system 10 建立、删除namespace12# kubectl create namespace develop# kubectl delete namespaces develop 11 添加一个service，之后就可以通过集群任何一个节点IP+port访问12# kubectl expose pods&#x2F;kubernetes-bootcamp --type&#x3D;&quot;NodePort&quot; --port&#x3D;8080service&#x2F;kubernetes-bootcamp exposed 12 清除一个taints1# kubectl taint node vm40ckamaster144 node-role.kubernetes.io&#x2F;master:NoSchedule- 13 scale out 一个deployment1# kubectl scale deployment&#x2F;coredns --replicas&#x3D;3 -n kube-system","categories":[{"name":"云原生 容器(原创)","slug":"云原生-容器-原创","permalink":"http://www.oostech.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F-%E5%AE%B9%E5%99%A8-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux小玩意之使用 convert2rhel 工具做系统迁移","slug":"linux_oostech_convert2rhel","date":"2021-02-18T16:00:00.000Z","updated":"2021-02-18T16:00:00.000Z","comments":false,"path":"2021/02/19/linux_oostech_convert2rhel/","link":"","permalink":"http://www.oostech.com/2021/02/19/linux_oostech_convert2rhel/","excerpt":"","text":"1. conert2rhel简介1.1 通过conert2rhel工具, 我们可以方便的从 CentOS 直接迁移到 Red Hat Enterprise Linux (RHEL).重要: 在进行convert之前,强烈建议做好相应的备份. 当然,我们也可以联系Red Hat尝试获取支持 2. conert2rhel 迁移的步骤注意: 使用的时候,建议做一个版本的对应. 比如我用CentOS 6.10 迁移到RHEL 6.10 作为一个例子 2.1 在原有的CentOS 6.10 上安装 Fedora EPEL repository1# rpm -ivh https:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;epel-release-latest-6.noarch.rpm 2.2 安装 convert2rhel 工具.1# yum install -y convert2rhel 2.3 使用RHEL6.10 ISO 作为本地的 repo (我们也可以使用http/ ftp 配合RHEL 6.10搭建的源). 这个例子将 RHEL6.10 的ISO 挂载在”/mnt/iso”下. 并建立一个本地repo 文件.123456# vi &#x2F;etc&#x2F;yum.repos.d&#x2F;rhel-6-server-rpms.repo[rhel-6-server-rpms]name &#x3D; rhel-6-server-rpmsbaseurl &#x3D; file:&#x2F;&#x2F;&#x2F;mnt&#x2F;isoenabled &#x3D; 1gpgcheck &#x3D; 0 2.4 建立完毕, 使用 “yum repolist” 就可以看到我们建立的repo了12345# yum repolist......repo id repo name statusrhel-6-server-rpms rhel-6-server-rpms 0...... 2.5 开始进行系统的迁移2.5.1 执行命令进行系统的迁移 ( “–enablerepo” 参数后面 接我们local repo的源的名字 “rhel-6-server-rpms”). 过程中,会有5次需要确认, 输入”y”的地方. 以安装为 “Desktop, Server Platform Development, X Window System” 的CentOS6.10系统,整个切换大约需要10分钟.12345678910111213141516171819# convert2rhel --disable-submgr --disablerepo &quot;*&quot; --enablerepo rhel-6-server-rpms --debug......WARNING - By continuing you accept this EULA.Continue with the system conversion? [y&#x2F;n]: y...WARNING - The following packages will be removed...Continue with the system conversion? [y&#x2F;n]: y...WARNING - Only packages signed by CentOS are to be reinstalled. Red Hat support won&#39;t be provided for the following third party packages:Continue with the system conversion? [y&#x2F;n]: y...WARNING - The tool allows rollback of any action until this point.WARNING - By continuing all further changes on the system will need to be reverted manually by the user, if necessary.Continue with the system conversion? [y&#x2F;n]: y...WARNING - The convert2rhel is going to force-replace the only kernel installed, which has the same NEVRA as the only available RHEL kernel. If anything goes wrong with such replacement, the system will become unbootable. If you want the convert2rhel to install the RHEL kernel in a safer manner, you can install a different version of kernel first and then run convert2rhel again.Continue with the system conversion? [y&#x2F;n]: y 2.5.2 切换完毕之后,重启加载新的内核. 整个切换的过程就结束了.(简单好用吧 :P)12WARNING - In order to boot the RHEL kernel, restart of the system is needed.[root@localhost ~]#reboot 我们也可以打开下面的链接,找到更多的参考信息.https://access.redhat.com/articles/2360841","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"基于 UBI 容器化 Etherpad 并且运行在RHEL8上","slug":"cloud_oostech_container_etherpad","date":"2021-02-18T16:00:00.000Z","updated":"2021-02-18T16:00:00.000Z","comments":false,"path":"2021/02/19/cloud_oostech_container_etherpad/","link":"","permalink":"http://www.oostech.com/2021/02/19/cloud_oostech_container_etherpad/","excerpt":"","text":"1 建立Dockerfile 文件 （考虑到安全稳定性，这里基于UBI镜像，为了安全起见，可以不要使用root）123456FROM registry.redhat.io&#x2F;ubi8&#x2F;ubiLABEL maintainer&#x3D;&quot;oosTech.com&quot;RUN yum -y install nodejs npm git iproute &amp;&amp; git clone git:&#x2F;&#x2F;github.com&#x2F;ether&#x2F;etherpad-lite.git etherpad-liteWORKDIR &#x2F;etherpad-liteEXPOSE 9001CMD [ &quot;&#x2F;etherpad-lite&#x2F;bin&#x2F;run.sh&quot; , &quot;--root&quot;] 2 创建容器1# podman build -t etherpad:v1 . 3 容器镜像建立完毕，直接运行容器 （这样就可以本机的9001端口访问到etherpad了）1# podman run -d -p 9001:9001 localhost&#x2F;etherpad:v1","categories":[{"name":"云原生 容器(原创)","slug":"云原生-容器-原创","permalink":"http://www.oostech.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F-%E5%AE%B9%E5%99%A8-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Red Hat Enterprise Linux 8 的新玩意 第5篇tigervnc","slug":"linux_oostech_configure_tigervnc_on_rhel82","date":"2021-02-18T16:00:00.000Z","updated":"2021-02-18T16:00:00.000Z","comments":false,"path":"2021/02/19/linux_oostech_configure_tigervnc_on_rhel82/","link":"","permalink":"http://www.oostech.com/2021/02/19/linux_oostech_configure_tigervnc_on_rhel82/","excerpt":"","text":"Red Hat Enterprise Linux 8 的新玩意 第5篇tigervnc 1. 环境 Red Hat Enterprise Linux release 8.2 (Ootpa) 4.18.0-193.el8.x86_64 tigervnc-server-1.10.1-9.el8_3.x86_642. 安装需要的 VNC 组件1# yum install -y tigervnc tigervnc-server 3. 配置vncserver访问的password1# vncpasswd 4. 创建需要的systemd文件 （使用tigervnc-server自带的例子文件就可以了）1# cp &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vncserver@.service &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;vncserver@\\:1.service 5. 添加需要访问的用户1# echo &quot;:1&#x3D;root&quot; &gt;&gt; &#x2F;etc&#x2F;tigervnc&#x2F;vncserver.users 6. 重新加载daemon然后启动vncserver （可以配置enable）1234# systemctl daemon-reload# systemctl start vncserver@\\:1.service# 可选# systemctl enable vncserver@\\:1.service 附录 1： 配置文件 /usr/lib/systemd/system/vncserver@\\:1.service1234567891011# egrep -v &quot;^#|^$&quot; -r &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vncserver@\\:1.service[Unit]Description&#x3D;Remote desktop service (VNC)After&#x3D;syslog.target network.target[Service]Type&#x3D;forkingExecStart&#x3D;&#x2F;usr&#x2F;libexec&#x2F;vncsession-start %iPIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;vncsession-%i.pidSELinuxContext&#x3D;system_u:system_r:vnc_session_t:s0[Install]WantedBy&#x3D;multi-user.target 附录 2： 配置文件 /etc/tigervnc/vncserver.users12345678# TigerVNC User assignment## This file assigns users to specific VNC display numbers.# The syntax is &lt;display&gt;&#x3D;&lt;username&gt;. E.g.:## :2&#x3D;andrew# :3&#x3D;lisa:1&#x3D;root 附录 3： 可能会碰到的错误 使用了错误的vncserver@:1.service 文件 （因为cp了原来 RHEL7 的配置文件， 使用tigervnc-server自带的例子文件就可以了）1234567891011# systemctl status vncserver@\\:1.service● vncserver@:1.service - Remote desktop service (VNC) Loaded: loaded (&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;vncserver@:1.service; disabled; vendor preset: disabled) Active: failed (Result: protocol) since Fri 2021-02-19 17:00:12 CST; 5s ago Process: 34992 ExecStart&#x3D;&#x2F;usr&#x2F;sbin&#x2F;runuser -l root -c &#x2F;usr&#x2F;bin&#x2F;vncserver :1 (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS) Process: 34990 ExecStartPre&#x3D;&#x2F;bin&#x2F;sh -c &#x2F;usr&#x2F;bin&#x2F;vncserver -kill :1 &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1 || : (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)Feb 19 17:00:12 rhel82 systemd[1]: Starting Remote desktop service (VNC)...Feb 19 17:00:12 rhel82 systemd[1]: vncserver@:1.service: Can&#39;t open PID file &#x2F;root&#x2F;.vnc&#x2F;rhel82:1.pid (yet?) after start: No such file or di&gt;Feb 19 17:00:12 rhel82 systemd[1]: vncserver@:1.service: Failed with result &#39;protocol&#39;.Feb 19 17:00:12 rhel82 systemd[1]: Failed to start Remote desktop service (VNC). 没有添加vnc用户到 /etc/tigervnc/vncserver.users （增加对应的用户就可以了）1234567891011# systemctl status vncserver@\\:1.service -l● vncserver@:1.service - Remote desktop service (VNC) Loaded: loaded (&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;vncserver@:1.service; disabled; vendor preset: disabled) Active: failed (Result: exit-code) since Fri 2021-02-19 17:09:37 CST; 3s ago Process: 35662 ExecStart&#x3D;&#x2F;usr&#x2F;libexec&#x2F;vncsession-start :1 (code&#x3D;exited, status&#x3D;1&#x2F;FAILURE)Feb 19 17:09:37 rhel82 systemd[1]: Starting Remote desktop service (VNC)...Feb 19 17:09:37 rhel82 vncsession-start[35662]: No user configured for display :1Feb 19 17:09:37 rhel82 systemd[1]: vncserver@:1.service: Control process exited, code&#x3D;exited status&#x3D;1Feb 19 17:09:37 rhel82 systemd[1]: vncserver@:1.service: Failed with result &#39;exit-code&#39;.Feb 19 17:09:37 rhel82 systemd[1]: Failed to start Remote desktop service (VNC).","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux Audit 的使用规则 （可以把这些规则加入到audit.rules里面）","slug":"linux_oostech_audit_simple_rules","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_audit_simple_rules/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_audit_simple_rules/","excerpt":"","text":"1。 可以针对关键文件进行审计。比如：12345678-w &#x2F;etc&#x2F;passwd -p wa -k passwd-w &#x2F;etc&#x2F;shadow -p wa -k shadow-w &#x2F;etc&#x2F;ssh&#x2F;sshd_config -p wa -k sshd-w &#x2F;etc&#x2F;ssh&#x2F;ssh_config -p wa -k ssh-w &#x2F;etc&#x2F;crontab -p wa -k crontab-w &#x2F;etc&#x2F;hosts -p wa -k hosts-w &#x2F;etc&#x2F;hosts.allow -p wa -k hosts-allow-w &#x2F;etc&#x2F;hosts.deny -p wa -k hosts-deny 2。 可以针对用户命令进行审计。比如：12-a exit,always -F arch&#x3D;b64 -S execve -k exec-a exit,always -F arch&#x3D;b32 -S execve -k exec 3。 可以针对特定的系统调用进行审计。比如：123456-a exit,always -F arch&#x3D;b32 -S kill -k kill_rule-a exit,always -F arch&#x3D;b64 -S kill -k kill_rule-a exit,always -F arch&#x3D;b32 -S settimeofday -k time_rule-a exit,always -F arch&#x3D;b64 -S settimeofday -k time_rule-a exit,always -F arch&#x3D;b32 -S clock_settime -k time_rule-a exit,always -F arch&#x3D;b64 -S clock_settime -k time_rule 4 关于logs，为了防止由于大量的自动脚本运行产生的审计日志频繁flush到磁盘，导致磁盘使用率过高（特别是没有cache直接落盘的RAID卡）。 如果出现此类情况，可以修改flush模式为NONE。可以通过编辑audit配置文件/etc/audit/auditd.conf进行配置，修改如下选项：1flush &#x3D; NONE","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"ansible的playbook 常用的模块例子","slug":"linux_oostech_ansible_playbook_common_module","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_ansible_playbook_common_module/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_ansible_playbook_common_module/","excerpt":"","text":"1 copy 复制文件到远端并且备份12345678910111213---- name: a copy test hosts: servera become: yes tasks: - name: task 1 copy: src: &#x2F;tmp&#x2F;testa dest: &#x2F;tmp&#x2F;testa owner: apache group: apache mode: 0755 backup: yes 2 file 建立文件或者文件夹123456789101112---- name: this is file module hosts: servera become: yes tasks: - name: file module, create a file name testdir file: path: &#x2F;tmp&#x2F;testdira state: directory owner: ansible group: ansible mode: 700 3 lineinfile 替换文件内容3.1 如果文件存在12345678910111213---- name: lineinfile test hosts: servera become: yes tasks: - name: task 3 lineinfile lineinfile: dest: &#x2F;tmp&#x2F;sam regexp: &#39;this&#39; line: &#39;hello world&#39; owner: root group: root mode: 0644 3.2 文件不存在 (使用present和create, 变量用引号和大括号 ““)1234567891011121314151617---- name: variables test hosts: servera become: yes vars: word: sam tasks: - name : this is a test lineinfile: path: &#x2F;tmp&#x2F;testaa line: &#39;hello &quot;&#123;&#123; word &#125;&#125;&quot;&#39; state: present create: yes register: result - name: debug debug: var: result 4 shell 命令使用1234567891011---- name: Shell command hosts: servera become: yes tasks: - name: shell test shell: &#39;cat &#x2F;tmp&#x2F;sam&#39; register: result - name: debug debug: var: result 5 stat 检查文件是否存在123456789101112---- name: stat to check if file there hosts: servera become: yes tasks: - name: stat command stat: path: &#x2F;tmp&#x2F;lee register: result - name: debug debug: var: result 6 setup 获取系统信息1234567891011---- name: setup module hosts: servera become: yes tasks: - name: task setup setup: register: result - name: debug debug: var: result 7 setup 配合filter获取主机信息123456789101112131415161718[root@workstation ansible]# ansible servera -m setup -a &quot;filter&#x3D;ansible_default_ipv4&quot;servera | SUCCESS &#x3D;&gt; &#123; &quot;ansible_facts&quot;: &#123; &quot;ansible_default_ipv4&quot;: &#123; &quot;address&quot;: &quot;172.25.250.10&quot;, &quot;alias&quot;: &quot;eth0&quot;, &quot;broadcast&quot;: &quot;172.25.250.255&quot;, &quot;gateway&quot;: &quot;172.25.250.254&quot;, &quot;interface&quot;: &quot;eth0&quot;, &quot;macaddress&quot;: &quot;52:54:00:00:fa:0a&quot;, &quot;mtu&quot;: 1500, &quot;netmask&quot;: &quot;255.255.255.0&quot;, &quot;network&quot;: &quot;172.25.250.0&quot;, &quot;type&quot;: &quot;ether&quot; &#125; &#125;, &quot;changed&quot;: false&#125; 8 Template使用 (建立.j2的template, )8.1 建立 template 档案12# vim playbooks&#x2F;template_hello.j2Hello &quot;&#123;&#123; sam_veriable &#125;&#125;&quot; 8.2 导入template并使用1234567891011---- name: template test hosts: servera become: yes vars: sam_veriable: &quot;Sam&quot; tasks: - name: start template: src: template_hello.j2 dest: &#x2F;tmp&#x2F;template_hello 8.3 直接更改参数1# ansible-playbook playbooks&#x2F;template_hello.yml -e &quot;sam_veriable&#x3D;good&quot; 9 loop的使用12345678910111213141516171819---- name: myloop hosts: servera become: true tasks: - name: install files yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present register: result loop: - httpd - ipmitool #with_items: # - httpd # - ipmitool - name: debug debug: var: result 10 vault的使用10.1 建立加密文件. 这要求输入密码1# ansible-vault create playbooks&#x2F;crypttests.yml 10.2 编辑加密文件. 要求输入密码12# ansible-vault edit playbooks&#x2F;crypttests.ymlVault password: 10.3 更改密码.1# ansible-vault rekey playbooks&#x2F;crypttests.yml 10.4 对文件加密1# ansible-vault encrypt playbooks&#x2F;crypttests.yml 10.5 对文件解密1# ansible-vault decrypt playbooks&#x2F;crypttests.yml 10.6 查看文件1# ansible-vault view playbooks&#x2F;crypt.yml 11 非0状态继续执行, 使用ignore_errors12345678910111213141516171819---- name: ignore copy error hosts: servera become: yes tasks: - name: copy file to dest copy: src: &#x2F;tmp&#x2F;notify-null dest: &#x2F;tmp&#x2F;nofity owner: ansible group: ansible mode: 0644 ignore_errors: true register: result - name: ping node ping: - name: debug debug: var: result 12 notify使用1234567891011121314151617---- name: notify test hosts: servera become: yes tasks: - name: copy a file copy: src: &#x2F;tmp&#x2F;notify dest: &#x2F;tmp&#x2F;notify owner: ansible group: ansible mode: 0755 notify: - echo ok handlers: - name: echo ok shell: &#39;echo ok &gt;&#x2F;tmp&#x2F;ok&#39; 13 tag 使用13.1 编辑12345678910111213141516---- name: production hosts: production become: yes tasks: - name: ping production ping: tags: production- name: backup hosts: backup become: yes tasks: - name: ping backup ping: tags: backup 13.2 执行1# ansible-playbook playbooks&#x2F;mytags.yml -t production 14 block 和rescue (block里面不能使用ignore_errors)12345678910111213141516---- name: inaccess hosts: all become: yes tasks: - name: block strcuture block: - name: block copy get_url: url: http:&#x2F;&#x2F;materials&#x2F;inaccess.html dest: &#x2F;var&#x2F;www&#x2F;html&#x2F;inaccess.html rescue: - lineinfile: path: &#x2F;var&#x2F;www&#x2F;html&#x2F;inaccess.html line: &#39;I did not have access to the url&#39; create: yes 15 when, register 条件运行12345678910111213141516---- name: selectively update files hosts: all become: yes tasks: - name: check if there file there shell: &#39;ls &#x2F;etc&#x2F;ansible_abort.txt&#39; ignore_errors: yes register: result - name: create a file lineinfile: path: &#x2F;etc&#x2F;ansible_abort.txt line: &#39;my node is also &#123;&#123; ansible_hostname &#125;&#125;&#39; create: yes when: result.rc !&#x3D; 0 16 安装role (role 是在galaxy里面使用)16.1 编写galaxy_install.yml文件123---- src: http:&#x2F;&#x2F;materials&#x2F;do407fun.tar.gz name: examfun 16.2 安装role (安装的路径需要ansible.cfg写明 roles_path = /home/ansible/playbooks/roles)1ansible-galaxy install -r playbooks&#x2F;galaxy_install.yml 17 配置log路径1log_path&#x3D; &#x2F;home&#x2F;ansible&#x2F;logs-ansible.log 18 when 和debug使用(加速可以停用 gather_facts: no)1234567891011121314151617---- name: test debug info hosts: servera become: yes gather_facts: no tasks: - name: retrive host name shell: hostname register: result - name: for debug stdout 3 debug: msg: &#39;result.stdout &quot;&#123;&#123; result.stdout &#125;&#125;&quot;&#39; - name: when test file: path: &#x2F;tmp&#x2F;nogood state: touch when: result.stdout &#x3D;&#x3D; &quot;servera.lab.example.com&quot; 19 如何使用ignore_errors 和register (这两个是针对模块或者命令的,所以应该与之平齐)123456789101112---- name: check error hosts: servera become: yes tasks: - name: ignore error lineinfile: path: &#39;&#x2F;tmp&#x2F;this&#39; state: present line: &quot;good day&quot; ignore_errors: yes register: result 20 gather_facts 注意事项(不要设置为no 如果需要setup模块的变量如 ansible_hostname)1gather_facts: yes 21 创建LVM12345# pvcreate &#x2F;dev&#x2F;vda2# vgcreate new_vol_group &#x2F;dev&#x2F;vda1# lvcreate -L2G -n new_logical_volume new_vol_group# gfs_mkfs -plock_nolock -j 1 &#x2F;dev&#x2F;new_vol_group&#x2F;new_logical_volume# mkfs.xfs &#x2F;dev&#x2F;new_vol_group&#x2F;new_logical_volume 22 改password12345[root@workstation ansible]# ansible-vault rekey --ask-vault-pass playbook&#x2F;crypt.ymlVault password:New Vault password:Confirm New Vault password:Rekey successful 23 修改command shell 返回值12345678tasks: - name: run this command and ignore the result shell: &#x2F;usr&#x2F;bin&#x2F;somecommand || &#x2F;bin&#x2F;true或tasks: - name: run this command and ignore the result shell: &#x2F;usr&#x2F;bin&#x2F;somecommand ignore_errors: True 24 ansible 安装galaxy role24.1 从galaxy直接安装1- src: yatesr.timezone 24.2 从指定路径上面获取1- src: https:&#x2F;&#x2F;github.com&#x2F;bennojoy&#x2F;nginx 24.3 从指定路径安装并安装为指定名字12- src: https:&#x2F;&#x2F;github.com&#x2F;bennojoy&#x2F;nginx name: vagrant 25 使用 rhsm_repository 模块12345678- name: Enable a RHSM repository rhsm_repository: name: rhel-7-server-rpms- name: Disable all RHSM repositories rhsm_repository: name: &#39;*&#39; state: disabled 26 使用 redhat_subscription 模块注册系统，并加入对应的pool1234567- name: register RHEL redhat_subscription: state: present username: rhn-support-xili password: changeme pool_ids: 8a85f99c6c8b9588016c8be0f1b50ec1 force_register: yes","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Red Hat Enterprise Linux 8 的新玩意 第3篇 之容器工具 skopeo, podman-docker","slug":"linux_oostech_RHEL8_skopeo_podman_docker","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_RHEL8_skopeo_podman_docker/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_RHEL8_skopeo_podman_docker/","excerpt":"","text":"Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第3篇 之容器工具 skopeo, podman-dockerskopeo名字挺奇怪,这个是用来做什么的呢? 这个其实是一个容器镜像的拷贝工具, 它可以将容器镜像在容器 registeries中拷贝. 而同时它具有对容器镜像的签名认证功能.让我们来看看它的基本用法. 搜索容器镜像 比如我们可以从docker.io 上面来搜索fredora 的镜像1234567891011121314151617181920212223242526272829303132333435[root@vm3_rhel8 ~]# skopeo inspect docker:&#x2F;&#x2F;docker.io&#x2F;fedora&#123; &quot;Name&quot;: &quot;docker.io&#x2F;library&#x2F;fedora&quot;, &quot;Digest&quot;: &quot;sha256:2a60898a6dd7da9964b0c59fedcf652e24bfff04142e5488f793c9e8156afd33&quot;, &quot;RepoTags&quot;: [ &quot;20&quot;, &quot;21&quot;, &quot;22&quot;, &quot;23&quot;, &quot;24&quot;, &quot;25&quot;, &quot;26-modular&quot;, &quot;26&quot;, &quot;27&quot;, &quot;28&quot;, &quot;29&quot;, &quot;30&quot;, &quot;31&quot;, &quot;branched&quot;, &quot;heisenbug&quot;, &quot;latest&quot;, &quot;modular&quot;, &quot;rawhide&quot; ], &quot;Created&quot;: &quot;2019-03-12T00:20:38.300667849Z&quot;, &quot;DockerVersion&quot;: &quot;18.06.1-ce&quot;, &quot;Labels&quot;: &#123; &quot;maintainer&quot;: &quot;Clement Verna \\u003ccverna@fedoraproject.org\\u003e&quot; &#125;, &quot;Architecture&quot;: &quot;amd64&quot;, &quot;Os&quot;: &quot;linux&quot;, &quot;Layers&quot;: [ &quot;sha256:01eb078129a0d03c93822037082860a3fefdc15b0313f07c6e1c2168aef5401b&quot; ]&#125; 拷贝镜像 (TO BE CONTINUE )1","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"oom \"out_of_memory\" implementatoin 介绍","slug":"linux_oostech_oom_implementatoin","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_oom_implementatoin/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_oom_implementatoin/","excerpt":"","text":"oom “out_of_memory” implementatoin 介绍.注意,这里是基于内核 kernel-3.10.0-957.el7 (RHEL7.6) 1 OOM logs大概长什么样(这里使用手动触发OOM作为例子).1.1 例子 112Sep 15 23:08:48 XYZ kernel: SysRq : Manual OOM executionSep 15 23:08:48 XYZ kernel: Purging GPU memory, 29 pages freed, 30133 pages still pinned. 1.2 例子 2123456789Sep 15 23:38:48 XYZ kernel: SysRq : Manual OOM executionSep 15 23:38:48 XYZ kernel: kworker&#x2F;5:0 invoked oom-killer: gfp_mask&#x3D;0xd0, order&#x3D;0,Sep 15 23:38:48 XYZ kernel: Workqueue: events moom_callbackSep 15 23:38:48 XYZ kernel: Call Trace:Sep 15 23:38:48 XYZ kernel: [&lt;ffffffffa7161dc1&gt;] dump_stack+0x19&#x2F;0x1bSep 15 23:38:48 XYZ kernel: [&lt;ffffffffa715c7ea&gt;] dump_header+0x90&#x2F;0x229Sep 15 23:38:48 XYZ kernel: [&lt;ffffffffa6bba274&gt;] oom_kill_process+0x254&#x2F;0x3d0Sep 15 23:38:48 XYZ kernel: [&lt;ffffffffa6bbaab6&gt;] out_of_memory+0x4b6&#x2F;0x4f0Sep 15 23:38:48 XYZ kernel: [&lt;ffffffffa6e61f0d&gt;] moom_callback+0x4d&#x2F;0x50 2 看一下OOM的out_of_memory函数. 它主要分了7步,先看简化的代码,之后看具体介绍:12345678910111213141516171819202122232425262728293031void out_of_memory(struct zonelist *zonelist, gfp_t gfp_mask, int order, nodemask_t *nodemask, bool force_kill)&#123;... blocking_notifier_call_chain(&amp;oom_notify_list, 0, &amp;freed); if (freed &gt; 0) return;... if (fatal_signal_pending(current) || current-&gt;flags &amp; PF_EXITING) &#123; set_thread_flag(TIF_MEMDIE); return; &#125;... check_panic_on_oom(constraint, gfp_mask, order, mpol_mask); if (sysctl_oom_kill_allocating_task &amp;&amp; current-&gt;mm &amp;&amp; !oom_unkillable_task(current, NULL, nodemask) &amp;&amp; current-&gt;signal-&gt;oom_score_adj !&#x3D; OOM_SCORE_ADJ_MIN) &#123;... oom_kill_process(current, gfp_mask, order, 0, totalpages, NULL, nodemask, &quot;Out of memory (oom_kill_allocating_task)&quot;); goto out; &#125; p &#x3D; select_bad_process(&amp;points, totalpages, mpol_mask, force_kill);... if (!p) &#123; dump_header(NULL, gfp_mask, order, NULL, mpol_mask); panic(&quot;Out of memory and no killable processes...\\n&quot;); &#125;... oom_kill_process(p, gfp_mask, order, points, totalpages, NULL, nodemask, &quot;Out of memory&quot;);out:... schedule_timeout_killable(1);&#125; 第一, 如果出现oom, 先去处理通知链oom_notify_list的回调函数,如果内存回收成功(表现为freed大于0),则直接返回,然后快乐的收工了.1blocking_notifier_call_chain(&amp;oom_notify_list, 0, &amp;freed); 第二, 如果当前进程current(是一个thread_info结构)正在等待SIGKILL或者正在退出,设置进程标记为”TIF_MEMDIE”(代表进程由于OOM,目前正在关闭), 然后直接返回, 然后快乐的收工了.1if (fatal_signal_pending(current) || current-&gt;flags &amp; PF_EXITING) 第三, 限于NUMA场景(x86_64基本都是了,我们也可以看到内核配了CONFIG_NUMA=y). 如果配置了vm.panic_on_oom=1 (或者其他非0值,比如2)出现OOM, 系统就panic了(注意,RHEL8内核作了加强,如果是由于sysrq-trigger的,就不panic了). panic之后也就没的玩了,被迫收工.1check_panic_on_oom(constraint, gfp_mask, order, mpol_mask); 第四, 如果配置了vm.oom_kill_allocating_task=1,而且当前进程不是内核进程,也不是1号init进程,而且有内存可以释放, 并且进程的oom_score_adj不是-1000;总而言之,就是这个进程具备被kill的条件, 那就把它kill掉. 然后快乐的收工了.1if (sysctl_oom_kill_allocating_task &amp;&amp; current-&gt;mm &amp;&amp;!oom_unkillable_task(current, NULL, nodemask) &amp;&amp; current-&gt;signal-&gt;oom_score_adj !&#x3D; OOM_SCORE_ADJ_MIN) 第五, 如果跑到了这里,那就要花点心思选一个分数最高的进程来kill了. 基本的要点就是每个任务的rss，页表和交换空间使用的RAM的比例, 谁totalpages多, 那就越危险了 (因为totalpages的值会算到得分里面去D, 如果是root用户的进程,会给额外3%的折扣,root就是牛呀.), 如果找到就kill掉它,然后也可以收工了.1select_bad_process(&amp;points, totalpages, mpol_mask, force_kill); 第六, 这一步和第七是二选一的. 如果还没找到可以kill的进程,那就倒霉了. 输出信息之后就等系统panic了.没的玩了,被迫收工1panic(&quot;Out of memory and no killable processes...\\n&quot;); 第七, 这一步和第六是二选一的. 如果找到可以kill的进程,kill掉它.将进程设置为TASK_KILLABLE, 然后等待1个jiffies,那就全部打完收工咯.12oom_kill_process(p, gfp_mask, order, points, totalpages, NULL,nodemask, &quot;Out of memory&quot;);schedule_timeout_killable(1); 3 再来补充一下前面提到的oom_notify_list的通知链.3.1 内核为OOM定义了一个oom_notify_list通知链.1static BLOCKING_NOTIFIER_HEAD(oom_notify_list); 3.2 一些希望在OOM时,收到内核通知的, 就先把自己注册到通知链 (目前virtio_balloon和i915注册到了oom_notify_list通知链里面,所以出现OOM, 会先在通知链里面找这两个敢死队员:P). 如果出现OOM, 就先去通知链去找已经注册好的回调函数. 这也就是为什么我们能看到第1个OOM的log,而没有出现更多的OOM logs. virtio_balloon1vb-&gt;nb.notifier_call &#x3D; virtballoon_oom_notify; i9151i915-&gt;mm.oom_notifier.notifier_call &#x3D; i915_gem_shrinker_oom;","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"查阅rpm的依赖关系","slug":"linux_oostech_rpm_relationship","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_rpm_relationship/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_rpm_relationship/","excerpt":"","text":"查阅rpm的依赖关系1 使用RPM命令可以列出目标包所依赖的所有包，如下123456789101112131415161718192021222324252627282930[root@sam Packages]# rpm -qR vim-enhanced&#x2F;bin&#x2F;shconfig(vim-enhanced) &#x3D; 2:8.0.1763-15.el8libacl.so.1()(64bit)libacl.so.1(ACL_1.0)(64bit)libc.so.6()(64bit)libc.so.6(GLIBC_2.11)(64bit)libc.so.6(GLIBC_2.14)(64bit)libc.so.6(GLIBC_2.15)(64bit)libc.so.6(GLIBC_2.2.5)(64bit)libc.so.6(GLIBC_2.28)(64bit)libc.so.6(GLIBC_2.3)(64bit)libc.so.6(GLIBC_2.3.4)(64bit)libc.so.6(GLIBC_2.4)(64bit)libdl.so.2()(64bit)libdl.so.2(GLIBC_2.2.5)(64bit)libgpm.so.2()(64bit)libm.so.6()(64bit)libm.so.6(GLIBC_2.2.5)(64bit)libpthread.so.0()(64bit)libpthread.so.0(GLIBC_2.2.5)(64bit)libselinux.so.1()(64bit)libtinfo.so.6()(64bit)rpmlib(CompressedFileNames) &lt;&#x3D; 3.0.4-1rpmlib(FileDigests) &lt;&#x3D; 4.6.0-1rpmlib(PayloadFilesHavePrefix) &lt;&#x3D; 4.0-1rpmlib(PayloadIsXz) &lt;&#x3D; 5.2-1rtld(GNU_HASH)vim-common &#x3D; 2:8.0.1763-15.el8which 2 查还没有安装的12345678910111213[root@sam Packages]# rpm -qpR &#x2F;tmp&#x2F;iso2&#x2F;Packages&#x2F;vim-common-7.4.160-5.el7.x86_64.rpm&#x2F;bin&#x2F;shconfig(vim-common) &#x3D; 2:7.4.160-5.el7libc.so.6()(64bit)libc.so.6(GLIBC_2.2.5)(64bit)libc.so.6(GLIBC_2.3)(64bit)libc.so.6(GLIBC_2.3.4)(64bit)rpmlib(CompressedFileNames) &lt;&#x3D; 3.0.4-1rpmlib(FileDigests) &lt;&#x3D; 4.6.0-1rpmlib(PayloadFilesHavePrefix) &lt;&#x3D; 4.0-1rtld(GNU_HASH)vim-filesystemrpmlib(PayloadIsXz) &lt;&#x3D; 5.2-1 3 要下载一个 RPM 包而不安装，可以使用叫做’yumdownloader’的工具，下面我们先安装yumdownloader：现在我们来检查一个未安装的RPM包的依赖关系(本例使用 tcpdump)。首先，我们使用yumdownloader把tcpdump的RPM包下载下来 1[root@sam Packages]# yumdownloader --destdir&#x3D;. tcpdump 4 显示目标包所依赖的包：(为让repoquery正常的工作，需要保持网络的畅通，应为repoquery需要在Yum库中查找信息)1[root@sam Packages]# repoquery --requires --resolve &lt;package-name&gt; 5 只需运行rpmreaper就可以看到RPM包的依赖关系：rpmrepater会向用户显示已安装包的列表，你可以使用上/下箭头来滚动屏幕。 你可以在指定包上使用”r”键来显示其依赖关系，循环在指定包上按下”r”键可以展示出余下的信息。 “L”标志的意思是说这个包是一片“孤叶”，意思说说没有任何包依赖它。 “o”标志是说这个包是整个依赖链的中间部分。 按下”b”键会显示其他依赖于该包的其他包。 6 还有一个办法是使用rpmdep工具 rpmdep是一个命令行工具，可以显示已安装包的完整包依赖关系图。该工具会分析RPM包的依赖性，从完整的排完序的拓扑图中摘取部分包的信息，形成列表展示给用户。该工具的输出结果可以直接使用到Dotty（可视化展示工具）中去。 在Fedora中安装rpmdep和dotty：rpmdep.pl -dot gzip.dot gzip$ dot -Tpng -o output.png gzip.dot 12345678910111213141516171819202122232425262728# yes &quot;N&quot; | yum remove pciutils&lt;&lt;truncated..&gt;&gt;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Package Arch Version Repository Size&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Removing: pciutils x86_64 3.5.1-3.el7 @anaconda&#x2F;7.6 196 kRemoving for dependencies: gnome-boxes x86_64 3.28.5-2.el7 @anaconda&#x2F;7.6 5.5 M libguestfs x86_64 1:1.38.2-12.el7_6.2 @rhel-7-server-rpms 4.3 M libguestfs-tools-c x86_64 1:1.38.2-12.el7_6.2 @rhel-7-server-rpms 19 M libguestfs-winsupport x86_64 7.2-2.el7 @rhel-7-server-rpms 2.2 M libibverbs x86_64 17.2-3.el7 @anaconda&#x2F;7.6 677 k librdmacm x86_64 17.2-3.el7 @anaconda&#x2F;7.6 122 k libvirt-daemon-kvm x86_64 4.5.0-10.el7 @anaconda&#x2F;7.6 0.0 open-vm-tools x86_64 10.2.5-3.el7 @anaconda&#x2F;7.6 2.1 M open-vm-tools-desktop x86_64 10.2.5-3.el7 @anaconda&#x2F;7.6 431 k pciutils-devel x86_64 3.5.1-3.el7 @rhel-7-server-optional-rpms 77 k qemu-kvm x86_64 10:1.5.3-160.el7 @anaconda&#x2F;7.6 5.8 M rdma-core x86_64 17.2-3.el7 @anaconda&#x2F;7.6 105 k virt-p2v-maker x86_64 1:1.38.2-12.el7_6.2 @rhel-7-server-rpms 226 k virt-v2v x86_64 1:1.38.2-12.el7_6.2 @rhel-7-server-rpms 18 MTransaction Summary&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Remove 1 Package (+14 Dependent packages)&lt;&lt;truncated..&gt;&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112[root@vm2rhel76 (i_am_vm2_rhel76) ~]# rpm -q --whatrequires pciutilsrdma-core-17.2-3.el7.x86_64open-vm-tools-10.2.5-3.el7.x86_64pciutils-devel-3.5.1-3.el7.x86_64L 5.5M ┌*&lt; gnome-boxes 3.28.5-2.el7.x86_64 4.3M ├*&lt; libguestfs 1.38.2-12.el7_6.2.x86_64 19.1M ├*&lt; libguestfs-tools-c 1.38.2-12.el7_6.2.x86_64 2.2M ├*&lt; libguestfs-winsupport 7.2-2.el7.x86_64 678K ├*&lt; libibverbs 17.2-3.el7.x86_64 122K ├*&lt; librdmacm 17.2-3.el7.x86_64 0K ├*&lt; libvirt-daemon-kvm 4.5.0-10.el7.x86_64 2.1M ├*&lt; open-vm-tools 10.2.5-3.el7.x86_64 L 432K ├*&lt; open-vm-tools-desktop 10.2.5-3.el7.x86_64 L 77K ├*&lt; pciutils-devel 3.5.1-3.el7.x86_64 5.8M ├*&lt; qemu-kvm 1.5.3-160.el7.x86_64 106K ├*&lt; rdma-core 17.2-3.el7.x86_64 L 227K ├*&lt; virt-p2v-maker 1.38.2-12.el7_6.2.x86_64 L 17.5M ├*&lt; virt-v2v 1.38.2-12.el7_6.2.x86_64 196K pciutils 3.5.1-3.el7.x86_64 2.1M ┌─&lt; open-vm-tools 10.2.5-3.el7.x86_64 L 77K ├─&lt; pciutils-devel 3.5.1-3.el7.x86_64 106K ├─&lt; rdma-core 17.2-3.el7.x86_64[root@vm2rhel76 (i_am_vm2_rhel76) ~]# rpmdep.pl -depending pciutils pciutils is needed by gnome-boxes,libguestfs,libguestfs-tools-c,libguestfs-winsupport,libibverbs,librdmacm,libvirt-daemon-kvm,open-vm-tools,open-vm-tools-desktop,pciutils-devel,qemu-kvm,rdma-core,virt-p2v-maker,virt-v2v[root@vm2rhel76 (i_am_vm2_rhel76) ~]# # rpmdep.pl -depending -dot pciutils.dot pciutils &amp;&amp; dot -Tpng pciutils.dot -o pciutils.png[root@vm2rhel76 (i_am_vm2_rhel76) ~]# repoquery --alldeps --whatrequires pciutilsdpdk-tools-0:2.0.0-8.el7.x86_64dpdk-tools-0:2.2.0-2.el7.x86_64dpdk-tools-0:2.2.0-3.el7.x86_64dpdk-tools-0:16.11.2-4.el7.x86_64dpdk-tools-0:17.11-7.el7.x86_64dpdk-tools-0:17.11-11.el7.x86_64dpdk-tools-0:17.11-13.el7.x86_64dpdk-tools-0:17.11-15.el7.x86_64dpdk-tools-0:18.11-2.el7_6.x86_64dpdk-tools-0:18.11-3.el7_6.x86_64dpdk-tools-0:18.11-4.el7_6.x86_64dpdk-tools-0:18.11.2-1.el7.x86_64facter-0:2.4.1-1.el7.x86_64hw-probe-0:1.4-12.el7.noarchinsights-client-0:3.0.3-8.el7.noarchinsights-client-0:3.0.3-9.el7_5.noarchinsights-client-0:3.0.6-2.el7_6.noarchinxi-0:3.0.35-1.el7.noarchleapp-repository-deps-0:0.7.0-5.el7_6.noarchleapp-repository-deps-0:0.8.1-2.el7_6.noarchlibguestfs-1:1.32.7-3.el7_3.2.x86_64libguestfs-1:1.32.7-3.el7_3.3.x86_64libguestfs-rescue-1:1.36.3-6.el7.x86_64libguestfs-rescue-1:1.36.3-6.el7_4.2.x86_64libguestfs-rescue-1:1.36.3-6.el7_4.3.x86_64libguestfs-rescue-1:1.36.10-6.el7.x86_64libguestfs-rescue-1:1.36.10-6.el7_5.2.x86_64libguestfs-rescue-1:1.38.2-12.el7.x86_64libguestfs-rescue-1:1.38.2-12.el7_6.1.x86_64libguestfs-rescue-1:1.38.2-12.el7_6.2.x86_64libguestfs-rescue-1:1.40.2-5.el7.x86_64libguestfs-rescue-1:1.40.2-5.el7_7.1.x86_64open-vm-tools-0:10.1.5-3.el7.x86_64open-vm-tools-0:10.1.10-3.el7.x86_64open-vm-tools-0:10.1.10-3.el7_5.1.x86_64open-vm-tools-0:10.2.5-3.el7.x86_64open-vm-tools-0:10.3.0-2.el7.x86_64pciutils-devel-0:3.2.1-4.el7.i686pciutils-devel-0:3.2.1-4.el7.x86_64pciutils-devel-0:3.5.1-1.el7.i686pciutils-devel-0:3.5.1-1.el7.x86_64pciutils-devel-0:3.5.1-2.el7.i686pciutils-devel-0:3.5.1-2.el7.x86_64pciutils-devel-0:3.5.1-3.el7.i686pciutils-devel-0:3.5.1-3.el7.x86_64qt-settings-0:19-23.4.el7.noarchqt-settings-0:19-23.5.el7.noarchqt-settings-0:19-23.7.el7.noarchqt-settings-0:19-23.8.el7.noarchqt-settings-0:19-23.9.el7.noarchrdma-0:7.3_4.7_rc2-5.el7.noarchrdma-0:7.3_4.7_rc2-6.el7_3.noarchrdma-core-0:13-7.el7.i686rdma-core-0:13-7.el7.x86_64rdma-core-0:15-6.el7.i686rdma-core-0:15-6.el7.x86_64rdma-core-0:15-7.el7_5.i686rdma-core-0:15-7.el7_5.x86_64rdma-core-0:17.2-3.el7.i686rdma-core-0:17.2-3.el7.x86_64rdma-core-0:22.1-3.el7.i686rdma-core-0:22.1-3.el7.x86_64redhat-access-insights-0:1.0.4-0.el7_1.noarchredhat-access-insights-0:1.0.6-0.el7.noarchredhat-access-insights-0:1.0.11-0.el7.noarchredhat-access-insights-0:1.0.13-2.el7.noarchsalt-0:2015.5.10-2.el7.noarchtlp-0:1.1-1.el7.noarch[root@vm2rhel76 (i_am_vm2_rhel76) ~]#","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Red Hat Enterprise Linux 8 的新玩意 第1 篇之容器工具 podman","slug":"linux_oostech_RHEL8_podman","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_RHEL8_podman/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_RHEL8_podman/","excerpt":"","text":"Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第1篇 之容器工具 podmanpodmanpodman 用于操作容器和镜像. 它轻量化,抛弃了后台的daemon, 配合其底层的runc应用; 实现了与docker相同的功能比如pull, push, build, run, commit, tag等等,可用来代替 docker daemon 以及docker 命令行; 同时又拥有其扩展以及不同点: 通过参数-a 或者 --all 来实现对容器,容器镜像的快速清理. 比如, podman rm --all 或者 podman rmi --all podman 支持登陆功能, 可以通过登陆 Red Hat 镜像资源来获取 Red Hat 官方容器镜像. (访问Red Hat 镜像资源, 需要通过有效的Red Hat账户来登陆.) Red Hat 官方镜像资源 registry.redhat.io; Red Hat 维护的第三方资源 registry.connect.redhat.com 登入: 1#podman login -u rhn-support-goodluck https:&#x2F;&#x2F;registry.redhat.io 登出: 1#podman logout https:&#x2F;&#x2F;registry.redhat.io docker 容器的存储路径在 /var/lib/docker 而 podman 则使用 /var/lib/containers 说了这么多,我们还是来具体看看 podman 的一些常用的命令比如 pull, run, build , commit;同时也可以使用 podman -h 来了解更多的命令1 podman pull 这个命令可以用来从HUB上将需要的镜像拷贝到本地. 比如将 rhel8-beta 镜像从Red Hat 官方的 registry.redhat.io 拷贝到本地.(记得先login哦)1podman pull registry.redhat.io&#x2F;rhel8-beta 12345678[root@goodluck~]#podman pull registry.redhat.io&#x2F;rhel8-betaTrying to pull registry.redhat.io&#x2F;rhel8-beta...Getting image source signaturesCopying blob 619051b1good: 66.48 MiB &#x2F; 66.48 MiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 56sCopying blob 386105aegood: 1.33 KiB &#x2F; 1.33 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 56sCopying config a80dad1cgood: 6.33 KiB &#x2F; 6.33 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sWriting manifest to image destinationStoring signaturesa80dad1c19537b0961e485dfa0a43fbe3c0a71cec2cca32d3264e087e396good 比如将 fedora:29 镜像从 docker.io 拷贝到本地.1podman pull docker.io&#x2F;library&#x2F;fedora:29 1234567[root@goodluck~]#podman pull docker.io&#x2F;library&#x2F;fedora:29Trying to pull docker.io&#x2F;library&#x2F;fedora:29...Getting image source signaturesCopying blob 01eb0781good: 85.81 MiB &#x2F; 85.81 MiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 17sCopying config d09302f7good: 1.97 KiB &#x2F; 1.97 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sWriting manifest to image destinationStoring signaturesd09302f77cfcc3e867829d80ff47f9e7738ffef69730d54ec44341a9fb1dgood 2 podman run 等同于 docker run, 通过一个容器镜像来启动一个进程(容器), 它拥有独立的文件系统,独立网络和其维护的进程树等等 比如以交互模式来执行一个 RHEL 8 beta 容器1podman run -it registry.redhat.io&#x2F;rhel8-beta&#x2F;rhel &#x2F;bin&#x2F;bash 123456789[root@goodluck~]#podman run -it registry.redhat.io&#x2F;rhel8-beta&#x2F;rhel &#x2F;bin&#x2F;bashbash-4.4# cat &#x2F;etc&#x2F;redhat-releaseRed Hat Enterprise Linux release 8.0 Beta (Ootpa)bash-4.4# uname -aLinux 2b225eeecc44 4.18.0-80.el8.x86_64 #1 SMP Wed Mar 13 12:02:46 UTC 2019 x86_64 x86_64 x86_64 GNU&#x2F;Linuxbash-4.4# echo &quot;hello podman :-)&quot;hello podman :-)bash-4.4# exitexit 小Tips: 如果启动过程中看到类似的信息,可以将 selinux 设置为 permissive1&#x2F;bin&#x2F;bash: error while loading shared libraries: libc.so.6: cannot change memory protections 3 podman build 生成容器镜像,有两种方法来生成容器镜像 通过 Dockerfile 来生成一个新的容器镜像我们需要编写一个 Dockerfile ;例子, 我们以 rhel8-beta 为基础, 让容器启动时,执行我们的 hello_podman.sh12345[root@goodluck~]# cat Dockerfile# This is a test dockerfileFROM registry.redhat.io&#x2F;rhel8-beta:latestENTRYPOINT [&quot;&#x2F;usr&#x2F;bin&#x2F;hello_podman.sh&quot;]RUN echo $&#39;#!&#x2F;bin&#x2F;sh \\n echo &quot; *** HELLO PODMAN *** &quot;&#39;&gt;&#x2F;usr&#x2F;bin&#x2F;hello_podman.sh &amp;&amp; chmod +x &#x2F;usr&#x2F;bin&#x2F;hello_podman.sh 以 hello_podman 为镜像的 tag 生成一个新的容器镜像12345678[root@goodluck~]# podman build -t rhel8-beta:hello_podman .STEP 1: FROM registry.redhat.io&#x2F;rhel8-beta:latestSTEP 2: ENTRYPOINT [&quot;&#x2F;usr&#x2F;bin&#x2F;hello_podman.sh&quot;]--&gt; Using cache e010d561555d180015d6c0d30a3f67fa602ea1ae54628d5666235db42f43goodSTEP 3: FROM e010d561555d180015d6c0d30a3f67fa602ea1ae54628d5666235db42f43goodSTEP 4: RUN echo $&#39;#!&#x2F;bin&#x2F;sh \\n echo &quot; *** HELLO PODMAN *** &quot;&#39;&gt;&#x2F;usr&#x2F;bin&#x2F;hello_podman.sh &amp;&amp; chmod +x &#x2F;usr&#x2F;bin&#x2F;hello_podman.sh--&gt; Using cache a292528dfb8c1477419904d19dce108e3d2c105c6efbf0fd677d1dd47fe7goodSTEP 5: COMMIT rhel8-beta:hello_podman 执行验证我们的镜像12[root@goodluck~]# podman run rhel8-beta:hello_podman *** HELLO PODMAN *** 通过修改一个运行中的容器来生成一个新的容器镜像首先,我们执行一个容器并作相应的修改例子和logs1234[root@goodluck~]# podman run -it registry.redhat.io&#x2F;rhel8-beta &#x2F;bin&#x2F;bashbash-4.4# echo $&#39;#!&#x2F;bin&#x2F;sh \\n echo &quot; *** HELLO PODMAN AGAIN*** &quot;&#39;&gt;&#x2F;usr&#x2F;bin&#x2F;hello_podman_again.sh &amp;&amp; chmod +x &#x2F;usr&#x2F;bin&#x2F;hello_podman_again.shbash-4.4# exitexit 找出刚刚执行且修改过的容器ID123[root@goodluck~]# podman ps -lCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES8dfd64dfgood registry.redhat.io&#x2F;rhel8-beta&#x2F;rhel:latest &#x2F;bin&#x2F;bash About a minute ago Exited (0) About a minute ago frosty_bhabha 通过 commit 基于刚刚的容器镜像,以 hello_podman_again 为 tag 生成一个新的容器镜像.123456789[root@goodluck~]# podman commit 8dfd64dfgood rhel8-beta:hello_podman_againGetting image source signaturesSkipping blob fba35a2dgood (already present): 200.01 MiB &#x2F; 200.01 MiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sSkipping blob 848ae511good (already present): 10.00 KiB &#x2F; 10.00 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sCopying blob aed58d13good: 5.50 KiB &#x2F; 5.50 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sCopying config 4036a262good: 3.12 KiB &#x2F; 3.12 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sWriting manifest to image destinationStoring signatures4036a262d1c54477cc8f5014bcb57be323b408c31c78f35a7f6b198a4f6agood 执行验证我们的镜像12[root@goodluck~]# podman run rhel8-beta:hello_podman_again &#x2F;usr&#x2F;bin&#x2F;hello_podman_again.sh *** HELLO PODMAN AGAIN*** 使用 docker commit 意味着所有对镜像的操作都是黑箱操作，生成的镜像也被称为 黑箱镜像，换句话说，就是除了制作镜像的人知道执行过什么命令、怎么生成的镜像，别人根本无从得知。而且，即使是这个制作镜像的人，过一段时间后也无法记清具体的操作。这种黑箱镜像的维护工作是非常痛苦的 4. 使用inspect 查看容器详细信息1# podman inspect 8dfd64dfgood 5. 使用logs 查看信息1# podman logs -f 8dfd64dfgood 6. 停止一个容器1# podman stop 8dfd64dfgood 7. 查看一个容器的文件系统的改动1# podman diff 8dfd64dfgood 8 查看镜像，容器，卷 占用的空间大小12345# podman system dfTYPE TOTAL ACTIVE SIZE RECLAIMABLEImages 57 4 57.3GB 57.3GB (99%)Containers 5 0 1.36GB 1.36GB (100%)Local Volumes 2 1 9.31MB 9.31MB (100%) 9 启动一个容器 -d 已 deamon的形式执行， -p host的端口：容器的端口（格式为 EXPOSE &lt;端口1&gt; [&lt;端口2&gt;…]EXPOSE 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 docker/podman run -P 时，会自动随机映射 EXPOSE 的端口。要将 EXPOSE 和在运行时使用 -p &lt;宿主端口&gt;:&lt;容器端口&gt; 区分开来。-p，是映射宿主端口和容器端口，换句话说，就是将容器的对应端口服务公开给外界访问，而 EXPOSE 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射。） 注： 容器是否会长久运行，是和 docker run 指定的命令有关，和 -d 参数无关。 123456[root@sam Python-3.4.10]# podman run --rm --name webserver -d -p 8888:80 nginx5d8a68f639dcdfea6e0a74a4916973b44b2babb0b3998bc0ec1c71f55c99b648[root@sam Python-3.4.10]# podman psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES5d8a68f639dc docker.io&#x2F;library&#x2F;nginx:latest nginx -g daemon o... 11 seconds ago Up 11 seconds ago 0.0.0.0:8888-&gt;80&#x2F;tcp webserver[root@sam Python-3.4.10]# 10 进入刚刚的容器 (也可以使用attach， 但是注意的，如果exit之后，容器也会终止， 使用exec则不会终止)1# podman exec -it webserver bash 11 使用diff看里面文件的修改1# podman diff webserver 12 查看修改的历史（–no-trunc 现实完整命令）1# podman history registry.redhat.io&#x2F;rhel7:7.8-crash-v2 13 导出本地镜像1# docker export 7691a814370e &gt; ubuntu.tar 14 一次清除所有在推出状态的容器1# podman container prune 15 仓库服务器12[Registry 注册服务器地址] [仓库名] [镜像名字]registry.access.redhat.com&#x2F;rhosp13&#x2F;openstack-nova-compute 16 查找镜像可以使用search1# podman search centos 17 通过使用docker-registry建立本地镜像仓库（这将使用官方的 registry 镜像来启动私有仓库。默认情况下，仓库会被创建在容器的 /var/lib/registry 目录下。你可以通过 -v 参数来将镜像文件存放在本地的指定路径。例如下面的例子将上传的镜像放到本地的 /opt/data/registry 目录。）17.1 创建好私有仓库之后，就可以使用 podman tag 来标记一个镜像，然后推送它到仓库。例如私有仓库地址为 127.0.0.1:500012# podman run -d -p 5000:5000 --restart&#x3D;always --name registry registry# podman run -d -p 5000:5000 -v &#x2F;opt&#x2F;data&#x2F;registry:&#x2F;var&#x2F;lib&#x2F;registry registry 17.2 使用podman tag来对tag的设置使用 podman tag 将 ubuntu:latest 这个镜像标记为 127.0.0.1:5000/ubuntu:latest。格式为 podman tag IMAGE[:TAG] [REGISTRY_HOST[:REGISTRY_PORT]/]REPOSITORY[:TAG] 1# podman tag ubuntu:latest 127.0.0.1:5000&#x2F;ubuntu:latest 18 创建一个数据卷1# podman volume create sam-volume 19 查看一个数据卷1# podman volume ls 20 查看一个数据卷的详细信息1# podman volume inspect sam-volume 21 如果需要在删除容器的时候，也删除数据卷1# podman rm -v 22 清理无主的数据卷1# podman volume prune 23 挂载一个主机目录作为数据卷 (使用 –mount 标记可以指定挂载一个本地主机的目录到容器中去). 上面的命令加载主机的 /src/webapp 目录到容器的 /opt/webapp目录。这个功能在进行测试的时候十分方便，比如用户可以放置一些程序到本地目录中，来查看容器是否正常工作。本地目录的路径必须是绝对路径，(以前使用 -v 参数时如果本地目录不存在 podman 会自动为你创建一个文件夹，现在使用 –mount 参数时如果本地目录不存在，podman 会报错。)1# podman run --name sampinta --mount type&#x3D;bind,source&#x3D;&#x2F;root&#x2F;Pictures,target&#x3D;&#x2F;opt&#x2F; localhost&#x2F;pinta_filezilla:v3 24 挂载一个本地主机文件作为数据卷1# podman run --name sampinta --mount type&#x3D;bind,source&#x3D;&#x2F;tmp&#x2F;history,target&#x3D;&#x2F;root&#x2F;.bash_history localhost&#x2F;pinta_filezilla:v3 25 映射指定端口以及针对IP的端口（-p 标记可以多次使用来绑定多个端口）25.1 主机的6000端口与容器的5000端口映射1podman run -d -p 6000:5000 registry.redhat.io&#x2F;rhel7 25.2 主机的IP上的6000端口与容器的5000端口映射1podman run -d -p 127.0.0.1:6000:5000 registry.redhat.io&#x2F;rhel7 25.3 主机的任意端口与容器的5000端口映射1podman run -d -p 127.0.0.1::5000 registry.redhat.io&#x2F;rhel7 25.4 主机的IP的6000端口与容器的5000端口通过UDP映射1podman run -d -p 127.0.0.1:6000:5000&#x2F;udp reg-p 标记可以多次使用来绑定多个端口istry.redhat.io&#x2F;rhel7 25.5 查看端口映射配置1podman port nostalgic_morse 6000 26 容器互联，我们也可以通过“podman network” 类命令实现 (可以通过使用–dns=DNS_IP指定 容器需要的DNS地址)26.1 创建一个新的网络 （-d指定网络的类型，有overlay，bridge。 其中 overlay 网络类似与 “swarm mode”）1podman network create -d bridge test-net 26.2 运行一个容器并且连接到test-net1podman run -it --rm --name ubi2-test-net --network test-net registry.redhat.io&#x2F;rhel7:7.8-crash-v2 sh 27 如果容器需要访问外部网络，需要使用1net.ipv4.ip_forward &#x3D; 1 28 podman ps 显示全的命令12docker ps -a --no-truncpodman ps -a --no-trunc 27 （TO BE VERIFIED）多个容器互联，推荐docker compose21 (TO BE VERIFIED) 启动一个挂在数据卷的容器（在用 podman run 命令的时候，使用 –mount 标记来将 数据卷 挂载到容器里。在一次 podman run 中可以挂载多个 数据卷。下面创建一个名为 web 的容器，并加载一个 数据卷 到容器的 /webapp 目录）1$ podman run -d -P --name web --mount source&#x3D;sam-volume,target&#x3D;&#x2F;webapp bash -p 标记可以多次使用来绑定多个端口 好, Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第1篇 之容器工具 podman 就介绍完毕了. 想要了解更多? 可以参考 man podman 和 podman -h想要亲手玩一下新玩具? 请随时去 https://www.redhat.com 下载最新的 REHL 8 咯 也可以关注 AddOS 微信公众号获取更多的,有意思的新玩具 :-)","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"X86 汇编指令大全","slug":"code_oostech_X86_MASN_instructions","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/code_oostech_X86_MASN_instructions/","link":"","permalink":"http://www.oostech.com/2021/02/16/code_oostech_X86_MASN_instructions/","excerpt":"","text":"X86 汇编指令大全1 数据传输字令1.1 通用数据传送指令.1234567891011121314MOV 传送字或字节.MOVSX 先符号扩展,再传送.MOVZX 先零扩展,再传送.PUSH 把字压入堆栈.POP 把字弹出堆栈.PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈.POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈.PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈.POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈.BSWAP 交换32位寄存器里字节的顺序XCHG 交换字或字节.(至少有一个操作数为寄存器,段寄存器不可作为操作数)CMPXCHG 比较并交换操作数.(第二个操作数必须为累加器AL&#x2F;AX&#x2F;EAX)XADD 先交换再累加.(结果在第一个操作数里)XLAT 字节查表转换.----BX指向一张256字节的表的起点,AL为表的索引值(0-255,即0-FFH);返回AL为查表结果.([BX+AL]-&gt;AL) 1.2 输入输出端口传送指令.12IN I&#x2F;O端口输入. ( 语法: IN 累加器, &#123;端口号│DX&#125; )OUT I&#x2F;O端口输出. ( 语法: OUT &#123;端口号│DX&#125;,累加器 )输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535. 1.3 目的地址传送指令.123456LEA 装入有效地址.例: LEA DX,string ;把偏移地址存到DX.LDS 传送目标指针,把指针内容装入DS.例: LDS SI,string ;把段地址:偏移地址存到DS:SI.LES 传送目标指针,把指针内容装入ES.例: LES DI,string ;把段地址:偏移地址存到ES:DI.LFS 传送目标指针,把指针内容装入FS.例: LFS DI,string ;把段地址:偏移地址存到FS:DI.LGS 传送目标指针,把指针内容装入GS.例: LGS DI,string ;把段地址:偏移地址存到GS:DI.LSS 传送目标指针,把指针内容装入SS.例: LSS DI,string ;把段地址:偏移地址存到SS:DI. 1.4 标志传送指令.123456LAHF 标志寄存器传送,把标志装入AH.SAHF 标志寄存器传送,把AH内容装入标志寄存器.PUSHF 标志入栈.POPF 标志出栈.PUSHD 32位标志入栈.POPD 32位标志出栈. 2 算术运算指令12345678910111213141516171819202122ADD 加法.ADC 带进位加法.INC 加 1.AAA 加法的ASCII码调整.DAA 加法的十进制调整.SUB 减法.SBB 带借位减法.DEC 减 1.NEG 求反(以 0 减之).CMP 比较.(两操作数作减法,仅修改标志位,不回送结果).AAS 减法的ASCII码调整.DAS 减法的十进制调整.MUL 无符号乘法.结果回送AH和AL(字节运算),或DX和AX(字运算),IMUL 整数乘法.结果回送AH和AL(字节运算),或DX和AX(字运算),AAM 乘法的ASCII码调整.DIV 无符号除法.结果回送:商回送AL,余数回送AH, (字节运算);或 商回送AX,余数回送DX, (字运算).IDIV 整数除法.结果回送:商回送AL,余数回送AH, (字节运算);或 商回送AX,余数回送DX, (字运算).AAD 除法的ASCII码调整.CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去) 3 逻辑运算指令1234567891011121314151617AND 与运算.OR 或运算.XOR 异或运算.NOT 取反.TEST 测试.(两操作数作与运算,仅修改标志位,不回送结果).SHL 逻辑左移.SAL 算术左移.(&#x3D;SHL)SHR 逻辑右移.SAR 算术右移.(&#x3D;SHR)ROL 循环左移.ROR 循环右移.RCL 通过进位的循环左移.RCR 通过进位的循环右移. 以上八种移位指令,其移位次数可达255次. 移位一次时, 可直接用操作码. 如 SHL AX,1. 移位&gt;1次时, 则由寄存器CL给出移位次数. 如 MOV CL,04 SHL AX,CL 4 串指令12345678910111213141516 DS:SI 源串段寄存器 :源串变址. ES:DI 目标串段寄存器:目标串变址. CX 重复次数计数器. AL&#x2F;AX 扫描值. D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量. Z标志 用来控制扫描或比较操作的结束.MOVS 串传送.( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )CMPS 串比较.( CMPSB 比较字符. CMPSW 比较字. )SCAS 串扫描.把AL或AX的内容与目标串作比较,比较结果反映在标志位.LODS 装入串.把源串中的元素(字或字节)逐一装入AL或AX中.( LODSB 传送字符. LODSW 传送字. LODSD 传送双字. )STOS 保存串.是LODS的逆过程.REP 当CX&#x2F;ECX&lt;&gt;0时重复.REPE&#x2F;REPZ 当ZF&#x3D;1或比较结果相等,且CX&#x2F;ECX&lt;&gt;0时重复.REPNE&#x2F;REPNZ 当ZF&#x3D;0或比较结果不相等,且CX&#x2F;ECX&lt;&gt;0时重复.REPC 当CF&#x3D;1且CX&#x2F;ECX&lt;&gt;0时重复.REPNC 当CF&#x3D;0且CX&#x2F;ECX&lt;&gt;0时重复. 5 程序转移指令5.1 无条件转移指令 (长转移)123JMP 无条件转移指令CALL 过程调用RET&#x2F;RETF 过程返回. 5.2 条件转移指令 (短转移,-128到+127的距离内)( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 )1234567891011121314151617181920JA&#x2F;JNBE 不小于或不等于时转移.JAE&#x2F;JNB 大于或等于转移.JB&#x2F;JNAE 小于转移.JBE&#x2F;JNA 小于或等于转移. 以上四条,测试无符号整数运算的结果(标志C和Z).JG&#x2F;JNLE 大于转移.JGE&#x2F;JNL 大于或等于转移.JL&#x2F;JNGE 小于转移.JLE&#x2F;JNG 小于或等于转移. 以上四条,测试带符号整数运算的结果(标志S,O和Z).JE&#x2F;JZ 等于转移.JNE&#x2F;JNZ 不等于时转移.JC 有进位时转移.JNC 无进位时转移.JNO 不溢出时转移.JNP&#x2F;JPO 奇偶性为奇数时转移.JNS 符号位为 &quot;0&quot; 时转移.JO 溢出转移.JP&#x2F;JPE 奇偶性为偶数时转移.JS 符号位为 &quot;1&quot; 时转移. 5.3 循环控制指令(短转移)12345LOOP CX不为零时循环.LOOPE&#x2F;LOOPZ CX不为零且标志Z&#x3D;1时循环.LOOPNE&#x2F;LOOPNZ CX不为零且标志Z&#x3D;0时循环.JCXZ CX为零时转移.JECXZ ECX为零时转移. 5.4 中断指令123INT 中断指令INTO 溢出中断IRET 中断返回 5.5 处理器控制指令123456789101112HLT 处理器暂停, 直到出现中断或复位信号才继续.WAIT 当芯片引线TEST为高电平时使CPU进入等待状态.ESC 转换到外处理器.LOCK 封锁总线.NOP 空操作.STC 置进位标志位.CLC 清进位标志位.CMC 进位标志取反.STD 置方向标志位.CLD 清方向标志位.STI 置中断允许位.CLI 清中断允许位. 6 伪指令1234567DW 定义字(2字节).PROC 定义过程.ENDP 过程结束.SEGMENT 定义段.ASSUME 建立段寄存器寻址.ENDS 段结束.END 程序结束. 7 处理机控制指令：标志处理指令123456789101112CLC 进位位置0指令CMC 进位位求反指令STC 进位位置为1指令CLD 方向标志置1指令STD 方向标志位置1指令CLI 中断标志置0指令STI 中断标志置1指令NOP 无操作HLT 停机WAIT 等待ESC 换码LOCK 封锁 8 浮点运算指令集8.1 控制指令(带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B)1234567891011121314151617181920212223FINIT 初始化浮点部件 机器码 9B DB E3FCLEX 清除异常 机器码 9B DB E2FDISI 浮点检查禁止中断 机器码 9B DB E1FENI 浮点检查禁止中断二 机器码 9B DB E0WAIT 同步CPU和FPU 机器码 9BFWAIT 同步CPU和FPU 机器码 D9 D0FNOP 无操作 机器码 DA E9FXCH 交换ST(0)和ST(1) 机器码 D9 C9FXCH ST(i) 交换ST(0)和ST(i) 机器码 D9 C1iiiFSTSW ax 状态字到ax 机器码 9B DF E0FSTSW word ptr mem 状态字到mem 机器码 9B DD mm111mmmFLDCW word ptr mem mem到状态字 机器码 D9 mm101mmmFSTCW word ptr mem 控制字到mem 机器码 9B D9 mm111mmmFLDENV word ptr mem mem到全环境 机器码 D9 mm100mmmFSTENV word ptr mem 全环境到mem 机器码 9B D9 mm110mmmFRSTOR word ptr mem mem到FPU状态 机器码 DD mm100mmmFSAVE word ptr mem FPU状态到mem 机器码 9B DD mm110mmmFFREE ST(i) 标志ST(i)未使用 机器码 DD C0iiiFDECSTP 减少栈指针1-&gt;0 2-&gt;1 机器码 D9 F6FINCSTP 增加栈指针0-&gt;1 1-&gt;2 机器码 D9 F7FSETPM 浮点设置保护 机器码 DB E4 8.2 数据传送指令123456789101112131415161718192021222324252627282930313233343536373839404142FLDZ 将0.0装入ST(0) 机器码 D9 EEFLD1 将1.0装入ST(0) 机器码 D9 E8FLDPI 将π装入ST(0) 机器码 D9 EBFLDL2T 将ln10&#x2F;ln2装入ST(0) 机器码 D9 E9FLDL2E 将1&#x2F;ln2装入ST(0) 机器码 D9 EAFLDLG2 将ln2&#x2F;ln10装入ST(0) 机器码 D9 ECFLDLN2 将ln2装入ST(0) 机器码 D9 EDFLD real4 ptr mem 装入mem的单精度浮点数 机器码 D9 mm000mmmFLD real8 ptr mem 装入mem的双精度浮点数 机器码 DD mm000mmmFLD real10 ptr mem 装入mem的十字节浮点数 机器码 DB mm101mmmFILD word ptr mem 装入mem的二字节整数 机器码 DF mm000mmmFILD dword ptr mem 装入mem的四字节整数 机器码 DB mm000mmmFILD qword ptr mem 装入mem的八字节整数 机器码 DF mm101mmmFBLD tbyte ptr mem 装入mem的十字节BCD数 机器码 DF mm100mmmFST real4 ptr mem 保存单精度浮点数到mem 机器码 D9 mm010mmmFST real8 ptr mem 保存双精度浮点数到mem 机器码 DD mm010mmmFIST word ptr mem 保存二字节整数到mem 机器码 DF mm010mmmFIST dword ptr mem 保存四字节整数到mem 机器码 DB mm010mmmFSTP real4 ptr mem 保存单精度浮点数到mem并出栈 机器码 D9 mm011mmmFSTP real8 ptr mem 保存双精度浮点数到mem并出栈 机器码 DD mm011mmmFSTP real10 ptr mem 保存十字节浮点数到mem并出栈 机器码 DB mm111mmmFISTP word ptr mem 保存二字节整数到mem并出栈 机器码 DF mm011mmmFISTP dword ptr mem 保存四字节整数到mem并出栈 机器码 DB mm011mmmFISTP qword ptr mem 保存八字节整数到mem并出栈 机器码 DF mm111mmmFBSTP tbyte ptr mem 保存十字节BCD数到mem并出栈 机器码 DF mm110mmmFCMOVB ST(0),ST(i) &lt;时传送 机器码 DA C0iiiFCMOVBE ST(0),ST(i) &lt;&#x3D;时传送 机器码 DA D0iiiFCMOVE ST(0),ST(i) &#x3D;时传送 机器码 DA C1iiiFCMOVNB ST(0),ST(i) &gt;&#x3D;时传送 机器码 DB C0iiiFCMOVNBE ST(0),ST(i) &gt;时传送 机器码 DB D0iiiFCMOVNE ST(0),ST(i) !&#x3D;时传送 机器码 DB C1iiiFCMOVNU ST(0),ST(i) 有序时传送 机器码 DB D1iiiFCMOVU ST(0),ST(i) 无序时传送 机器码 DA D1iii 8.3 比较指令12345678910111213141516FCOM ST(0)-ST(1) 机器码 D8 D1FCOMI ST(0),ST(i) ST(0)-ST(1) 机器码 DB F0iiiFCOMIP ST(0),ST(i) ST(0)-ST(1)并出栈 机器码 DF F0iiiFCOM real4 ptr mem ST(0)-实数mem 机器码 D8 mm010mmmFCOM real8 ptr mem ST(0)-实数mem 机器码 DC mm010mmmFICOM word ptr mem ST(0)-整数mem 机器码 DE mm010mmmFICOM dword ptr mem ST(0)-整数mem 机器码 DA mm010mmmFICOMP word ptr mem ST(0)-整数mem并出栈 机器码 DE mm011mmmFICOMP dword ptr mem ST(0)-整数mem并出栈 机器码 DA mm011mmmFTST ST(0)-0 机器码 D9 E4FUCOM ST(i) ST(0)-ST(i) 机器码 DD E0iiiFUCOMP ST(i) ST(0)-ST(i)并出栈 机器码 DD E1iiiFUCOMPP ST(0)-ST(1)并二次出栈 机器码 DA E9FXAM ST(0)规格类型 机器码 D9 E5 8.4 运算指令123456789101112131415161718192021222324252627282930313233343536FADD 把目的操作数 (直接接在指令后的变量或堆栈缓存器) 与来源操作数 (接在目的操作数后的变量或堆栈缓存器) 相加，并将结果存入目的操作数FADDP ST(i),ST 这个指令是使目的操作数加上 ST 缓存器，并弹出 ST 缓存器，而目的操作数必须是堆栈缓存器的其中之一，最后不管目的操作数为何，经弹出一次后，目的操作数会变成上一个堆栈缓存器了FIADD FIADD 是把 ST 加上来源操作数，然后再存入 ST 缓存器，来源操作数必须是字组整数或短整数形态的变数FSUB 减FSUBPFSUBR 减数与被减数互换FSUBRPFISUBFISUBRFMUL 乘FMULPFIMULFDIV 除FDIVPFDIVRFDIVRPFIDIVFIDIVRFCHS 改变 ST 的正负值FABS 把 ST 之值取出，取其绝对值后再存回去。FSQRT 将 ST 之值取出，开根号后再存回去。FSCALE 这个指令是计算 ST*2^ST(1)之值，再把结果存入 ST 里而 ST(1) 之值不变。ST(1) 必须是在 -32768 到 32768 (-215 到 215 )之间的整数，如果超过这个范围计算结果无法确定，如果不是整数 ST(1) 会先向零舍入成整数再计算。所以为安全起见，最好是由字组整数载入到 ST(1) 里。FRNDINT 这个指令是把 ST 的数值舍入成整数，FPU 提供四种舍入方式，由 FPU 的控制字组(control word)中的 RC 两个位决定 RC 舍入控制 00 四舍五入 01 向负无限大舍入 10 向正无限大舍入 11 向零舍去","categories":[{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"在RHEL8.2 上面快速搭建 etherpad","slug":"linux_oostech_etherpad_on_rhel","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_etherpad_on_rhel/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_etherpad_on_rhel/","excerpt":"","text":"1 Etherpad 是什么呢？ 官网的介绍Etherpad is a highly customizable open source online editor providing collaborative editing in really real-time.Etherpad 维基百科Etherpad（曾用名EtherPad）是一个基于Web的在线文档协作工具。多个用户可以通过Etherpad同时编写一个文本文档，并看到所有的参与者的实时编辑。每个参与者的文本使用不同的颜色标记。在软件的侧边栏还有一个聊天框。 2 在RHEL上面快速搭建 Etherpad2.1 先在RHEL上面安装 nodejs1# yum install nodejs -y 2.2 把etherpad 下载回来（用git最方便了）1# git clone git:&#x2F;&#x2F;github.com&#x2F;ether&#x2F;etherpad-lite.git etherpad-lite 2.3 进入etherpad-lite的目录1# cd etherpad-lite&#x2F;bin&#x2F; 2.4 直接执行 run.sh (我直接使用root执行，所以要额外输入Etherpad rocks my socks )123456789101112131415161718192021222324252627282930313233343536373839404142# .&#x2F;run.shYou shouldn&#39;t start Etherpad as root!Please type &#39;Etherpad rocks my socks&#39; (or restart with the &#39;--root&#39;argument) if you still want to start it as root:&gt; Etherpad rocks my socksCopy the settings template to settings.json...Ensure that all dependencies are up to date... If this is the first time you have run Etherpad please be patient.&gt; wd@1.12.1 install &#x2F;mnt&#x2F;etherpad-lite&#x2F;src&#x2F;node_modules&#x2F;wd&gt; node scripts&#x2F;build-browser-scriptsadded 680 packages in 25.323sClearing minified cache...Starting Etherpad...[2021-02-17 20:36:20.263] [DEBUG] console - Running on Node v10.23.1 (minimum required Node version: 10.17.0)[2021-02-17 20:36:20.291] [INFO] console - All relative paths will be interpreted relative to the identified Etherpad base dir: &#x2F;mnt&#x2F;etherpad-lite[2021-02-17 20:36:20.293] [INFO] console - Random string used for versioning assets: 6726ee68[2021-02-17 20:36:20.295] [DEBUG] AbsolutePaths - Relative path &quot;settings.json&quot; can be rewritten to &quot;&#x2F;mnt&#x2F;etherpad-lite&#x2F;settings.json&quot;[2021-02-17 20:36:20.296] [DEBUG] AbsolutePaths - Relative path &quot;credentials.json&quot; can be rewritten to &quot;&#x2F;mnt&#x2F;etherpad-lite&#x2F;credentials.json&quot;[2021-02-17 20:36:20.320] [INFO] console - settings loaded from: &#x2F;mnt&#x2F;etherpad-lite&#x2F;settings.json[2021-02-17 20:36:20.321] [INFO] console - No credentials file found in &#x2F;mnt&#x2F;etherpad-lite&#x2F;credentials.json. Ignoring.[2021-02-17 20:36:20.323] [INFO] console - Using skin &quot;colibris&quot; in dir: &#x2F;mnt&#x2F;etherpad-lite&#x2F;src&#x2F;static&#x2F;skins&#x2F;colibris[2021-02-17 20:36:20.324] [INFO] console - Session key file &quot;&#x2F;mnt&#x2F;etherpad-lite&#x2F;SESSIONKEY.txt&quot; not found. Creating with random contents.[2021-02-17 20:36:20.325] [WARN] console - DirtyDB is used. This is not recommended for production. File location: &#x2F;mnt&#x2F;etherpad-lite&#x2F;var&#x2F;dirty.db[2021-02-17 20:36:20.949] [INFO] server - Starting Etherpad...[2021-02-17 20:36:21.155] [INFO] runNpm - Executing command: npm ls --long --json --depth&#x3D;0[2021-02-17 20:36:21.587] [INFO] runNpm - npm --version: 6.14.11[2021-02-17 20:36:25.547] [INFO] runNpm - Successfully ran command: npm ls --long --json --depth&#x3D;0[2021-02-17 20:36:26.208] [INFO] APIHandler - Api key file &quot;&#x2F;mnt&#x2F;etherpad-lite&#x2F;APIKEY.txt&quot; not found. Creating with random contents.[2021-02-17 20:36:26.403] [INFO] server - Installed plugins:[2021-02-17 20:36:26.406] [INFO] console - Report bugs at https:&#x2F;&#x2F;github.com&#x2F;ether&#x2F;etherpad-lite&#x2F;issues[2021-02-17 20:36:26.407] [INFO] console - Your Etherpad version is 1.8.8 (8ef0860)[2021-02-17 20:36:29.553] [INFO] http - HTTP server listening for connections[2021-02-17 20:36:29.554] [INFO] console - You can access your Etherpad instance at http:&#x2F;&#x2F;0.0.0.0:9001&#x2F;[2021-02-17 20:36:29.554] [WARN] console - Admin username and password not set in settings.json. To access admin please uncomment and edit &quot;users&quot; in settings.json[2021-02-17 20:36:29.554] [WARN] console - Etherpad is running in Development mode. This mode is slower for users and less secure than production mode. You should set the NODE_ENV environment variable to production by using: export NODE_ENV&#x3D;production[2021-02-17 20:36:29.555] [INFO] server - Etherpad is running......[2021-02-17 20:37:52.738] [INFO] Minify - Compress JS file js&#x2F;ace.js.[2021-02-17 20:37:53.298] [INFO] access - [CREATE] pad:ossTechPad socket:-uGaEi5dyAJi7iptAAAA IP:150.150.150.1 authorID:a.R9kht2nlTzuKSrsf......[2021-02-17 20:38:04.554] [INFO] Minify - Compress JS file js&#x2F;ace.js. 2.5 在可以连接到这个主机的机器上 打开比如 “http://150.150.150.30:9001/”，然后就可以使用了","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Red Hat Enterprise Linux 8 的新玩意 第2篇 之容器工具 buildah","slug":"linux_oostech_RHEL8_Buildah","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_RHEL8_Buildah/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_RHEL8_Buildah/","excerpt":"","text":"Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第2篇 之容器工具 buildahbuildah顾名思义,buildah 是一个用来生成,操作OCI (Open Container Initiative) 容器的工具. 那它都有些什么过人之处,要在RHEL8中引入它?让我们来看一下: 可以从无到有生成一个容器镜像; 也可以通过一个镜像来生成一个新的容器镜像 如同 podman 一样,不要daemon 的支持,轻量,快捷. 支持容器,容器镜像的查看 更安全,灵活.生成容器镜像时,可以移除make, gcc, fnd 等编译,开发,生级的工具,使生成容器镜像更稳固 直接挂载一个容器镜像,然后对其进行修改; 或者卸载容器的根文件系统 通过更新一个容器的根文件系统,由它作为基础生成一个新的容器镜像 对本地容器的重命名, 删除一个容器或者一个容器镜像 下面我们来通过一些例子看具体看看buildah的特性 容器的生成1 通过 dockerfile 来生成 (也叫 from scratch ). 编写一个简单的Dockerfile, 生成一个镜像,然后输出 HELLO BUILDAH 12345[root@rhel8 buildahbuild]# cat Dockerfile# This is a test dockerfileFROM docker.io&#x2F;library&#x2F;fedora:29ENTRYPOINT [&quot;&#x2F;usr&#x2F;bin&#x2F;hello_buildah.sh&quot;]RUN echo $&#39;#!&#x2F;bin&#x2F;sh \\n echo &quot; *** HELLO BUILDAH *** &quot;&#39;&gt;&#x2F;usr&#x2F;bin&#x2F;hello_buildah.sh &amp;&amp; chmod +x &#x2F;usr&#x2F;bin&#x2F;hello_buildah.sh 执行命令生成一个容器镜像 1[root@rhel8 buildahbuild]# buildah build-using-dockerfile -t hello_buildah --format oci . 1234567891011121314[root@rhel8 buildahbuild]# buildah build-using-dockerfile -t hello_buildah --format oci .STEP 1: FROM docker.io&#x2F;library&#x2F;fedora:29STEP 2: ENTRYPOINT [&quot;&#x2F;usr&#x2F;bin&#x2F;hello_buildah.sh&quot;]STEP 3: RUN echo $&#39;#!&#x2F;bin&#x2F;sh \\n echo &quot; *** HELLO BUILDAH *** &quot;&#39;&gt;&#x2F;usr&#x2F;bin&#x2F;hello_buildah.sh &amp;&amp; chmod +x &#x2F;usr&#x2F;bin&#x2F;hello_buildah.shSTEP 4: COMMIT containers-storage:[overlay@&#x2F;var&#x2F;lib&#x2F;containers&#x2F;storage+&#x2F;var&#x2F;run&#x2F;containers&#x2F;storage:overlay.override_kernel_check&#x3D;true]localhost&#x2F;hello_buildah:latestGetting image source signaturesSkipping fetch of repeat blob sha256:b7ba3be6a0d6426356fc49f538f0f929ed00e51a0a90906e354a345d46e23a8bCopying blob sha256:01e6ea24a0ce0bbd37204075038d46fb8fc345c2c0bf7b18153d01c361f0b3c7 243 B &#x2F; 243 B [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sCopying config sha256:33fdf51b925a6d02542c94fc3a4bf85a7375e2b039e5592985fdc1ba87498afa 1.12 KiB &#x2F; 1.12 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sWriting manifest to image destinationStoring signatures--&gt; 33fdf51b925a6d02542c94fc3a4bf85a7375e2b039e5592985fdc1ba87498afa 查看且运行测试我们刚刚生成的容器镜像 12[root@rhel8 buildahbuild]# podman image ls |grep buildahlocalhost&#x2F;hello_buildah latest 33fdf51b925a 13 seconds ago 283 MB 12[root@rhel8 buildahbuild]# podman run hello_buildah *** HELLO BUILDAH *** 2 通过修改运行中的容器来生成一个新的容器镜像 先找到我们想要作为基础的镜像 12[root@rhel8 buildahbuild]# buildah images |grep hello_buildahlocalhost&#x2F;hello_buildah latest 33fdf51b925a May 17, 2019 23:03 283 MB 运行这个容器 12[root@rhel8 buildahbuild]# buildah from hello_buildahhello_buildah-working-container 我们基于这个运行中容器来进行修改. 123[root@rhel8 buildahbuild]# buildah containersCONTAINER ID BUILDER IMAGE ID IMAGE NAME CONTAINER NAME6d075a79f753 * 33fdf51b925a localhost&#x2F;hello_buildah:latest hello_buildah-working-container 挂载这个容器的根文件系统 12[root@rhel8 buildahbuild]# buildah mount 6d075a79f753&#x2F;var&#x2F;lib&#x2F;containers&#x2F;storage&#x2F;overlay&#x2F;72f5d68a6659af57a198d28733baf8f64d279e29d02095ae2ef3d5c8f2cb9a42&#x2F;merged 修改它的内容(使用vi 然后添加 AGAIN) 1[root@rhel8 buildahbuild]# vi &#x2F;var&#x2F;lib&#x2F;containers&#x2F;storage&#x2F;overlay&#x2F;72f5d68a6659af57a198d28733baf8f64d279e29d02095ae2ef3d5c8f2cb9a42&#x2F;merged&#x2F;usr&#x2F;bin&#x2F;hello_buildah.sh 卸载这个容器的根文件 12[root@rhel8 buildahbuild]# buildah unmount 6d075a79f7536d075a79f75303c4a8e58f38ebb2997bd11c8238dda43f1bbc4d3ead97e3db17 提交我们刚刚作出的修改 1234567891011[root@rhel8 buildahbuild]# buildah commit 6d075a79f753 hello_buildah:hello_buildah_againGetting image source signaturesSkipping fetch of repeat blob sha256:b7ba3be6a0d6426356fc49f538f0f929ed00e51a0a90906e354a345d46e23a8bSkipping fetch of repeat blob sha256:f40cea9cee51b2055a9a2db587680e7ad77236c95af1466c8d61e6a5106f1d7dCopying blob sha256:31d09f99841c33a71ad2262826d65ca1e5a07cb153fd160519e6aa90a1dd727b 219 B &#x2F; 219 B [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sCopying config sha256:098b5186345f406c24a02cb18aa4bc26a5ab4e677b7cbd75500ce51a781387a1 1.23 KiB &#x2F; 1.23 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sWriting manifest to image destinationStoring signatures098b5186345f406c24a02cb18aa4bc26a5ab4e677b7cbd75500ce51a781387a1 运行测试验证 12[root@rhel8 buildahbuild]# podman run localhost&#x2F;hello_buildah:hello_buildah_again *** HELLO BUILDAH AGAIN*** 3 通过 buildah run 生成一个容器镜像 (可以实时定制,比如此添加,删除包,作特殊配置等). 启动一个容器镜像 12[root@rhel8 buildahbuild]# buildah from localhost&#x2F;fedora_29fedora_29-working-container 安装gcc开发包(删除包的操作也类似) 12345[root@rhel8 buildahbuild]# buildah run fedora_29-working-container yum install gcc -yFedora Modular 29 -x86_64 68 kB&#x2F;s | 1.5 MB 00:22Fedora Modular 29 - x86_64 - Updates 246 kB&#x2F;s | 2.4 MB 00:10......Complete! 指定要执行的命令 1[root@rhel8 buildahbuild]# buildah config --cmd &quot;gcc -v&quot; fedora_29-working-container 提交修改 12345678910[root@rhel8 buildahbuild]# buildah commit fedora_29-working-container fedora_29_with_gccGetting image source signaturesSkipping fetch of repeat blob sha256:b7ba3be6a0d6426356fc49f538f0f929ed00e51a0a90906e354a345d46e23a8bCopying blob sha256:bd3948f7d2c959300d42d56af86b97cdfedaf4c9b0268213905dbad7977d4dc1 214.84 MiB &#x2F; 214.84 MiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 10sCopying config sha256:789cb4f453c30271211fbc0a77c0cb913ff16746be2914377e5cba39839d855d 1.09 KiB &#x2F; 1.09 KiB [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 0sWriting manifest to image destinationStoring signatures789cb4f453c30271211fbc0a77c0cb913ff16746be2914377e5cba39839d855d 运行测试验证 12345678910[root@rhel8 buildahbuild]# podman run fedora_29_with_gccUsing built-in specs.COLLECT_GCC&#x3D;gccCOLLECT_LTO_WRAPPER&#x3D;&#x2F;usr&#x2F;libexec&#x2F;gcc&#x2F;x86_64-redhat-linux&#x2F;8&#x2F;lto-wrapperOFFLOAD_TARGET_NAMES&#x3D;nvptx-noneOFFLOAD_TARGET_DEFAULT&#x3D;1Target: x86_64-redhat-linuxConfigured with: ..&#x2F;configure --enable-bootstrap --enable-languages&#x3D;c,c++,fortran,objc,obj-c++,ada,go,lto --prefix&#x3D;&#x2F;usr --mandir&#x3D;&#x2F;usr&#x2F;share&#x2F;man --infodir&#x3D;&#x2F;usr&#x2F;share&#x2F;info --with-bugurl&#x3D;http:&#x2F;&#x2F;bugzilla.redhat.com&#x2F;bugzilla --enable-shared --enable-threads&#x3D;posix --enable-checking&#x3D;release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-gcc-major-version-only --with-linker-hash-style&#x3D;gnu --enable-plugin --enable-initfini-array --with-isl --enable-libmpx --enable-offload-targets&#x3D;nvptx-none --without-cuda-driver --enable-gnu-indirect-function --enable-cet --with-tune&#x3D;generic --with-arch_32&#x3D;i686 --build&#x3D;x86_64-redhat-linuxThread model: posixgcc version 8.3.1 20190223 (Red Hat 8.3.1-2) (GCC) 查看运行中的容器,查看容器镜像 查看运行中的容器 123[root@rhel8 buildahbuild]# buildah containersCONTAINER ID BUILDER IMAGE ID IMAGE NAME CONTAINER NAME3f71cb46good * a80dad1cgood registry.redhat.io&#x2F;rhel8-beta:latest rhel8-beta-working-container 查看容器镜像 12345[root@rhel8 buildahbuild]# buildah imagesIMAGE NAME MAGE TAG IMAGE ID CREATED AT SIZEregistry.redhat.io&#x2F;rhel8-beta latest a80dad1c1953 Nov 14, 2018 02:11 210 MBdocker.io&#x2F;library&#x2F;fedora 29 d09302f77cfc Mar 12, 2019 08:20 283 MBlocalhost&#x2F;hello_buildah latest 33fdf51b925a May 17, 2019 23:03 283 MB 容器的重命名, 删除容器或者删除容器镜像 容器重新命名命令 1# buildah rename 6d075a79f753 localhost&#x2F;hello_buildah_again 查看容器,找出容器ID 123[root@rhel8 buildahbuild]# buildah containersCONTAINER ID BUILDER IMAGE ID IMAGE NAME CONTAINER NAME6d075a79f753 * 33fdf51b925a localhost&#x2F;hello_buildah:latest localhost&#x2F;hello_buildah_again 容器重新命名 1[root@rhel8 buildahbuild]# buildah rename 6d075a79f753 localhost&#x2F;hello_buildah_again 确认 123[root@rhel8 buildahbuild]# buildah containersCONTAINER ID BUILDER IMAGE ID IMAGE NAME CONTAINER NAME6d075a79f753 * 33fdf51b925a localhost&#x2F;hello_buildah:latest localhost&#x2F;hello_buildah_again 容器删除命令 1# buildah rm 6d075a79f753 查看容器,找出容器ID 123[root@rhel8 buildahbuild]# buildah containersCONTAINER ID BUILDER IMAGE ID IMAGE NAME CONTAINER NAME6d075a79f753 * 33fdf51b925a localhost&#x2F;hello_buildah:latest localhost&#x2F;hello_buildah_again 删除容器 12[root@rhel8 buildahbuild]# buildah rm 6d075a79f7536d075a79f75303c4a8e58f38ebb2997bd11c8238dda43f1bbc4d3ead97e3db17 确认 12[root@rhel8 buildahbuild]# buildah containersCONTAINER ID BUILDER IMAGE ID IMAGE NAME CONTAINER NAME 容器镜像删除命令 1# buildah rmi a292528dfb8c 查看镜像,找出镜像ID 12[root@rhel8 buildahbuild]# buildah images |grep -w hello_podmanlocalhost&#x2F;rhel8-beta hello_podman a292528dfb8c May 16, 2019 10:43 210 MB 删除镜像 12[root@rhel8 buildahbuild]# buildah rmi a292528dfb8ce010d561555d180015d6c0d30a3f67fa602ea1ae54628d5666235db42f43433a 确认 1[root@rhel8 buildahbuild]# buildah images |grep -w hello_podman 好, Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第2篇 之容器工具 buildah. 想要了解更多? 可以参考 man buildah 和 buildah -h想要亲手玩一下新玩具? 请随时去 https://www.redhat.com 下载最新的 REHL 8 咯 也欢迎关注 addos 微信公众号获取更多的,有意思的新玩具 :-)","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"ovs-vsctl简明用户手册(基于版本openvswitch-2.11.0-4.el7.x86_64)","slug":"ovs_oostech_ovsctl_guide","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/ovs_oostech_ovsctl_guide/","link":"","permalink":"http://www.oostech.com/2021/02/16/ovs_oostech_ovsctl_guide/","excerpt":"","text":"ovs-vsctl简明用户手册(基于版本openvswitch-2.11.0-4.el7.x86_64)ovs-vsctl 是一个用户命令行界面,可以用来操作ovs-vswitchd这个后台程序 1#&#x2F;usr&#x2F;share&#x2F;openvswitch&#x2F;scripts&#x2F;ovs-ctl start 1 操作虚拟网桥的命令.1.1 初始化OVS数据库 (这个命令没有输出)1# ovs-vsctl init 例子1# ovs-vsctl init 1.2 输出当前OVS的状态, 比如你可以看到OVS网桥,端口(port),接口(interface)和对应的类型.1# ovs-vsctl show 例子12345678# ovs-vsctl showBridge &quot;samlee_br1&quot; Port &quot;samlee_br1&quot; Interface &quot;samlee_br1&quot; type: internal Port &quot;ens12&quot; Interface &quot;ens12&quot;ovs_version: &quot;2.11.0&quot; 1.3 重新启动OVS网桥 (这个命令没有输出)1# ovs-vsctl emer-reset 例子1# ovs-vsctl emer-reset 1.4 创建一个OVS网桥 (这个命令没有输出)1# ovs-vsctl add-br BRIDGE_NAME 例子 (add a bridge, named samlee_br1)1# ovs-vsctl add-br samlee_br1 1.5 通过OVS父网桥创建一个桥中桥,并配上VLAN号(这个命令没有输出)1# ovs-vsctl add-br BRIDGE_NAME PARENT_BR_NAME VLAN 例子1# ovs-vsctl add-br samlee_fake_br1 samlee_br1 200 1.6 删除OVS网桥并同时删除附在上面的端口与接口(这个命令没有输出)1# ovs-vsctl del-br BRIDGE_NAME 例子1# ovs-vsctl del-br tobedeleted_br1 1.7 列出所有OVS网桥的名字1# ovs-vsctl list-br 例子123# ovs-vsctl list-brsamlee_br1samlee_fake_br1 1.8 查询指定的OVS网桥是否存在,存在返回0,否则返回2(这个命令没有输出,我们通过echo来获得输出)1# ovs-vsctl br-exists BRIDGE_NAME 例子12# ovs-vsctl br-exists samlee_br1 ; echo $?0 12# ovs-vsctl br-exists samlee_br2 ; echo $?2 1.9 查看指定的VLAN在那个OVS网桥上面(这个命令输出VLAN ID)1# ovs-vsctl br-to-vlan BRIDGE_NAME 例子12# ovs-vsctl br-to-vlan samlee_fake_br1200 1.10 查看指定OVS网桥的父网桥名字(这个命令会输出父网桥的名字)1# ovs-vsctl br-to-parent BRIDGE_NAME 例子12# ovs-vsctl br-to-parent samlee_fake_br1samlee_br1 1.11 给指定的OVS网桥设置键值对; 这些键值对可以用来给指定OVS网桥作为标示(这个命令没有输出)1# ovs-vsctl BRIDGE_NAME KEY VALUE 例子1# ovs-vsctl br-set-external-id samlee_fake_br1 priority 3 1.12 清除指定OVS网桥的键值对(这个命令没有输出)1# ovs-vsctl br-set-external-id BRIDGE_NAME KEY 例子1ovs-vsctl br-set-external-id samlee_fake_br1 priority 1.13 输出指定OVS网桥的键值对的值 (这个命令输出键值)1# ovs-vsctl br-get-external-id BRIDGE_NAME KEY 例子12# ovs-vsctl br-get-external-id samlee_fake_br1 priority3 1.14 输出指定OVS网桥的键值对 (这个命令输出键值对)1# ovs-vsctl br-get-external-id BRIDGE_NAME 例子12# ovs-vsctl br-get-external-id samlee_fake_br1priority&#x3D;3 2 端口操作命令(注意:默认每一个OVS网桥都有一个与之同名的端口, 一个聚合端口(bond)被看做一个端口) 2.1 列出指定OVS网桥上面的所有的端口(这个命令将输出端口的名字)1# ovs-vsctl list-ports BRIDGE_NAME 例子12# ovs-vsctl list-ports samlee_br1ens12 2.2 给指定的OVS网桥添加一个端 (这个命令没有输出)1# ovs-vsctl add-port BRIDGE_NAME PORT 例子1# ovs-vsctl add-port samlee_br1 ens12 2.3 给指定的OVS网桥添加一个聚合端口(bond)并且将指定的接口加入聚合端口(这个命令没有输出)1# ovs-vsctl add-bond BRIDGE_NAME PORT_NAME IFACE... 例子1# ovs-vsctl add-bond samlee_br1 sam_bond0 ens11 ens12 2.4 查看指定聚合端口(bond)的参数(这个命令将输出端口的参数) 1# ovs-appctl bond&#x2F;show BOND_PORT 例子123456789101112131415# ovs-appctl bond&#x2F;show sam_bond0 ---- sam_bond0 ----bond_mode: active-backupbond may use recirculation: no, Recirc-ID : -1bond-hash-basis: 0updelay: 0 msdowndelay: 0 mslacp_status: offlacp_fallback_ab: falseactive slave mac: 52:54:00:cf:9f:59(ens12)slave ens11: enabled may_enable: trueslave ens12: enabled active slave may_enable: true 2.5 从指定的OVS网桥上删除指定的端口(这个命令没有输出)1# ovs-vsctl del-port [BRIDGE_NAME] PORT 例子1# ovs-vsctl del-port samlee_br1 ens12 2.6 通过指定端口查询它所在的OVS网桥(这个命令将输出网桥的名字)1# ovs-vsctl port-to-br PORT 例子12# ovs-vsctl port-to-br ens12samlee_br1 2.7 给端口指定一个接口类型, 类型可以是常规类型,内部类型,对接类型和隧道类型(这个命令没有输出)1# ovs-vsctl set Interface PORT_NAME type&#x3D;TYPE_NAME 例子1# ovs-vsctl set Interface samlee_br1 type&#x3D;internal TBD 2.8 给指定OVS网桥添加一个隧道. 隧道的类型可以是gre或者vxlan(比如,给网桥samlee_br1添加一个名字为samlee_tunnel的隧道.并且指定这个隧道的端口,接口名字为samlee_tunnel. 并且给接口指定IP地址. 其中vxlan的默认端口号是4789). (这个命令没有输出)1# ovs-vsctl add-port BRIDGE_NAME PORT_NAME -- set Interface INTERFACE_NAME type&#x3D;TUNNEL_TYPE options:remote_ip&#x3D;IPADDRESS 例子1# ovs-vsctl add-port samlee_br1 samlee_tunnel -- set Interface samlee_tunnel type&#x3D;gre options:remote_ip&#x3D;200.200.200.200 1# ovs-vsctl add-port samlee_br1 samlee_vxlan -- set Interface samlee_vxlan type&#x3D;vxlan options:remote_ip&#x3D;100.100.100.100 options:dst_port&#x3D;4789 3 接口操作命令(注意: 一个聚合端口(bond)包含多个接口): 3.1 列出指定OVS网桥上面的所有接口(这个命令将输出接口的名字)1# ovs-vsctl list-ifaces BRIDGE_NAME 例子12# ovs-vsctl list-ifaces samlee_br1ens12 3.2 输出指定接口所在的OVS网桥(这个将输出网桥的名字)1# ovs-vsctl iface-to-br IFACE 例子12# ovs-vsctl iface-to-br ens12samlee_br1 4 控制OVS网桥的相关命令. ovs-vswitchd这个后台程序可以实现对OVS网桥,OVS交换机的本地管理. 同时,它也可以支持符合Open-Flow规范的外部Open‐Flow控制器的远程管理. 如果这个外部的Open‐Flow控制器失效,会造成OVS网桥和OVS交换机的丢包. 但是我们可以通过相应的配置来避免此类情况. 我们可以将fail-mode模式设置为standalone或者是secure. 在standalone模式下面,如果Open‐Flow控制器失效,在一个指定的时间间隔内,重试3次都没有收到Open‐Flow控制器的数据包,ovs-vswitchd这个后台程序将会重新接管,并以本地模式运行,此时OVS网桥和OVS交换机将不受影响. 而如果设置为secure模式,在Open‐Flow控制器失效时,ovs-vswitchd这个后台程序将不会重新接管, 而此时OVS网桥和OVS交换机将受到影响 4.1 查询当前OVS网桥的Open‐Flow控制器(这个命令将输出Open‐Flow控制器的名字)1# ovs-vsctl get-controller BRIDGE_NAME 例子12# ovs-vsctl get-controller samlee_br1tcp:127.0.0.1:6633 4.2 删除当前OVS网桥的Open‐Flow控制器(这个命令没有输出)1# ovs-vsctl del-controller BRIDGE_NAME 例子1# ovs-vsctl del-controller samlee_br1 4.3 指定当前OVS网桥的Open‐Flow控制器 (这个命令没有输出)1# ovs-vsctl set-controller BRIDGE_NAME TARGET... 例子1# ovs-vsctl set-controller samlee_br1 tcp:127.0.0.1:6633 4.4 查询当前OVS网桥的Open‐Flow控制器的失效模式(这个命令将输出Open‐Flow控制器失效模式的名字)1# ovs-vsctl get-fail-mode BRIDGE_NAME 例子12# ovs-vsctl get-fail-mode samlee_br1standalone 4.5 删除当前OVS网桥的Open‐Flow控制器的失效模式 (这个命令没有输出)1# ovs-vsctl del-fail-mode BRIDGE_NAME 例子1# ovs-vsctl del-fail-mode samlee_br1 4.6 设置当前OVS网桥的Open‐Flow控制器的失效模式 (这个命令没有输出)1# ovs-vsctl set-fail-mode BRIDGE_NAME FAIL_MODE_NAME 例子1# ovs-vsctl set-fail-mode samlee_br1 standalone 5 OVS交换机的命令: 5.1 重新启动ovs交换机 (这个命令没有输出)1# ovs-vsctl emer-reset 例子1# ovs-vsctl emer-reset 好, ovs-vsctl简明用户手册(基于版本openvswitch-2.11.0-4.el7.x86_64)就介绍完毕了. 想要了解更多?也欢迎关注 addos 微信公众号获取更多 :-)","categories":[{"name":"网络 OVS(原创)","slug":"网络-OVS-原创","permalink":"http://www.oostech.com/categories/%E7%BD%91%E7%BB%9C-OVS-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"openvswitch 系列第一篇 简介及基本数据结构","slug":"ovs_oostech_section1_brief_and_struct","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/ovs_oostech_section1_brief_and_struct/","link":"","permalink":"http://www.oostech.com/2021/02/16/ovs_oostech_section1_brief_and_struct/","excerpt":"","text":"openvswitch 系列第一篇 简介及基本数据结构 1. openvswitch1.1 基本描述datapath为ovs内核模块，负责执行数据交换，也就是把从接收端口收到的数据包在流表中进行匹配，并执行匹配到的动作。内核中可以实现多个datapath(可以理解为桥,就是我们用ovs-vsctl看到的br0/br1之类), 一个datapath类似一个物理交换机,它可以对应多个vport(vport类似物理交换机的端口概念)。一个datapth关联一个flow table，一个flow table包含多个条目，每个条目包括两个内容：一个是flow的 match/key; 另一个是对应的action. 最常见的action是在不同vport中进行转发。 当一个数据报到达vport, 内核首先将它的flow key解析出来,之后在内核模块datapath的flow cache (大小为(sizeof(struct sw_flow)+ (nr_cpu_ids * sizeof(struct flow_stats ) = ( 1248 + 68 )=1296, 根据系统实际的CUP的数量多少会稍有不同)中的flow table中查找. 如果找到匹配的flow 规则,则去执行对应的action. 如果没有找到匹配的flow规则,则将数据报通过netlink的方式发送到用户空间的ovs-vswitchd处理,而用户空间的流表空间(65536)大的多,所以匹配到的几率也更高,通过在用户空间查找,并执行对应的action;如果找到,会通过netlink把用户空间的流表推送到datapath的flow cache中,后续的报文就可以直接在内核态处理.如果最后还是没有找到,那就使用默认的流表规则(丢掉这个包,或者其他). 用户空间有两个进程组成：ovs-vswitchd和ovsdb-server。ovsdb-server保存了ovs-vswitchd的配置信息，ovsdb通常是一个文件, 并且保存在文件系统中，通常来说是/etc/openvswitch/conf.dbovs-vswitchd是一个daemon，北向与Controller通过OpenFlow协议通信.南向与openvswitch内核模块通过netlink通信.东西向过OVSDB协议与ovsdb-server通信. 1.2 openvswitch 内核模块示例12345678# lsmod |grep openvswitchopenvswitch 114793 3nf_nat_ipv6 14131 1 openvswitchnf_defrag_ipv6 35104 2 openvswitch,nf_conntrack_ipv6nf_nat_ipv4 14115 2 openvswitch,iptable_natnf_nat 26787 4 openvswitch,nf_nat_ipv4,nf_nat_ipv6,nf_nat_masquerade_ipv4nf_conntrack 133095 8 openvswitch,nf_nat,nf_nat_ipv4,nf_nat_ipv6,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4,nf_conntrack_ipv6libcrc32c 12644 4 xfs,openvswitch,nf_nat,nf_conntrack 1.3 通过openvswitch实现的bridge示例12# ovs-vsctl list-brbr0 1.4 通过openvswitch实现的bridge里面的voprt示例123# ovs-vsctl list-ports br0vport1vport2 1.5 通过openvswitch实现的bridge和vport的整体概览.1234567891011121314# ovs-vsctl show173a48d6-dbd3-420d-9433-384c437451a8 Bridge &quot;br0&quot; fail_mode: secure Port &quot;br0&quot; Interface &quot;br0&quot; type: internal Port &quot;vport1&quot; Interface &quot;vport1&quot; type: internal Port &quot;vport2&quot; Interface &quot;vport2&quot; type: internal ovs_version: &quot;2.0.0&quot; 1.6 流表示例123# ovs-ofctl dump-flows br0NXST_FLOW reply (xid&#x3D;0x4): cookie&#x3D;0x0, duration&#x3D;24.784s, table&#x3D;0, n_packets&#x3D;0, n_bytes&#x3D;0, idle_age&#x3D;24, ip,nw_src&#x3D;200.200.200.0 actions&#x3D;drop 2. 相对应的结构体示例2.1 datapath的代码描述 (datapath 类似数据通路,其实是bridge的抽象)1234567891011struct datapath &#123; struct rcu_head rcu; &#x2F;&#x2F; RCU回调, 用来负责推迟延迟销毁datapath struct list_head list_node; &#x2F;&#x2F; datapath链表,主要用来把datapath连接起来. struct flow_table table; &#x2F;&#x2F; datapath里面的流表 struct hlist_head *ports; &#x2F;&#x2F; datapath里面的Switch ports. 是以哈希表的形式表示. %OVSP_LOCAL 这个端口一直在datapath建立的时候就存在. 用 ovs_mutex 和 RCU 来进行锁保护. struct dp_stats_percpu __percpu *stats_percpu; &#x2F;&#x2F; Pre-CPU的datapath状态信息 possible_net_t net; &#x2F;&#x2F; datapat的网络命名空间的引用. u32 user_features; &#x2F;&#x2F; datapath用户所具有的能力. u32 max_headroom; &#x2F;&#x2F;留给datapath里面的所有vports使用的最大headroom. struct hlist_head *meters; &#x2F;&#x2F; datapath的meters, 参数之类.&#125;; 2.2 vport的代码描述1234567891011struct vport &#123; struct net_device *dev; &#x2F;&#x2F; 指向net_device的指针 struct datapath *dp; &#x2F;&#x2F; 指向这个port所在datapath的指针,表示该端口是属于哪个datapath的 struct vport_portids __rcu *upcall_portids; &#x2F;&#x2F;通过RCU机制保护的结构 &#39;struct vport_portids&#39; u16 port_no; &#x2F;&#x2F;在datapath里面所有端口数组的索引,唯一标识该端口.因为一个datapath上有多个端口，而这些端口都是用哈希链表来存储的，所以这是链表元素（里面没有数据，只有next和prev前驱后继指针，数据部分就是vport结构体中的其他成员） struct hlist_node hash_node; &#x2F;&#x2F;在设备hash表里面的元素 struct hlist_node dp_hash_node; &#x2F;&#x2F;在datapath的hash表里面的元素 const struct vport_ops *ops; &#x2F;&#x2F; 指向操作函数的指针,结构体里面存放了很多操作函数的函数指针 struct list_head detach_list; &#x2F;&#x2F;用来在net-exit调用时撤销vport的链表 struct rcu_head rcu; &#x2F;&#x2F;撤销datapath的RCU 回调函数头&#125;; 2.3 流表flow_table (有五部分组成,一个是流表,另外是流表的实例,流表的内容,流表的key值,流表操作集和)2.3.1 流表12345678struct flow_table &#123; &#x2F;&#x2F; 流表 struct table_instance __rcu *ti; &#x2F;&#x2F; 具体流表实例 struct table_instance __rcu *ufid_ti; &#x2F;&#x2F;包含unique flow identifier的流实例, struct list_head mask_list; &#x2F;&#x2F; 链表用来串联整个流表 (一般配合container_of使用来获取结构体的头指针) unsigned long last_rehash; &#x2F;&#x2F; 会初始化为当前的jiffies. 用来计间用 unsigned int count; &#x2F;&#x2F; 具体流表的个数, ovs_flow_tbl_init流表初始化时,会置为0 unsigned int ufid_count; &#x2F;&#x2F; 具体unique flow identifier流表的个数,ovs_flow_tbl_init流表初始化时,会置为0&#125;; 2.3.2 流表的具体实例12345678struct table_instance &#123; &#x2F;&#x2F;流表的具体实例 struct flex_array *buckets; &#x2F;&#x2F;哈希桶地址指针. 具体的流表项, 主要是方便处理.(真实的流表应该在这里面) unsigned int n_buckets; &#x2F;&#x2F; 哈希桶个数 struct rcu_head rcu;&#x2F;&#x2F; 操作(撤销?)流表的RCU 回调函数头 int node_ver; &#x2F;&#x2F;node_ver的存在使得我们可以控制sw_flow的哪个hlist_node链入到bucket中 u32 hash_seed; &#x2F;&#x2F;哈希算法需要的种子 bool keep_flows;&#x2F;&#x2F;是否保留流表项&#125;; 2.3.3 流表里面所具体保存的内容1234567891011121314struct sw_flow &#123; &#x2F;&#x2F; 流表里面所具体保存的内容. struct rcu_head rcu; &#x2F;&#x2F; rcu保护机制 (撤销流表项的RCU 回调函数头) struct &#123; struct hlist_node node[2]; &#x2F;&#x2F; 两个节点指针，用来链接作用，前驱后继指针 u32 hash; &#x2F;&#x2F; hash值 &#125; flow_table, ufid_table; &#x2F;&#x2F; 为两种流表各定义对应的结构. int stats_last_writer; &#x2F;&#x2F; 最近一个CPU写操作的ID struct sw_flow_key key; &#x2F;&#x2F; 流表中的key值, 这个是个关键东东了,关系到报文要匹配那些流表key struct sw_flow_id id; &#x2F;&#x2F; 流表自身的ID struct cpumask cpu_used_mask; &#x2F;&#x2F; 也是流表中的key struct sw_flow_mask *mask; &#x2F;&#x2F; 要匹配的mask结构体 struct sw_flow_actions __rcu *sf_acts; &#x2F;&#x2F; 相应的action动作. 使用了rcu机制保护的. struct flow_stats __rcu *stats[]; &#x2F;* 数据流的状态,每一个CPU上都有,第一个是流建立的时候, 其余的是在获取stats[0].lock锁之后,根据需求分配. 使用了rcu机制保护的.&#125;; 2.3.4 流表中的key值，主要是保存数据包中协议相关信息，这是报文要进行流表匹配的关键结构123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687struct sw_flow_key &#123; u8 tun_opts[IP_TUNNEL_OPTS_MAX]; u8 tun_opts_len; struct ip_tunnel_key tun_key; &#x2F;&#x2F; 隧道的封装key. struct &#123; u32 priority; &#x2F;&#x2F; 包的Qos优先级 u32 skb_mark; &#x2F;&#x2F; skb包的标记 u16 in_port; &#x2F;&#x2F; 包进入的端口号或者DP_MAX_PORTS &#125; __packed phy; &#x2F;&#x2F; Safe when right after &#39;tun_key&#39;. u8 mac_proto; &#x2F;&#x2F; 链路层协议, 比如 Ethernet, ATM 等等 u8 tun_proto; &#x2F;&#x2F; 封装协议, 比如GRE, VXLAN 等等 u32 ovs_flow_hash; &#x2F;&#x2F; Datapath 所计算出的 hash 值 u32 recirc_id; &#x2F;&#x2F; 转发的ID Recirculation ID. struct &#123; u8 src[ETH_ALEN]; &#x2F;&#x2F; Ethernet源mac地址 u8 dst[ETH_ALEN]; &#x2F;&#x2F; Ethernet目的mac地址 struct vlan_head vlan; &#x2F;&#x2F; vlan 的信息, 802.1q or 802.1ad 类型 以及vlan id struct vlan_head cvlan; &#x2F;&#x2F; vlan 的信息给Conntrack用的, 802.1q or 802.1ad 类型 以及vlan id __be16 type; &#x2F;&#x2F; 以太网帧类型 &#125; eth; &#x2F;&#x2F; 2 层的. 数据链路层的匹配信息. u8 ct_state; &#x2F;&#x2F; Conntrack的状态,有或者没有 u8 ct_orig_proto; &#x2F;&#x2F;Conntrack 的原始路径的ip协议. 其实用来表示有没有包含original direction key 内容. union &#123; struct &#123; __be32 top_lse; &#x2F;* top label stack entry *&#x2F; &#125; mpls; struct &#123; u8 proto; &#x2F;&#x2F; IP包协议类型 TCP：6；UDP：17；ARP操作码类型用低8位表示 u8 tos; &#x2F;&#x2F; IP包服务类型 u8 ttl; &#x2F;&#x2F; IP包生存时间，经过多少跳路由 u8 frag; &#x2F;&#x2F; 网桥中的OVS_FRAG_TYPE_*标记 &#125; ip; &#x2F;&#x2F; 3 层的. ip 层的匹配信息. &#125;; u16 ct_zone; &#x2F;&#x2F; 追踪连接状态区 struct &#123; __be16 src; &#x2F;&#x2F; TCP&#x2F;UDP&#x2F;SCTP的源端口，应用层发送数据的端口 __be16 dst; &#x2F;&#x2F; TCP&#x2F;UDP&#x2F;SCTP的目的端口，也是指应用层传输数据端口 __be16 flags; &#x2F;&#x2F; TCP 的标记 &#125; tp; &#x2F;&#x2F; 4 层的. 传输层的匹配信息 union &#123; struct &#123; struct &#123; __be32 src; &#x2F;&#x2F; IP源地址 __be32 dst; &#x2F;&#x2F; IP目的地址 &#125; addr; &#x2F;&#x2F; IP 的信息 union &#123; struct &#123; __be32 src; &#x2F;&#x2F; Conntrack IP源地址 __be32 dst; &#x2F;&#x2F; Conntrack IP目的地址 &#125; ct_orig; &#x2F;&#x2F; 追踪连接的原始目的区域 struct &#123; u8 sha[ETH_ALEN]; &#x2F;&#x2F; ARP的源Mac地址 u8 tha[ETH_ALEN]; &#x2F;&#x2F; ARP的目的Mac地址 &#125; arp; &#x2F;&#x2F; arp 的信息 &#125;; &#125; ipv4; &#x2F;&#x2F; IPv4 的信息 struct &#123; struct &#123; struct in6_addr src; &#x2F;&#x2F; IPv6 源地址 struct in6_addr dst; &#x2F;&#x2F; IPv6 目的地址 &#125; addr; &#x2F;&#x2F; IPv6 的IP层信息 __be32 label; &#x2F;&#x2F; IPv6 流的标示 union &#123; struct &#123; struct in6_addr src; &#x2F;&#x2F; Conntrack IP源地址 struct in6_addr dst; &#x2F;&#x2F; Conntrack IP目的地址 &#125; ct_orig; &#x2F;&#x2F; 追踪连接的原始目的区域 struct &#123; struct in6_addr target; &#x2F;&#x2F; Neighbor Discovery 目标地址 u8 sll[ETH_ALEN]; &#x2F;&#x2F; Neighbor Discovery 源链接层地址 u8 tll[ETH_ALEN]; &#x2F;&#x2F; Neighbor Discovery 目标接层地址 &#125; nd; &#x2F;&#x2F;Neighbor Discovery (ND) protocol 是一个IPV6 的协议. 主机或者路由使用ND协议去侦测邻居的链路层地址,在必要的时候,可以及时清除无效的cache &#125;; &#125; ipv6; &#x2F;&#x2F; IPV6 信息. struct ovs_key_nsh nsh; &#x2F;&#x2F; 网络服务头 &#125;; struct &#123; &#x2F;&#x2F; Connection tracking fields 连接监测的信息, CT主要用来做网络连接状态的识别. OVS2.5版本开始支持. 涉及到有状态的防火墙和无状态的防火墙.Openstack则从M版开始，使用OVS的新特性，来实现“有状态防火墙”中的“Security Group”功能 struct &#123; __be16 src; &#x2F;* CT orig tuple tp src port. 连接监测源端口.用于“有状态防火墙”的流识别 __be16 dst; &#x2F;* CT orig tuple tp dst port. 连接监测目的端口.用于“有状态防火墙”的流识别 &#125; orig_tp; u32 mark; struct ovs_key_ct_labels labels; &#x2F;&#x2F; 这个是个32bit联合体,作为一个labels &#125; ct; &#x2F;&#x2F; Connection tracking, 报文进来可能会先进入这里,如果有的话, 然后匹配自身的流表之后再去匹配datapath的流表,再之后执行action.&#125; __aligned(BITS_PER_LONG&#x2F;8); &#x2F;&#x2F; 主要是用来做数据对齐用的. 考虑到存取的效率, 在64bit机器上,就是8字节对齐 2.3.5 流表项操作, 也就是能对流表做些什么操作.123456struct sw_flow_actions &#123; struct rcu_head rcu; &#x2F;&#x2F; 要操作流表,肯定要个rcu来加锁同步了. size_t orig_len; &#x2F;&#x2F; 来自 flow_cmd_new netlink actions 操作的长度 u32 actions_len; &#x2F;&#x2F; 操作的长度. struct nlattr actions[]; &#x2F;&#x2F;流表项的操作集合,这个是一个netlink的结构,一个就是数据包的长度,一个就是类型.&#125;; 到此,第一部分就介绍完毕了. 后续会有网桥的操作,vport的操作,数据报的处理等等的介绍…","categories":[{"name":"网络 OVS(原创)","slug":"网络-OVS-原创","permalink":"http://www.oostech.com/categories/%E7%BD%91%E7%BB%9C-OVS-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"openvswitch 系列第二篇 API接口","slug":"ovs_oostech_sesstion2_API_interface","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/ovs_oostech_sesstion2_API_interface/","link":"","permalink":"http://www.oostech.com/2021/02/16/ovs_oostech_sesstion2_API_interface/","excerpt":"","text":"openvswitch 系列第二篇 API接口 1. openvswitch1.1 基本描述datapath为ovs内核模块，负责执行数据交换，也就是把从接收端口收到的数据包在流表中进行匹配，并执行匹配到的动作。内核中可以实现多个datapath(可以理解为桥,就是我们用ovs-vsctl看到的br0/br1之类), 一个datapath类似一个物理交换机,它可以对应多个vport(vport类似物理交换机的端口概念)。一个datapth关联一个flow table，一个flow table包含多个条目，每个条目包括两个内容：一个是flow的 match/key; 另一个是对应的action. 最常见的action是在不同vport中进行转发。 当一个数据报到达vport, 内核首先将它的flow key解析出来,之后在内核模块datapath的flow cache (大小为(sizeof(struct sw_flow)+ (nr_cpu_ids * sizeof(struct flow_stats ) = ( 1248 + 68 )=1296, 根据系统实际的CUP的数量多少会稍有不同)中的flow table中查找. 如果找到匹配的flow 规则,则去执行对应的action. 如果没有找到匹配的flow规则,则将数据报通过netlink的方式发送到用户空间的ovs-vswitchd处理,而用户空间的流表空间(65536)大的多,所以匹配到的几率也更高,通过在用户空间查找,并执行对应的action;如果找到,会通过netlink把用户空间的流表推送到datapath的flow cache中,后续的报文就可以直接在内核态处理.如果最后还是没有找到,那就使用默认的流表规则(丢掉这个包,或者其他). 用户空间有两个进程组成：ovs-vswitchd和ovsdb-server。ovsdb-server保存了ovs-vswitchd的配置信息,ovsdb通常是一个文件,并且保存在文件系统中,通常来说是/etc/openvswitch/conf.dbovs-vswitchd是一个daemon,北向与Controller通过OpenFlow协议通信.南向与openvswitch内核模块通过netlink通信.东西向过OVSDB协议与ovsdb-server通信. 2 openvswitch API的分类在Linux中,可以使用Netlink来实现用户空间与内核的通信.而openvswitch也正是使用了netlink机制,使用其中的generic netlink来用来实现通信. openvswitch一共有4大类API: datapath, virtual port, flow, 和packet. 通常在使用这些时,我们需要CAP_NET_ADMIN的权限. 2.1 datapath API有5种对应的操作NEW ,DEL,GET,SET和UNSPEC(预留的,现在不用).通过这些命令,用户可以建立,删除,查询和修改datapath.定义为枚举类型,其实对应过来也就是操作码与数字的键值对.enum ovs_datapath_cmd { OVS_DP_CMD_UNSPEC, OVS_DP_CMD_NEW, OVS_DP_CMD_DEL, OVS_DP_CMD_GET, OVS_DP_CMD_SET}; 2.1.1 OVS_DP_CMD_NEWOVS_DP_CMD_NEW通过static int ovs_dp_cmd_new(struct sk_buff *skb, struct genl_info *info)实现.当执行NEW操作的时候,ovs_dp_cmd_new 函数会被调用,此函数用于建立一个datapath. 2.1.2 OVS_DP_CMD_DELOVS_DP_CMD_DEL通过static int ovs_dp_cmd_del(struct sk_buff *skb, struct genl_info info)实现.当执行DEL操作的时候,ovs_dp_cmd_del函数会被调用,此函数用于删除一个datapath. 至于删除哪一个datapath的信息则是由info获取的. 2.1.3 OVS_DP_CMD_GETOVS_DP_CMD_GET通过static int ovs_dp_cmd_get(struct sk_buff *skb, struct genl_info info)实现.当执行GET操作的时候,ovs_dp_cmd_get函数会被调用.通过从info获取到的信息,最终通过调用ovs_dp_cmd_fill_info实现并通过genlmsg_reply返回. 2.1.4 OVS_DP_CMD_SETOVS_DP_CMD_SET通过static int ovs_dp_cmd_set(struct sk_buff *skb, struct genl_info *info)实现.当执行SET操作的时候,ovs_dp_cmd_set函数会被调用.然后通过调用ovs_dp_change来进行属性的修改. 2.2 virtual port API有5种对应的操作NEW,DEL,GET,SET和UNSPEC(预留的,现在不用).通过这些命令,用户可以建立,删除,查询和修改vport.定义为枚举类型,其实对应过来也就是操作码与数字的键值对.enum ovs_vport_cmd { OVS_VPORT_CMD_UNSPEC, OVS_VPORT_CMD_NEW, OVS_VPORT_CMD_DEL, OVS_VPORT_CMD_GET, OVS_VPORT_CMD_SET}; 2.2.1 OVS_VPORT_CMD_NEWOVS_VPORT_CMD_NEW通过static int ovs_vport_cmd_new(struct sk_buff *skb, struct genl_info info)实现.当执行NEW操作的时候,ovs_vport_cmd_new函数会被调用,然后给从info获取到的datapath信息,给指定的datapath新建指定的端口. 2.2.2 OVS_VPORT_CMD_DELOVS_VPORT_CMD_DEL通过static int ovs_vport_cmd_del(struct sk_buff *skb, struct genl_info info)实现.当执行DEL操作的时候,ovs_vport_cmd_del函数会被调用,然后从info中获取到指定的ports进行删除操作. 2.2.3 OVS_VPORT_CMD_GETOVS_VPORT_CMD_GET通过static int ovs_vport_cmd_get(struct sk_buff *skb, struct genl_info info)实现.当执行GET操作的时候,ovs_vport_cmd_get函数会被调用,然后从info获取到指定端口的信息后,最后通过genlmsg_reply返回. 2.2.4 OVS_VPORT_CMD_SETOVS_VPORT_CMD_SET通过static int ovs_vport_cmd_set(struct sk_buff *skb, struct genl_info info)实现.当执行SET操作的时候,ovs_vport_cmd_set函数会被调用,然后从info获取到指定的端口,然后调用ovs_vport_set_options来更新对应的vport属性. 2.3 flow API有5种对应的操作NEW,DEL,GET,SET和UNSPEC(预留的,现在不用).通过这些命令,用户可以建立,删除,查询和修改flow.定义为枚举类型,其实对应过来也就是操作码与数字的键值对.enum ovs_flow_cmd { OVS_FLOW_CMD_UNSPEC, OVS_FLOW_CMD_NEW, OVS_FLOW_CMD_DEL, OVS_FLOW_CMD_GET, OVS_FLOW_CMD_SET}; 2.3.1 OVS_FLOW_CMD_NEWOVS_FLOW_CMD_NEW通过static int ovs_flow_cmd_new(struct sk_buff *skb, struct genl_info *info)实现.当执行NEW操作的时候,ovs_flow_cmd_new会被调用然后一系列函数会被调用,比如ovs_flow_alloc,ovs_flow_tbl_insert,等等. 因为建立流表需要判断action是否有效,流表是否重复,而且还需要涉及同步加锁解锁等等. 2.3.2 OVS_FLOW_CMD_DELOVS_FLOW_CMD_DEL通过static int ovs_flow_cmd_del(struct sk_buff *skb, struct genl_info info)实现.当执行DEL操作的时候,ovs_flow_cmd_del会被调用,然后通过info获取对应属性,找到对应datapath,对应的流表uuid,然后通过ovs_flow_tbl_remove,ovs_flow_free等等将对应流表删除.当然了,这个过程也得加锁解锁. 2.3.3 OVS_FLOW_CMD_GETOVS_FLOW_CMD_GET通过static int ovs_flow_cmd_get(struct sk_buff *skb, struct genl_info info)实现.当执行GET操作的时候,ovs_flow_cmd_get会被调用,然后通过info获取对应属性,找到对应datapath,对应的流表uuid最后通过ovs_flow_cmd_build_info获取到需要的信息,并返回. 2.3.4 OVS_FLOW_CMD_SETOVS_FLOW_CMD_SET通过static int ovs_flow_cmd_set(struct sk_buff *skb, struct genl_info info)实现.当执行SET操作的时候,ovs_flow_cmd_set会被调用,然后通过info获取对应属性,找到对应datapath,对应的流表uuid,最后调用一系列函数,如ovsl_dereference更新action,用ovs_flow_stats_clear清除对应状态等等.当然,这个过程也得加锁解锁. 2.4 packet API有4种对应的操作MISS,ACTION,EXECUTE和和UNSPEC(预留的,现在不用),用于与用户空间应用进行数据包交互(发送,接收).定义为枚举类型,其实对应过来也就是操作码与数字的键值对.enum ovs_packet_cmd { OVS_PACKET_CMD_UNSPEC, OVS_PACKET_CMD_MISS, /* 内核发向用户空间, 流表没有命中 / OVS_PACKET_CMD_ACTION, / 内核发向用户空间, OVS_ACTION_ATTR_USERSPACE的操作. / OVS_PACKET_CMD_EXECUTE / 用户空间命令,给对应的packet执行指定的动作 */}; 2.4.1 OVS_PACKET_CMD_MISS内核函数ovs_dp_process_packet在处理datapath的packet的时候,如果出现流表没有匹配的话,ovs_flow_stats_update, u64_stats_update_begin等函数就会被调用,然后对应的datapath计数器会被更新. 2.4.2 OVS_PACKET_CMD_ACTION内核函数output_userspace通过初始化结构dp_upcall_indo将OVS_PACKET_CMD_ACTION传进去,然后调用ovs_dp_updacall实现对用户空间OVS_ACTION_ATTR_USERSPACE的操作. 2.4.3 OVS_PACKET_CMD_EXECUTEOVS_PACKET_CMD_EXECUTE通过static int ovs_packet_cmd_execute(struct sk_buff *skb, struct genl_info *info)实现. 当执行EXECUTE操作的时候,其实就是packet的发送(转发)过程. 一系列内核函数会被使用, __dev_alloc_skb建立一个skb, 通过ovs_flow_alloc建立一个sw_flow, 以及使用ovs_execute_actions来执行这个发送操作. 3 OVS在Openshift和OpenStack的使用.3.1 Openshift在使用OVS时,并不是直接调用上面介绍到的API接口,而是使用OVS封装好的二进制工具比如ovs-appctl”,”ovs-dpctl”,”ovs-ofctl”,”ovs-vsctl”之类,通过”golang”调用的. 例子如下:1234567func (ovsif *ovsExec) AddPort(port string, ofportRequest int, properties ...string) (int, error) &#123; args :&#x3D; []string&#123;&quot;--may-exist&quot;, &quot;add-port&quot;, ovsif.bridge, port&#125; if ofportRequest &gt; 0 || len(properties) &gt; 0 &#123; args &#x3D; append(args, &quot;--&quot;, &quot;set&quot;, &quot;Interface&quot;, port) &lt;truncated&gt; _, err :&#x3D; ovsif.exec(OVS_VSCTL, args...) &lt;truncated&gt; 3.2 OpenStack在使用OVS时,同样也不是直接调用上面介绍到的API接口,而是使用OVS封装好的二进制工具比如ovs-appctl”,”ovs-dpctl”,”ovs-ofctl”,”ovs-vsctl”之类,通过”python”调用的.例子如下:1234567891011121314class LinuxOVSInterfaceDriver(LinuxNetInterfaceDriver):&lt;truncated&gt; _ovs_vsctl([&#39;--&#39;, &#39;--may-exist&#39;, &#39;add-port&#39;, bridge, dev, &#39;--&#39;, &#39;set&#39;, &#39;Interface&#39;, dev, &#39;type&#x3D;internal&#39;, &#39;--&#39;, &#39;set&#39;, &#39;Interface&#39;, dev, &#39;external-ids:iface-id&#x3D;%s&#39; % dev, &#39;--&#39;, &#39;set&#39;, &#39;Interface&#39;, dev, &#39;external-ids:iface-status&#x3D;active&#39;, &#39;--&#39;, &#39;set&#39;, &#39;Interface&#39;, dev, &#39;external-ids:attached-mac&#x3D;%s&#39; % mac_address])&lt;truncated&gt; _execute(&#39;ovs-ofctl&#39;, &#39;add-flow&#39;, bridge, &#39;priority&#x3D;1,actions&#x3D;drop&#39;, run_as_root&#x3D;True) 4 到此,openvswitch的API就是简要地介绍完毕了.","categories":[{"name":"网络 OVS(原创)","slug":"网络-OVS-原创","permalink":"http://www.oostech.com/categories/%E7%BD%91%E7%BB%9C-OVS-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Red Hat Enterprise Linux 8 的新玩意 第4篇 通过`grub`配置Kernel启动参数","slug":"linux_oostech_RHEL8_Kernel_cmdline","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_RHEL8_Kernel_cmdline/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_RHEL8_Kernel_cmdline/","excerpt":"","text":"Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第4篇 通过grub配置Kernel启动参数内核启动参数, 简单的说就是可以给内核传递参数，并且用于控制内核行为方式. 1 通常来说我们有3种方式可以给内核传递参数1.1 在编译内核时侯,添加我们要的参数1.2 内核启动时通过boootloader添加,比如通过gurb或者uboot (arm或者ppc平台)1.3 在系统运行的时候,通过修改/proc和/sys里面对应的文件.2 这里, 我们讲第二项(内核启动时通过boootloader添加,比如通过gurb或者uboot); 通常来说我们可以通过直接修改/boot/grub2/grub.cfg文件来现实.但是我们看到,在RHEL8上面,/boot/grub2/grub.cfg居然没有我们熟悉linux /boot/vmlinuz-xxx.x86_64 root=UUID=xxx的条目. 这是什么回事,比如我们要重定向串口输出,添加console=ttyS0,115200n8这个参数要加到什么地方?不要紧,让我们先来看看\\boot下面都有些什么文件.3 查看启动目录/boot/的内容, 我们知道系统是启动这个内核vmlinuz-4.18.0-80.el8.x86_64123456[root@vm3_rhel8 ~]# cd &#x2F;boot&#x2F; &amp;&amp; lsconfig-4.18.0-80.el8.x86_64 initramfs-4.18.0-80.el8.x86_64kdump.imgefi loadergrub2 System.map-4.18.0-80.el8.x86_64initramfs-0-rescue-54d1217dfdda4592a9e30059e470cf24.img vmlinuz-0-rescue-54d1217dfdda4592a9e30059e470cf24initramfs-4.18.0-80.el8.x86_64.img vmlinuz-4.18.0-80.el8.x86_64 4 知道了系统内核vmlinuz-4.18.0-80.el8.x86_64的名字,我们来找找有配置它的地方,来grub一下123[root@vm3_rhel8 boot]# grep -n &quot;vmlinuz-4.18.0-80.el8.x86_64&quot; -r .&#x2F;.&#x2F;loader&#x2F;entries&#x2F;54d1217dfdda4592a9e30059e470cf24-4.18.0-80.el8.x86_64.conf:3:linux &#x2F;boot&#x2F;vmlinuz-4.18.0-80.el8.x86_64.&#x2F;.vmlinuz-4.18.0-80.el8.x86_64.hmac:1:54d1217dfdda4592a9e30059e470cf24 &#x2F;boot&#x2F;vmlinuz-4.18.0-80.el8.x86_64 5 好了, 我们找到了相关的文件./loader/entries/54d1217dfdda4592a9e30059e470cf24-4.18.0-80.el8.x86_64.conf, 那就来看看里面都有些什么cat一下.123456789title Red Hat Enterprise Linux (4.18.0-80.el8.x86_64) 8.0 (Ootpa)version 4.18.0-80.el8.x86_64linux &#x2F;boot&#x2F;vmlinuz-4.18.0-80.el8.x86_64initrd &#x2F;boot&#x2F;initramfs-4.18.0-80.el8.x86_64.img $tuned_initrdoptions $kernelopts $tuned_paramsid rhel-20190313123447-4.18.0-80.el8.x86_64grub_users $grub_usersgrub_arg --unrestrictedgrub_class kernel.&#x2F;loader&#x2F;entries&#x2F;54d1217dfdda4592a9e30059e470cf24-4.18.0-80.el8.x86_64.conf 6 有熟悉的面孔吧,看起来我们可以在这配置内核的参数,而且变量kernelopts似乎是对应的启动参数.123[root@vm3_rhel8 boot]# grep -n &quot;kernelopts&quot; -r .&#x2F;.&#x2F;grub2&#x2F;grubenv:3:kernelopts&#x3D;root&#x3D;UUID&#x3D;06246343-6949-4824-a96f-6ce27ff92cd5 ro crashkernel&#x3D;auto.&#x2F;loader&#x2F;entries&#x2F;54d1217dfdda4592a9e30059e470cf24-0-rescue.conf:5:options $kernelopts 7 它在这里定义,那我们就直接编辑添加我们需要的内核参数就好了.改一下,变成这样.1.&#x2F;grub2&#x2F;grubenv:3:kernelopts&#x3D;root&#x3D;UUID&#x3D;06246343-6949-4824-a96f-6ce27ff92cd5 ro crashkernel&#x3D;auto console&#x3D;ttyS0,115200n8 console&#x3D;tty0 8 深入一些,那这个options $kernelopts 又是怎么就能传递到内核去的呢?8.1 小Tips,先来打开个debug开关. 我们可以添加set debug=blscfg(grub会通过函数grub_dprintf输出对应的debug消息)到文件/boot/grub2/grub.cfg; 然后注意把启动设置到一个不存在menu(比如set pager=1). 这样的话,gurb就会因为找不到启动项而停住,那我们就可以看到输出呢. 另外多说一句,还有这些模块可以用来调试(有兴趣可以试试看).12&quot;acpi&quot;,&quot;ahci&quot;,&quot;arcdisk&quot;,&quot;archelp&quot;,&quot;ata&quot;,&quot;atkeyb&quot;,&quot;badram&quot;,&quot;blscfg&quot;,&quot;bootp&quot;,&quot;bsd&quot;,&quot;btrfs&quot;,&quot;chain&quot;,&quot;cros&quot;,&quot;crypt&quot;,&quot;cryptodisk&quot;,&quot;devalias&quot;,&quot;disk&quot;,&quot;diskfilter&quot;,&quot;dl&quot;,&quot;dns&quot;,&quot;drivemap&quot;,&quot;efi&quot;,&quot;efidisk&quot;,&quot;efiemu&quot;,&quot;efiemu&quot;,&quot;system_table,&quot;efinet&quot;,&quot;efinetfs&quot;,&quot;ehci&quot;,&quot;elf&quot;,&quot;exfat&quot;,&quot;expand&quot;,&quot;fb&quot;,&quot;fdtbus&quot;,&quot;fixvideo&quot;,&quot;font&quot;,&quot;fs&quot;,&quot;fw_path&quot;,&quot;geli&quot;,&quot;gpt&quot;,&quot;hostdisk&quot;,&quot;init&quot;,&quot;keystatus&quot;,&quot;linux&quot;,&quot;loader&quot;,&quot;luks&quot;,&quot;memdisk&quot;,&quot;menu&quot;,&quot;mmap&quot;,&quot;modules&quot;,&quot;multiboot_loader&quot;,&quot;nativedisk&quot;,&quot;net&quot;,&quot;ohci&quot;,&quot;partition&quot;,&quot;pata&quot;,&quot;play&quot;,&quot;tempo&quot;pmtimer&quot;,&quot;reiserfs&quot;,&quot;reiserfs_blocktype&quot;,&quot;reiserfs_tree&quot;,&quot;relocator&quot;,&quot;scripting&quot;,&quot;scsi&quot;,&quot;secureboot&quot;,&quot;serial&quot;,&quot;syslinux&quot;,&quot;tftp&quot;,&quot;ubootdisk&quot;,&quot;uhci&quot;,&quot;usb&quot;,&quot;usb_keyboard&quot;,&quot;usbms&quot;,&quot;video&quot;,&quot;xen&quot;,&quot;xen_loader&quot;,&quot;xnu&quot;,&quot;zfs&quot;, 8.2 通过查看grub的debug输出. 看到了options $kernelopts在grub启动时被调用了,所以对应的内核参数也被导入了.1commands&#x2F;blscfg.c:135: new keyval at 0xbfe42aa0:options:$kernelopts $tuned_params 8.3 再深入一些,那options $kernelopts具体又是怎么调进去的呢?好办,快速瞄个代码(呵呵,这就是开源的优势之一; 想知道内幕,下个代码瞄瞄). 通过查阅代码,grub里面的与之对应的函数大概流程如下,都简明易懂,就不多解析咯.123451. GRUB_MOD_INIT(blscfg) &#x2F;&#x2F; gurb在启动时,初始化&#39;blscfg&#39;2. grub_cmd_blscfg (grub_extcmd_context_t ctxt UNUSED,int argc UNUSED,char **args UNUSED) &#x2F;&#x2F; 命令的实现3. find_entry (struct find_entry_info *info) &#x2F;&#x2F; 查找启动列表4. read_entry (const char *filename,const struct grub_dirhook_info *dirhook_info UNUSED,void *data) &#x2F;&#x2F; 找到就将列表读出来5. bls_add_keyval(struct bls_entry *entry, char *key, char *val) &#x2F;&#x2F; 把列表里面参数解析并添加 9 到此,内核启动时通过boootloader添加启动参数就结束了. 多说一句,grub2-mkconfig命令也可以有类似功能.好, Red Hat Enterprise Linux 8 (RHEL8) 的新玩意 第4篇 通过grub配置Kernel启动参数就介绍完了. 想要了解更多? 可以参考 GRUB Manual 或者源代码.想要亲手玩一下新玩具? 请随时去 https://www.redhat.com 下载最新的 REHL 8 也欢迎关注 addos 微信公众号获取更多的,有意思的新玩具 :-)","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"当执行 echo \"X\" > /proc/sysrq-trigger 的时候, 这个X究竟有些什么值可以输入?","slug":"linux_oostech_sysrq_trigger","date":"2021-02-16T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/16/linux_oostech_sysrq_trigger/","link":"","permalink":"http://www.oostech.com/2021/02/16/linux_oostech_sysrq_trigger/","excerpt":"","text":"1 当执行 echo “X” &gt; /proc/sysrq-trigger 的时候, 这个X究竟有些什么值可以输入?1.2 具体定义如下,每一个操作码都对应一个处理函数, “NULL” 就表示发了也白搭:-), 空的,没人干活呀.虽然没人干活,发个提醒还是需要的,所以在message里面能看到类似help的信息).1234567891011121314151617181920212223242526272829303132333435363738static struct sysrq_key_op *sysrq_key_table[36] &#x3D; &#123; &amp;sysrq_loglevel_op, &#x2F;* 0 顾名思义就是设置console的log级别了 其实就是console_loglevel &#x3D; key - &#39;0&#39;;*&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 1 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 2 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 3 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 4 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 5 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 6 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 7 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 8 *&#x2F; &amp;sysrq_loglevel_op, &#x2F;* 9 *&#x2F; NULL, &#x2F;* a 不干活,预留的给sparc*&#x2F; &amp;sysrq_reboot_op, &#x2F;* b 就是reboot咯*&#x2F; &amp;sysrq_crash_op, &#x2F;* c 产生一个crash, 是对一个空指针操作来trigger*&#x2F; &amp;sysrq_showlocks_op, &#x2F;* d 根据是否有CONFIG_LOCKDEP定义输出locks*&#x2F; &amp;sysrq_term_op, &#x2F;* e 这个厉害了,发SIGTERM 给所有的用户进程.*&#x2F; &amp;sysrq_moom_op, &#x2F;* f 调用schedule_work来产生一个OOM execution, 最终是调用了out_of_memory函数,这里面就有点复杂了,下篇再总结这个*&#x2F; NULL, &#x2F;* g 预留给kernel的debug用*&#x2F; NULL, &#x2F;* h 预留给帮助用 *&#x2F; &amp;sysrq_kill_op, &#x2F;* i 这个更直接,发SIGKILL给所有的用户进程*&#x2F; &amp;sysrq_thaw_op, &#x2F;* j 通过SysRq来紧急解冻所有的文件系统,前提是有CONFIG_BLOCK内核配置 *&#x2F; &amp;sysrq_SAK_op, &#x2F;* k 如果有CONFIG_VT 这个调用schedule_work 来操作SAK_work 就是Secure Attention Key 了吧*&#x2F; &amp;sysrq_showallcpus_op, &#x2F;* l 如果定义了CONFIG_SMP, 就输出所有的CPU的back trace *&#x2F; &amp;sysrq_showmem_op, &#x2F;* m 输出内存的信息*&#x2F; &amp;sysrq_unrt_op, &#x2F;* n 这个就给所有RT Tasks 设置NICE*&#x2F; NULL, &#x2F;* o 预留,代表off吧.*&#x2F; &amp;sysrq_showregs_op, &#x2F;* p 输出寄存器的值*&#x2F; &amp;sysrq_show_timers_op, &#x2F;* q 输出时钟事件设备以及等待中的hrtimers*&#x2F; &amp;sysrq_unraw_op, &#x2F;* r 将键盘模式设置为系统默认值*&#x2F; &amp;sysrq_sync_op, &#x2F;* s 做一个临时紧急同步用*&#x2F; &amp;sysrq_showstate_op, &#x2F;* t 调用show_state和show_workqueue_state输出当前系统状态*&#x2F; &amp;sysrq_mountro_op, &#x2F;* u 调用emergency_remount做重新紧急remount*&#x2F; NULL, &#x2F;* v 预留给frame buffer*&#x2F; &amp;sysrq_showstate_blocked_op, &#x2F;* w 输出blocked 的信息*&#x2F; NULL, &#x2F;* x 给不同的体系的dump 预留*&#x2F; NULL, &#x2F;* y 给sparc64预留*&#x2F; &amp;sysrq_ftrace_dump_op, &#x2F;* z 把ftrace中存的信息输出.*&#x2F;&#125;; 2 主要的执行过程.2.1 write_sysrq_trigger 调用 __handle_sysrq2.2 __handle_sysrq 调用 __sysrq_get_key_op(key) 获取操作码.2.3 __sysrq_get_key_op(key)通过两个for循环, 找到sysrq_key_table对应操作码2.4 而操作码又有对应的处理函数,然后调用它获取返回值.到此,整个过程也就完成了.","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux 实用小代码，基于stat 来显示文件的metadata","slug":"linux_oostech_show_file_metadata","date":"2021-02-15T13:00:00.000Z","updated":"2021-02-16T16:00:00.000Z","comments":false,"path":"2021/02/15/linux_oostech_show_file_metadata/","link":"","permalink":"http://www.oostech.com/2021/02/15/linux_oostech_show_file_metadata/","excerpt":"","text":"Simple Linux code based on stat to display file metadataIf you want to know the metadata of a file in Linux system, you can check the detail below. 如果你想了解关于Linux 文件的元数据信息,欢迎继续阅读此文. 1 There is a system call named stat which can retrive the metadata of a file; so we can write a simple code to use it to get the file metatda. 我们可以通过写一段简单的代码来使用系统调用 stat, 然后执行它来获取到文件的元数据信息.1.1 let’ check the struct stat first; so that we can know what info we can retrive by this system call. 首先看一下用到结构体,这样就可以知道可以从中得到一些什么元数据信息.123456789101112131415struct stat &#123; dev_t st_dev; &#x2F;* ID of device containing file - 存储此文件的设备ID, 随后可以通过major,minor 解析*&#x2F; ino_t st_ino; &#x2F;* inode number - inode 号码, 可以理解为索引节点*&#x2F; mode_t st_mode; &#x2F;* file type and mode(detail below) - 文件的类型以及读,写,执行权限(下面st_mode有详细的描述)*&#x2F; nlink_t st_nlink; &#x2F;* number of hard links - 文件对应的硬链接数 *&#x2F; uid_t st_uid; &#x2F;* user ID of owner - 文件的用户ID*&#x2F; gid_t st_gid; &#x2F;* group ID of owner - 文件的组ID *&#x2F; dev_t st_rdev; &#x2F;* device ID (if special file) - 文件的设备ID, 针对一些特殊的文件(设备文件),比如块,字符等设备*&#x2F; off_t st_size; &#x2F;* total size, in bytes - 文件的大小,以byte为单位*&#x2F; blksize_t st_blksize; &#x2F;* blocksize for filesystem I&#x2F;O - 文件在文件系统所占块大小*&#x2F; blkcnt_t st_blocks; &#x2F;* number of 512B blocks allocated - 分配的磁盘块,已一个block为512Bytes*&#x2F; struct timespec st_atim; &#x2F;* time of last access - 文件最近的访问时间 *&#x2F; struct timespec st_mtim; &#x2F;* time of last modification - 文件最近的修改时间*&#x2F; struct timespec st_ctim; &#x2F;* time of last status change - 文件最近的状态变化时间*&#x2F;&#125; 1.2 The file type and mode (st_mode); total 16 bit, the lowest 12bit represent file priviledge and the highest 4 bit represent file type. 文件类型和权限存储在 st_mode 字段中, 其中的低12位储存了对应的文件权限,而高4位则储存了对应文件类型.1.2.1 st_mode file type 文件类型1234567S_IFSOCK socket 套接字文件S_IFLNK symbolic link 字符链接文件S_IFREG regular file 常规文件S_IFBLK block device 块设备文件S_IFDIR directory 文件夹S_IFCHR character device 字符文件S_IFIFO FIFO FIFO文件 1.2.1 st_mode file mode 文件权限1234567891011Owner (also known as user): The permissions granted to the owner of the file. 这个文件的用户的对应权限.Group: The permissions granted to users who are members of the file’s group. 这个文件的用户组的对应权限Other: The permissions granted to everyone else. 这个文件的其他用户的对应权限Read: The contents of the file may be read. 读权限, 表明文件可以被对应的用户读取.Write: The contents of the file may be changed.写权限,表明文件可以被对应的用户写入.Execute: The file may be executed. In order to execute a script file, both read and execute permissions are required. 执行权限, 表明文件可以被对应的用户执行.如果对于要执行脚本文件来说,读和执行权限是必须的. 2 Let’s have a quick check against file metadata which displayed by demo app, 快速的通过我们写的例子应用来看一下文件的元数据.2.1 display the character device file 获取字符设备文件的信息.1234567891011121314151617[root@sam samapplications]# filemetadata &#x2F;dev&#x2F;ttyS0&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; File Metadata &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Directory: &#x2F;dev&#x2F;ttyS0File type: Character deviceDevice containing: major&#x3D;0 minor&#x3D;5inode number: 1146Mode: rw-rw----Device number (st_rdev): major&#x3D;4; minor&#x3D;64Number of (hard) links: 1Ownership: UID&#x3D;0 GID&#x3D;18File size: 0 bytes : 0 KBI&#x2F;O block size: 4096 bytesNumber of (512B) blocks allocated: 0Last file access: Sat Jun 15 19:45:34 2019Last file modification: Sat Jun 15 19:45:34 2019Last status change: Sat Jun 15 19:45:34 2019&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 2.2 display block device file; 获取块设备文件的信息1234567891011121314151617[root@sam samapplications]# filemetadata &#x2F;dev&#x2F;nvme0n1p2&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; File Metadata &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Directory: &#x2F;dev&#x2F;nvme0n1p2File type: Block deviceDevice containing: major&#x3D;0 minor&#x3D;5inode number: 15059Mode: rw-rw----Device number (st_rdev): major&#x3D;259; minor&#x3D;2Number of (hard) links: 1Ownership: UID&#x3D;0 GID&#x3D;6File size: 0 bytes : 0 KBI&#x2F;O block size: 4096 bytesNumber of (512B) blocks allocated: 0Last file access: Sat Jun 15 19:45:34 2019Last file modification: Sat Jun 15 19:45:34 2019Last status change: Sat Jun 15 19:45:34 2019&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 2.3 display regular file; 获取常规文件的信息1234567891011121314151617181920212223242526272829303132[root@sam samapplications]# filemetadata &#x2F;tmp&#x2F;rhel-server-7.3-x86_64-dvd.iso&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; File Metadata &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Directory: &#x2F;tmp&#x2F;rhel-server-7.3-x86_64-dvd.isoFile type: Regular fileDevice containing: major&#x3D;259 minor&#x3D;2inode number: 1137863993Mode: rw-r--r--Number of (hard) links: 1Ownership: UID&#x3D;107 GID&#x3D;107File size: 3793747968 bytes : 3704832 KBI&#x2F;O block size: 4096 bytesNumber of (512B) blocks allocated: 7409672Last file access: Sat Jun 15 19:45:50 2019Last file modification: Sun Apr 28 09:11:51 2019Last status change: Sat Jun 1 21:35:50 2019&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[root@sam samapplications]# filemetadata &#x2F;tmp&#x2F;metadata-link&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; File Metadata &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Directory: &#x2F;tmp&#x2F;metadata-linkFile type: Symbolic (soft) linkDevice containing: major&#x3D;0 minor&#x3D;40inode number: 287970Mode: rwxrwxrwxNumber of (hard) links: 1Ownership: UID&#x3D;0 GID&#x3D;0File size: 8 bytes : 0 KBI&#x2F;O block size: 4096 bytesNumber of (512B) blocks allocated: 0Last file access: Sat Jun 15 21:58:29 2019Last file modification: Sat Jun 15 21:58:24 2019Last status change: Sat Jun 15 21:58:24 2019&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 3 Source code of filemetadata 我们可以通过源代码看它的具体实现.12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394&#x2F;* * Draft by Sam at 06-16-2019 * show the metadata of a file * *&#x2F;#include &lt;sys&#x2F;stat.h&gt;#include &lt;time.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;stdio.h&gt;&#x2F;* display the file permision * mode_t(file type and mode) of statBuffer as a parameter * *&#x2F;void disFilePerm(mode_t filePerm)&#123; char userR &#x3D; 0, userW &#x3D; 0, userX &#x3D; 0; char groupR &#x3D; 0, groupW &#x3D; 0, groupX &#x3D; 0; char otherR &#x3D; 0, otherW &#x3D; 0, otherX &#x3D; 0; userR &#x3D; (filePerm &amp; S_IRUSR) ? &#39;r&#39; : &#39;-&#39;; userW &#x3D; (filePerm &amp; S_IWUSR) ? &#39;w&#39; : &#39;-&#39;; userX &#x3D; (filePerm &amp; S_IXUSR) ? &#39;x&#39; : &#39;-&#39;; groupR &#x3D; (filePerm &amp; S_IRGRP) ? &#39;r&#39; : &#39;-&#39;; groupW &#x3D; (filePerm &amp; S_IWGRP) ? &#39;w&#39; : &#39;-&#39;; groupX &#x3D; (filePerm &amp; S_IXGRP) ? &#39;x&#39; : &#39;-&#39;; otherR &#x3D; (filePerm &amp; S_IROTH) ? &#39;r&#39; : &#39;-&#39;; otherW &#x3D; (filePerm &amp; S_IWOTH) ? &#39;w&#39; : &#39;-&#39;; otherX &#x3D; (filePerm &amp; S_IXOTH) ? &#39;x&#39; : &#39;-&#39;; printf(&quot;Mode:\\t\\t\\t\\t\\t%c%c%c%c%c%c%c%c%c\\n&quot;,userR,userW,userX,groupR,groupW,groupX,otherR,otherW,otherX);&#125;&#x2F;* * display the stat buffer * the pointer of statBuffer as parameter * *&#x2F;void displayStatInfo(struct stat *statBuffer, const char *filepath)&#123; printf(&quot;\\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; File Metadata &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\\n\\n&quot;); &#x2F;* print the file type *&#x2F; printf(&quot;Directory:\\t\\t\\t\\t%s\\n&quot;,filepath); printf(&quot;File type:\\t\\t\\t\\t&quot;); switch (statBuffer-&gt;st_mode &amp; S_IFMT) &#123; case S_IFREG: printf(&quot;Regular file\\n&quot;); break; case S_IFDIR: printf(&quot;Directory\\n&quot;); break; case S_IFCHR: printf(&quot;Character device\\n&quot;); break; case S_IFBLK: printf(&quot;Block device\\n&quot;); break; case S_IFLNK: printf(&quot;Symbolic (soft) link\\n&quot;); break; case S_IFIFO: printf(&quot;FIFO or pipe\\n&quot;); break; case S_IFSOCK: printf(&quot;Socket\\n&quot;); break; default: printf(&quot;Unknown file type\\n&quot;); break; &#125; printf(&quot;Device containing:\\t\\t\\tmajor&#x3D;%ld minor&#x3D;%ld\\n&quot;,(long) major(statBuffer-&gt;st_dev), (long) minor(statBuffer-&gt;st_dev)); printf(&quot;inode number:\\t\\t\\t\\t%ld\\n&quot;, (long) statBuffer-&gt;st_ino); disFilePerm(statBuffer-&gt;st_mode); if (S_ISCHR(statBuffer-&gt;st_mode) || S_ISBLK(statBuffer-&gt;st_mode))&#123; printf(&quot;Device number (st_rdev):\\t\\tmajor&#x3D;%ld; minor&#x3D;%ld\\n&quot;,(long) major(statBuffer-&gt;st_rdev), (long) minor(statBuffer-&gt;st_rdev)); &#125; printf(&quot;Number of (hard) links:\\t\\t\\t%ld\\n&quot;, (long) statBuffer-&gt;st_nlink); printf(&quot;Ownership:\\t\\t\\t\\tUID&#x3D;%ld GID&#x3D;%ld\\n&quot;, (long) statBuffer-&gt;st_uid, (long) statBuffer-&gt;st_gid); printf(&quot;File size:\\t\\t\\t\\t%lld bytes : %lld KB\\n&quot;, (long long) statBuffer-&gt;st_size, statBuffer-&gt;st_size&#x2F;1024); printf(&quot;I&#x2F;O block size:\\t\\t\\t\\t%ld bytes\\n&quot;, (long) statBuffer-&gt;st_blksize); printf(&quot;Number of (512B) blocks allocated:\\t%lld\\n&quot;, (long long) statBuffer-&gt;st_blocks); printf(&quot;Last file access:\\t\\t\\t%s&quot;, ctime(&amp;statBuffer-&gt;st_atime)); printf(&quot;Last file modification:\\t\\t\\t%s&quot;, ctime(&amp;statBuffer-&gt;st_mtime)); printf(&quot;Last status change:\\t\\t\\t%s&quot;, ctime(&amp;statBuffer-&gt;st_ctime)); printf(&quot;\\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\\n\\n&quot;); &#125; &#x2F;* * return data * 1 for Invalid patameters * 2 for lstat error * 0 for sucess * *&#x2F;int main(int argc, char *argv[])&#123; struct stat statBuffer; if (argc !&#x3D; 2 || argv[1] &#x3D;&#x3D; NULL)&#123; printf(&quot;Usage: filemetadata &lt;FILENAME&gt; \\n&quot;); return 1; &#125; &#x2F;* just use lstat to show the info; because lstat() is identical to stat(), except that if pathname is a symbolic link, then it returns information about the link * itself, not the file that it refers to. *&#x2F; if (lstat(argv[1], &amp;statBuffer) &#x3D;&#x3D; -1)&#123; perror(&quot;filemetadata&quot;); return 2; &#125; displayStatInfo(&amp;statBuffer, argv[1]); return 0; &#125; Ok, we know the Metadata of a file via stat system call as discripted above; you can please try the code and modify to study more about that.到此为止,我们初步了解了Linux 文件的元数据大概有些什么信息,以及如何通过stat系统调用来获取它们. 如果向要深入了解,可以尝试修改上面的代码并编译看能否取更有意思的输出. To know more? you can follow my wechat public account ADVANZONE.想要了解更多? 欢迎关注 Addos 微信公众号获取更多的,有意思的玩意咯 :-)","categories":[{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"}],"tags":[]},{"title":"Linux小玩意之 tmux 常用命令","slug":"linux_oostech_tmux","date":"2021-02-13T16:00:00.000Z","updated":"2021-02-13T16:00:00.000Z","comments":false,"path":"2021/02/14/linux_oostech_tmux/","link":"","permalink":"http://www.oostech.com/2021/02/14/linux_oostech_tmux/","excerpt":"","text":"tmux 简介tmux 是一个终端复用器类自由软件，功能类似 GNU Screen，但使用 ISC许可证发布。用户可以通过 tmux 在一个终端内管理多个分离的会话，窗口及面板，对于同时使用多个命令行，或多个任务时非常方便。 简介来自 tmux 1 启动一个新的session 方法 11tmux 方法 21tmux new 方法 31tmux new -myname 2 关闭一个session1tmux kill-session -t myname 3 detach 当前的session 方法 11ctrl +b 然后 d 方法 21tmux detach 4 列出当前的session1tmux ls 5 attach 一个session1tmux at -t myname 6 切换session1tmux switch -t myname 7 重新命名session1tmux rename-session -t oldName &lt;new-name&gt; 8 设置允许鼠标滚动1crtl + b 然后 ：set mouse on 9 设置关闭鼠标1crtl + b 然后 ：set mouse off 10 划分窗口 上下划分1tmux split-window 左右划分1tmux split-window -h 11 切换窗口 切换到上方1tmux select-pane -U 切换到下方1tmux select-pane -D 切换到左方1tmux select-pane -L 切换到右方1tmux select-pane -R 12 帮助信息1man tmux","categories":[{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"}],"tags":[]}],"categories":[{"name":"内核文档","slug":"内核文档","permalink":"http://www.oostech.com/categories/%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/"},{"name":"Linux 代码(原创)","slug":"Linux-代码-原创","permalink":"http://www.oostech.com/categories/Linux-%E4%BB%A3%E7%A0%81-%E5%8E%9F%E5%88%9B/"},{"name":"IPMI 技巧(原创)","slug":"IPMI-技巧-原创","permalink":"http://www.oostech.com/categories/IPMI-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"},{"name":"云原生 容器(原创)","slug":"云原生-容器-原创","permalink":"http://www.oostech.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F-%E5%AE%B9%E5%99%A8-%E5%8E%9F%E5%88%9B/"},{"name":"Linux 技巧(原创)","slug":"Linux-技巧-原创","permalink":"http://www.oostech.com/categories/Linux-%E6%8A%80%E5%B7%A7-%E5%8E%9F%E5%88%9B/"},{"name":"网络 OVS(原创)","slug":"网络-OVS-原创","permalink":"http://www.oostech.com/categories/%E7%BD%91%E7%BB%9C-OVS-%E5%8E%9F%E5%88%9B/"}],"tags":[]}